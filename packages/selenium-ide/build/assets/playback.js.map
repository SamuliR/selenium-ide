{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///./content/commands-api.js","webpack:///../node_modules/scroll-into-view-if-needed/es/index.js","webpack:///../node_modules/compute-scroll-into-view/es/index.js","webpack:///./content/escape.js","webpack:///./content/selenium-api.js","webpack:///./content/selenium-browserbot.js","webpack:///./content/PatternMatcher.js","webpack:///./content/targetSelector.js","webpack:///./content/region.js","webpack:///./content/prompt-injector.js"],"names":["root","factory","exports","module","define","amd","a","i","self","this","__webpack_require__","_region","_promptInjector","selenium","Selenium","BrowserBot","createForWindow","window","locatorBuilders","LocatorBuilders","contentSideexTabId","targetSelector","doCommands","request","_sender","sendResponse","commands","preprocessParameter","new_page","sideex_new_page","page_done","sideex_page_done","ajax_done","sideex_ajax_done","dom_time","value","target","result","e","message","upperCase","charAt","toUpperCase","slice","document","body","setAttribute","returnValue","Promise","then","removeAttribute","catch","reason","mySideexTabId","prepareToInteract","rect","prepareToInteract_","locator","buildLocators","element","browserbot","findElement","locators","buildAll","resolveLocator","find","_ref","_ref2","_slicedToArray","strat","test","selectMode","selecting","TargetSelector","win","detach","Array","browser","runtime","sendMessage","selectTarget","selectNext","cancelSelectTarget","region","cleanup","removeRegion","editRegion","attach","_listener","onMessage","addListener","showElement","targetValue","resolve","isOptionsObject","options","Object","keys","length","__webpack_exports__","behavior","__WEBPACK_IMPORTED_MODULE_0_compute_scroll_into_view__","computeOptions","block","inline","getOptions","actions","canSmoothScroll","style","forEach","el","top","left","scroll","scrollTop","scrollLeft","defaultBehavior","isElement","nodeType","canOverflow","overflow","skipOverflowHiddenElements","isScrollable","clientHeight","scrollHeight","clientWidth","scrollWidth","getComputedStyle","overflowY","overflowX","alignNearest","scrollingEdgeStart","scrollingEdgeEnd","scrollingSize","scrollingBorderStart","scrollingBorderEnd","elementEdgeStart","elementEdgeEnd","elementSize","scrollMode","boundary","checkBoundary","node","TypeError","scrollingElement","documentElement","frames","cursor","parentNode","host","push","viewportWidth","visualViewport","width","innerWidth","viewportHeight","height","innerHeight","viewportX","scrollX","pageXOffset","viewportY","scrollY","pageYOffset","_target$getBoundingCl","getBoundingClientRect","targetHeight","targetWidth","targetTop","targetRight","right","targetBottom","bottom","targetLeft","targetBlock","targetInline","computations","index","frame","_frame$getBoundingCli","_height","_width","_top","_left","frameStyle","borderLeft","parseInt","borderLeftWidth","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","blockScroll","inlineScroll","scrollbarWidth","offsetWidth","scrollbarHeight","offsetHeight","Math","max","min","unescapeHtml","str","replace","escapeAttr","spaceS","spaceE","tempStr","tempAttr","tempValue","processedTag","flag","finishedProcessing","indexOf","substring","equal","quotS","quotE","lastIndexOf","replaceChar","dquotS","dquotE","doEscape","m","&","\"","'","<",">","checkType","cutStr","replaceStr","mode","pos","doFlag","charType","ampersandExists","escapeHTML","smallIndex","greatIndex","tempTag","processed","tempSmallIndex","tagsExists","_commandsApi","_escape","_seleniumBrowserbot","_closurePolyfill","_utils","_classCallCheck","optionLocatorFactory","OptionLocatorFactory","page","defaultTimeout","DEFAULT_TIMEOUT","mouseSpeed","DEFAULT_MOUSE_SPEED","throwIfNoVarNameProvided","varName","Error","waitUntil","condition","timeout","failureMessage","reject","count","retryInterval","interval","setInterval","clearInterval","error","getClientXY","coordString","coords","x","y","split","Number","prototype","getElementPositionLeft","getElementPositionTop","getCoords","_element","goog","math","Coordinate","unableToLocateTargetElementError","RIGHT_MOUSE_CLICK","decorateFunctionWithTimeout","f","callback","timeoutTime","getTimeoutTime","Date","getTime","SeleniumError","proxyInjectionMode","location","reset","selectWindow","resetPopups","eval","script","argv","arguments","undefined","scoped","JSON","stringify","doEvaluateConditional","doVerifyChecked","type","checked","doVerifyNotChecked","doVerifyEditable","isEditable","doVerifyNotEditable","doVerifySelectedValue","doVerifyNotSelectedValue","doVerifyText","doAssertText","doVerifyNotText","doAssertNotText","doVerifyValue","doVerifyTitle","string","normalizeSpaces","getTitle","doVerifyElementPresent","match","doVerifyElementNotPresent","doVerify","variableName","expected","doAssert","res","rej","getVar","variable","actual","doAssertChecked","doAssertNotChecked","doAssertEditable","doAssertNotEditable","doAssertSelectedValue","doVerifySelectedLabel","selectLocator","selectedLabel","findSelectedOptionProperty","doAssertSelectedLabel","doAssertNotSelectedValue","findElementVisible","bot","dom","isShown","visibleText","getVisibleText","doAssertValue","doAssertTitle","doAssertElementPresent","doAssertElementNotPresent","doStore","storeStr","storeVar","doStoreEval","doStoreText","doStoreValue","trim","doStoreTitle","doc","getDocument","title","doStoreXpathCount","xpath","evaluateXPathCount","doStoreAttribute","attributeValue","findAttribute","doEcho","echoStr","doWaitForElementPresent","isElementPresent","bind","doWaitForElementNotPresent","doWaitForElementVisible","isVisible","doWaitForElementNotVisible","doWaitForElementEditable","doWaitForElementNotEditable","doWaitPreparation","doPrePageWait","doPageWait","doAjaxWait","doDomWait","sideex_dom_time","doClick","action","click","doDoubleClick","doubleClick","doContextMenu","rightClick","doClickAt","doDoubleClickAt","doClickRandom","locateRandomElementByCss","doContextMenuAt","doFocus","focus","events","fire","EventType","FOCUS","doShiftKeyDown","shiftKeyDown","core","shiftKeyDown_","doShiftKeyUp","doMetaKeyDown","metaKeyDown","metaKeyDown_","doMetaKeyUp","doAltKeyDown","altKeyDown","altKeyDown_","doAltKeyUp","doControlKeyDown","controlKeyDown","controlKeyDown_","doControlKeyUp","prepareToInteractWith_","doMouseOver","moveMouse","doMouseOut","triggerMouseEvent","doMouseDown","doMouseDownRight","doMouseDownAt","clientXY","doMouseDownRightAt","doMouseUp","doMouseUpRight","doMouseUpAt","doMouseUpRightAt","doMouseMove","doMouseMoveAt","doType","setValue","doSendKeys","replaceKeys","doSetSpeed","getSpeed","findToggleButton","doCheck","doUncheck","doSelect","optionLocator","option","fromLocatorString","findOption","selectOption","doAddSelection","addSelection","doRemoveSelection","removeSelection","doRemoveAllSelections","doSubmit","formLocator","form","submit","makePageLoadCondition","_isNewPageLoaded","_abortXhrRequest","doOpen","url","ignoreResponseCode","toLowerCase","openLocation","doOpenWindow","windowID","openWindow","doSelectWindow","doSelectPopUp","selectPopUp","doDeselectPopUp","doSelectFrame","selectFrame","getWhetherThisFrameMatchFrameExpression","currentFrameString","doesThisFrameMatchFrameExpression","getWhetherThisWindowMatchWindowExpression","_currentWindowString","opener","doWaitForPopUp","targetWindow","getWindowByName","names","getNonTopWindowNames","browserVersion","isKonqueror","href","isSafari","buttonWindow","getCurrentWindow","readyState","dontCheckAlertsAndConfirms","doGoBack","goBack","doRefresh","refresh","doClose","close","ensureNoUnhandledPopups","hasAlerts","getNextAlert","hasConfirmations","getNextConfirmation","isAlertPresent","isPromptPresent","hasPrompts","isConfirmationPresent","getAlert","Assert","fail","getConfirmation","getPrompt","getNextPrompt","getLocation","getBodyText","bodyText","getValue","getText","getEval","extractExceptionMessage","isChecked","getTable","tableCellAddress","pattern","pieces","tableName","row","col","table","rows","cells","getSelectedLabels","findSelectedOptionProperties","getSelectedLabel","getSelectedValues","getSelectedValue","getSelectedIndexes","getSelectedIndex","getSelectedIds","getSelectedId","isSomethingSelected","selected","property","selectedOptions","propVal","getSelectOptions","selectOptions","text","getAttribute","attributeLocator","isTextPresent","allText","patternMatcher","PatternMatcher","strategy","strategies","glob","matcher","globContains","exact","matches","findElementOrNull","tagName","String","visibility","findEffectiveStyleProperty","_isDisplayed","propertyValue","findEffectiveStyle","currentStyle","defaultView","disabled","readOnlyNode","getAttributeNode","nodeValue","getAllButtons","getAllLinks","getAllFields","doSetMouseSpeed","pixels","intValue","constructor","getMouseSpeed","doDragAndDrop","movementsString","clientStartXY","clientStartX","clientStartY","movements","movementX","movementY","clientFinishX","clientFinishY","move","current","dest","abs","clientX","clientY","doDragAndDropToObject","locatorOfObjectToBeDragged","locatorOfDragDestinationObject","draggable","triggerDragEvent","startX","startY","destinationLeftX","destinationTopY","destinationWidth","getElementWidth","destinationHeight","getElementHeight","round","doWindowFocus","doWindowMaximize","screen","moveTo","screenX","resizeTo","availWidth","availHeight","getHtmlSource","getElementsByTagName","innerHTML","doSetCursorPosition","position","setSelectionRange","isOpera","createTextRange","range","collapse","moveEnd","moveStart","select","getElementIndex","previousSibling","_isCommentOrEmptyTextNode","isOrdered","locator1","locator2","element1","element2","data","offsetLeft","elementParent","offsetParent","all","clientLeft","parentBorder","border","isNaN","clientTop","offsetTop","getCursorPosition","elementRange","selection","selectRange","createRange","duplicate","setEndPoint","selectionStart","getSelection","_typeof","rangeCount","getExpression","expression","getXpathCount","getCssCount","css","evaluateCssCount","doAssignId","identifier","id","doAllowNativeXpath","allow","setAllowNativeXPath","doIgnoreAttributesWithoutValue","ignore","setIgnoreAttributesWithoutValue","doWaitForCondition","doSetTimeout","doWaitForPageToLoad","doWaitForFrameToLoad","_frameAddress","isNewPageLoaded","abortXhrRequest","log","toString","currentKey","shift","currentKeyIndex","substr","keyName","key","Keyboard","Keys","getCookie","cookie","getCookieByName","name","v","isCookiePresent","doCreateCookie","nameValuePair","optionsString","results","exec","expireDateInMilliseconds","toGMTString","path","khtml","doDeleteCookie","domain","recurse","matched","cookieName","recursivelyDeleteCookie","deleteCookie","doDeleteAllVisibleCookies","cookieNames","getAllCookieNames","pathname","doScroll","doExecuteScript","doExecuteAsyncScript","doRunScript","doRollup","rollupName","kwargs","loop","currentTest","htmlTestRunner","backupManager","backup","item","restore","requiresCallBack","commandStarted","nextCommand","commandComplete","commandError","pendingRollupCommands","rollupFailed","rollupFailedMessage","expandedCommands","RollupManager","getInstance","getRollupRule","getExpandedCommands","failed","rollupFailureMessages","join","errorMessage","doAddScript","scriptContent","scriptTagId","getElementById","msg","head","createElement","appendChild","doRemoveScript","getTagName","removeChild","doUseXpathLibrary","libraryName","getXPathEngine","setXPathEngine","locatorString","locatorType","locatorValue","optionLocators","registerOptionLocators","functionName","locatorName","lowerFirstChar","OptionLocatorByLabel","label","labelMatcher","assertSelected","selectedIndex","OptionLocatorByValue","valueMatcher","selectedValue","OptionLocatorByIndex","equals","OptionLocatorById","idMatcher","selectedId","doEditContent","contentEditable","doChooseCancelOnNextPrompt","cancelNextPrompt","doAnswerOnNextPrompt","answer","setNextPromptResult","doAssertPrompt","getPromptMessage","actualMessage","doAssertAlert","getAlertMessage","doChooseCancelOnNextConfirmation","setNextConfirmationResult","doChooseOkOnNextConfirmation","doAssertConfirmation","getConfirmationMessage","doShowElement","elementForInjectingStyle","rel","getURL","highlightElement","bodyRects","elementRects","zIndex","display","pointerEvents","_scrollIntoViewIfNeeded2","default","centerIfNeeded","className","setTimeout","global","BrowserVersion","topLevelApplicationWindow","topWindow","topFrame","baseUrl","setWindow","currentWindow","currentWindowName","allowNativeXpath","xpathEvaluator","XPathEvaluator","isSubFrameSelected","modalDialogTest","recordedAlerts","recordedConfirmations","recordedPrompts","openedWindows","nextConfirmResult","nextPromptResult","newPageLoaded","pageLoadError","xhr","abortXhr","isXhrSent","isXhrDone","xhrOpenLocation","xhrResponseCode","xhrStatusText","shouldHighlightLocatedElement","uniqueId","pollingForLoad","permDeniedCount","windowPollers","assign","PageBot","_registerAllLocatorFunctions","recordPageLoad","engineName","setCurrentEngine","getCurrentEngine","encodeURIComponentWithASPHack","uri","aggressiveEncoding","encodeURIComponent","isIE","IEBrowserBot","KonquerorBrowserBot","OperaBrowserBot","SafariBrowserBot","MozillaBrowserBot","doModalDialogTest","cancelNextConfirmation","relayBotToRC","s","piMode","relayToRC","t","eventType","canBubble","button","getOwnerDocument","view","getWindow","evt","createEvent","initMouseEvent","initEvent","shiftKey","metaKey","altKey","ctrlKey","dispatchEvent","scrollBy","getXpathOfElement","parentElement","siblingElement","children","tagCount","totalTagCount","isFound","scriptTag","_windowClosed","c","closed","ignored","uniqueKey","_modifyWindow","seleniumKey","modifyWindowToRecordPopUpDialogs","ex","console","modifySeparateTestWindowToDetectPageLoads","_selectWindowByTitle","_selectWindowByName","_selectWindowByWindowId","_selectTopWindow","windowId","_selectFirstNonTopWindow","windowName","getWindowNameByTitle","parent","_getFrameElement","contentWindow","isHTA","isDom","mySandbox","Components","utils","Sandbox","evalInSandbox","autWindow","permDenied","currentFrame","abort","onXhrStateChange","method","status","XMLHttpRequest","onreadystatechange","open","setRequestHeader","send","statusText","child","setIFrameLocation","iframe","src","getCurrentPage","windowNeedsModifying","appInfo","classes","getService","interfaces","nsIXULAppInfo","nsIVersionComparator","compare","version","alert","originalWindow","browserBot","windowToModify","firefox","unwrap","seleniumAlert","call","confirm","prompt","originalOpen","originalOpenReference","newOpen","windowFeatures","replaceFlag","myOriginalOpen","openedWindow","newOpenReference","setOriginalRef","windowObject","isPollingForLoad","marker","frameElement","htaSubFrame","_isHTASubFrame","pollForLoad","caught","parentContainsIdenticallyNamedFrame","_getFrameElementByName","locateElementByName","loadFunction","originalDocument","originalLocation","originalHref","isSamePage","_isSamePage","rs","getReadyState","currentHref","newMarker","currentlySelectedWindow","currentlySelectedWindowMarker","reschedulePoller","currentDocument","currentLocation","sameDoc","_isSameDocument","sameLoc","currentHash","originalHash","sameHref","markedLoc","pageUnloading","XXXreschedulePoller","buttonName","createTextNode","tools","onclick","runScheduledPollers","oldPollers","doNotModify","winName","ok","windowTitle","nonTopWindowNames","testWindow","_handleClosedSubFrame","window_","getUserWindow","missing","setShouldHighlightElement","shouldHighlight","locationStrategies","locatorFunction","locatorPrefix","prefix","findElementBy","inDocument","inWindow","startsWith","locateElementByXPath","locateElementByDomTraversal","locateElementByIdentifier","ck","ckPairs","ckNameValue","decodeURIComponent","ckName","getAllRawCookieNames","_cookieName","rawCookieNames","rawCookieNumber","_maybeDeleteCookie","_recursivelyDeleteCookieDomains","dotIndex","_recursivelyDeleteCookie","slashIndex","deleted","parse_locator","findElementsLikeWebDriver","how","using","by","findElements","toReturn","inject","cache","addElement","locateElementById","elements","n","attributes","filter","selectElements","domTraversal","locateElementByStoredReference","locateElementByWebDriver","selectSingleNode","createNSResolver","_namespaceResolver","locateElementsByXPath","selectNodes","selector","locateElementByLinkText","linkText","links","attributePos","elementLocator","attributeName","isDefAndNotNull","optionToSelect","changed","CHANGE","checkMultiselect","multiple","replaceText","stringValue","SELECT","maxLengthAttr","actualValue","maxLength","ownerDocument","designMode","clickElement","_fireEventOnElement","doubleClickElement","contextMenuOnElement","_modifyElementTarget","findClickableElement","newTarget","hasAttribute","_handleClickingImagesInsideLinks","itrElement","_getTargetWindow","_getFrameFromGlobal","history","back","goForward","forward","isChrome","reload","selectElementsBy","filterType","filterFunction","filterFunctions","selectedElements","filterExpr","defaultFilterType","locateElementByCss","random","promptResponse","postMessage","direction","command","promptMessage","confirmationResponse","confirmationMessage","alertResponse","alertMessage","_possibleConstructorReturn","__proto__","getPrototypeOf","closedError","windowClosed","oldShowModalDialog","showModalDialog","args","features","doc_location","end_of_base_ref","base_ref","runInterval","runOptions","fullURL","escape","pageUnloadDetector","addEventListener","attachEvent","canAccessThisWindow","canAccessCurrentlySelectedWindow","de","locateElementByIdentifer","currentPath","hash","wasChecked","removeEventListener","detachEvent","_SeleniumError","selectStrategy","strategyName","possibleNewStrategyName","RegExp","$1","possibleNewPattern","$2","matchStrategy","regexp","regexpString","regex","regexpi","regexi","globString","regexpFromGlobContains","regexpFromGlob","convertGlobMetaCharsToRegexpMetaChars","re","exactMatchPattern","cleanupCallback","div","insertBefore","firstChild","r","highlight","preventDefault","stopPropagation","elementFromPoint","or","cb","canvasExists","container","canvas","cornerSize","tlc","createHotCorner","updateRegion","endX","endY","trc","blc","brc","createRegion","backgroundColor","opacity","setStyle","mousedown","mouseup","setEvents","buttonContainer","buttons","innerText","hideButtons","calculateRectFromCoords","cancel","alignItems","justifyContent","styleButton","createButtons","mouseOffset","STATES","create","update","resize","state","pageX","pageY","mousemove","mouseX","mouseY","dx","dy","moveRegion","canvasRect","showButtons","p1","p2","size","color","padding","margin","borderRadius","outline","textTransform","elementForInjectingScript","handler","event","source","response","handleMessage","_webextensionPolyfill"],"mappings":"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","file":"playback.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/*\n * Copyright 2017 SideeX committers\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\nimport browser from 'webextension-polyfill'\nimport './closure-polyfill'\nimport TargetSelector from './targetSelector'\nimport Selenium from './selenium-api'\nimport BrowserBot from './selenium-browserbot'\nimport LocatorBuilders from './locatorBuilders'\nimport { editRegion, removeRegion } from './region'\nimport { attach } from './prompt-injector'\n\nexport const selenium = new Selenium(BrowserBot.createForWindow(window, true))\nconst locatorBuilders = new LocatorBuilders(window)\nlet contentSideexTabId = window.contentSideexTabId\nlet targetSelector\n\nattach(selenium)\n\nfunction doCommands(request, _sender, sendResponse) {\n  if (request.commands) {\n    if (request.commands == 'waitPreparation') {\n      selenium['doWaitPreparation']('', selenium.preprocessParameter(''))\n      sendResponse({})\n    } else if (request.commands == 'prePageWait') {\n      selenium['doPrePageWait']('', selenium.preprocessParameter(''))\n      sendResponse({ new_page: window.sideex_new_page })\n    } else if (request.commands == 'pageWait') {\n      selenium['doPageWait']('', selenium.preprocessParameter(''))\n      sendResponse({ page_done: window.sideex_page_done })\n    } else if (request.commands == 'ajaxWait') {\n      selenium['doAjaxWait']('', selenium.preprocessParameter(''))\n      sendResponse({ ajax_done: window.sideex_ajax_done })\n    } else if (request.commands == 'domWait') {\n      selenium['doDomWait']('', selenium.preprocessParameter(''))\n      sendResponse({ dom_time: window.sideex_new_page })\n    } else if (request.commands === 'evaluateConditional') {\n      try {\n        let value = selenium['doEvaluateConditional'](request.target)\n        sendResponse({ result: 'success', value: value })\n      } catch (e) {\n        sendResponse({ result: e.message })\n      }\n    } else {\n      const upperCase =\n        request.commands.charAt(0).toUpperCase() + request.commands.slice(1)\n      if (selenium['do' + upperCase] != null) {\n        try {\n          document.body.setAttribute('SideeXPlayingFlag', true)\n          let returnValue = selenium['do' + upperCase](\n            selenium.preprocessParameter(request.target),\n            selenium.preprocessParameter(request.value)\n          )\n          if (returnValue instanceof Promise) {\n            // The command is a asynchronous function\n            returnValue\n              .then(function() {\n                // Asynchronous command completed successfully\n                document.body.removeAttribute('SideeXPlayingFlag')\n                sendResponse({ result: 'success' })\n              })\n              .catch(function(reason) {\n                // Asynchronous command failed\n                document.body.removeAttribute('SideeXPlayingFlag')\n                sendResponse({ result: reason })\n              })\n          } else {\n            // Synchronous command completed successfully\n            document.body.removeAttribute('SideeXPlayingFlag')\n            sendResponse({ result: 'success' })\n          }\n        } catch (e) {\n          // Synchronous command failed\n          document.body.removeAttribute('SideeXPlayingFlag')\n          sendResponse({ result: e.message })\n        }\n      } else {\n        sendResponse({ result: 'Unknown command: ' + request.commands })\n      }\n    }\n\n    //do every command need giving sideex id\n    if (contentSideexTabId === -1) {\n      contentSideexTabId = request.mySideexTabId\n    }\n    return true\n  }\n  if (request.prepareToInteract) {\n    sendResponse({\n      result: 'success',\n      rect: selenium.prepareToInteract_(request.locator),\n    })\n  }\n  if (request.buildLocators) {\n    try {\n      const element = selenium.browserbot.findElement(request.locator)\n      const locators = locatorBuilders.buildAll(element)\n      sendResponse({ result: 'success', locators })\n    } catch (e) {\n      sendResponse({ result: e.message })\n    }\n  }\n  if (request.resolveLocator) {\n    try {\n      const element = selenium.browserbot.findElement(request.locator)\n      const locator = locatorBuilders\n        .buildAll(element)\n        .find(([loc, strat]) => /^xpath/.test(strat))[0] //eslint-disable-line no-unused-vars\n      sendResponse({ result: 'success', locator })\n    } catch (e) {\n      sendResponse({ result: e.message })\n    }\n  }\n  if (request.selectMode) {\n    sendResponse(true)\n    if (request.selecting && request.element) {\n      targetSelector = new TargetSelector(\n        function(element, win) {\n          if (element && win) {\n            const target = locatorBuilders.buildAll(element)\n            locatorBuilders.detach()\n            if (target != null && target instanceof Array) {\n              if (target) {\n                //self.editor.treeView.updateCurrentCommand('targetCandidates', target);\n                browser.runtime.sendMessage({\n                  selectTarget: true,\n                  target: target,\n                  selectNext: request.selectNext,\n                })\n              }\n            }\n          }\n          targetSelector = null\n        },\n        function() {\n          browser.runtime.sendMessage({\n            cancelSelectTarget: true,\n          })\n        }\n      )\n    } else if (request.selecting && request.region) {\n      editRegion(request.rect, target => {\n        if (target) {\n          browser.runtime.sendMessage({\n            selectTarget: true,\n            target: [[target]],\n            selectNext: request.selectNext,\n          })\n        } else {\n          browser.runtime.sendMessage({\n            cancelSelectTarget: true,\n            selectNext: request.selectNext,\n          })\n        }\n      })\n    } else {\n      if (targetSelector) {\n        targetSelector.cleanup()\n        targetSelector = null\n        return\n      } else {\n        removeRegion()\n        return\n      }\n    }\n  }\n}\n\n// show element\nfunction startShowElement(message) {\n  if (message.showElement) {\n    try {\n      const result = selenium['doShowElement'](message.targetValue)\n      return Promise.resolve({ result: result })\n    } catch (e) {\n      // If we didn't find the element, it means that another frame might have found it,\n      // so we don't resolve the promise. If no frame finds it, then the promise will\n      // get rejected.\n    }\n  }\n}\n\nif (!window._listener) {\n  window._listener = doCommands\n  browser.runtime.onMessage.addListener(startShowElement)\n  browser.runtime.onMessage.addListener(doCommands)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content/commands-api.js","import compute from 'compute-scroll-into-view';\n\nfunction isOptionsObject(options) {\n  return options === Object(options) && Object.keys(options).length !== 0;\n}\n\nfunction defaultBehavior(actions, behavior) {\n  if (behavior === void 0) {\n    behavior = 'auto';\n  }\n\n  var canSmoothScroll = 'scrollBehavior' in document.body.style;\n  actions.forEach(function (_ref) {\n    var el = _ref.el,\n        top = _ref.top,\n        left = _ref.left;\n\n    if (el.scroll && canSmoothScroll) {\n      el.scroll({\n        top: top,\n        left: left,\n        behavior: behavior\n      });\n    } else {\n      el.scrollTop = top;\n      el.scrollLeft = left;\n    }\n  });\n}\n\nfunction getOptions(options) {\n  if (options === false) {\n    return {\n      block: 'end',\n      inline: 'nearest'\n    };\n  }\n\n  if (isOptionsObject(options)) {\n    return options;\n  }\n\n  return {\n    block: 'start',\n    inline: 'nearest'\n  };\n}\n\nfunction scrollIntoView(target, options) {\n  if (isOptionsObject(options) && typeof options.behavior === 'function') {\n    return options.behavior(compute(target, options));\n  }\n\n  var computeOptions = getOptions(options);\n  return defaultBehavior(compute(target, computeOptions), computeOptions.behavior);\n}\n\nexport default scrollIntoView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/scroll-into-view-if-needed/es/index.js\n// module id = 150\n// module chunks = 0 2","function isElement(el) {\n  return el != null && typeof el === 'object' && (el.nodeType === 1 || el.nodeType === 11);\n}\n\nfunction canOverflow(overflow, skipOverflowHiddenElements) {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false;\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip';\n}\n\nfunction isScrollable(el, skipOverflowHiddenElements) {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    var style = getComputedStyle(el, null);\n    return canOverflow(style.overflowY, skipOverflowHiddenElements) || canOverflow(style.overflowX, skipOverflowHiddenElements);\n  }\n\n  return false;\n}\n\nfunction alignNearest(scrollingEdgeStart, scrollingEdgeEnd, scrollingSize, scrollingBorderStart, scrollingBorderEnd, elementEdgeStart, elementEdgeEnd, elementSize) {\n  if (elementEdgeStart < scrollingEdgeStart && elementEdgeEnd > scrollingEdgeEnd || elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd) {\n    return 0;\n  }\n\n  if (elementEdgeStart < scrollingEdgeStart && elementSize < scrollingSize || elementEdgeEnd > scrollingEdgeEnd && elementSize > scrollingSize) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart;\n  }\n\n  if (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize || elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd;\n  }\n\n  return 0;\n}\n\nexport default (function (target, options) {\n  var scrollMode = options.scrollMode,\n      block = options.block,\n      inline = options.inline,\n      boundary = options.boundary,\n      skipOverflowHiddenElements = options.skipOverflowHiddenElements;\n  var checkBoundary = typeof boundary === 'function' ? boundary : function (node) {\n    return node !== boundary;\n  };\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target');\n  }\n\n  var scrollingElement = document.scrollingElement || document.documentElement;\n  var frames = [];\n  var cursor = target;\n\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    cursor = cursor.parentNode || cursor.host;\n\n    if (cursor === scrollingElement) {\n      frames.push(cursor);\n      break;\n    }\n\n    if (cursor === document.body && isScrollable(cursor) && !isScrollable(document.documentElement)) {\n      continue;\n    }\n\n    if (isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor);\n    }\n  }\n\n  var viewportWidth = window.visualViewport ? visualViewport.width : innerWidth;\n  var viewportHeight = window.visualViewport ? visualViewport.height : innerHeight;\n  var viewportX = window.scrollX || pageXOffset;\n  var viewportY = window.scrollY || pageYOffset;\n\n  var _target$getBoundingCl = target.getBoundingClientRect(),\n      targetHeight = _target$getBoundingCl.height,\n      targetWidth = _target$getBoundingCl.width,\n      targetTop = _target$getBoundingCl.top,\n      targetRight = _target$getBoundingCl.right,\n      targetBottom = _target$getBoundingCl.bottom,\n      targetLeft = _target$getBoundingCl.left;\n\n  var targetBlock = block === 'start' || block === 'nearest' ? targetTop : block === 'end' ? targetBottom : targetTop + targetHeight / 2;\n  var targetInline = inline === 'center' ? targetLeft + targetWidth / 2 : inline === 'end' ? targetRight : targetLeft;\n  var computations = [];\n\n  for (var index = 0; index < frames.length; index++) {\n    var frame = frames[index];\n\n    var _frame$getBoundingCli = frame.getBoundingClientRect(),\n        _height = _frame$getBoundingCli.height,\n        _width = _frame$getBoundingCli.width,\n        _top = _frame$getBoundingCli.top,\n        right = _frame$getBoundingCli.right,\n        bottom = _frame$getBoundingCli.bottom,\n        _left = _frame$getBoundingCli.left;\n\n    if (scrollMode === 'if-needed' && targetTop >= 0 && targetLeft >= 0 && targetBottom <= viewportHeight && targetRight <= viewportWidth && targetTop >= _top && targetBottom <= bottom && targetLeft >= _left && targetRight <= right) {\n      return computations;\n    }\n\n    var frameStyle = getComputedStyle(frame);\n    var borderLeft = parseInt(frameStyle.borderLeftWidth, 10);\n    var borderTop = parseInt(frameStyle.borderTopWidth, 10);\n    var borderRight = parseInt(frameStyle.borderRightWidth, 10);\n    var borderBottom = parseInt(frameStyle.borderBottomWidth, 10);\n    var blockScroll = 0;\n    var inlineScroll = 0;\n    var scrollbarWidth = 'offsetWidth' in frame ? frame.offsetWidth - frame.clientWidth - borderLeft - borderRight : 0;\n    var scrollbarHeight = 'offsetHeight' in frame ? frame.offsetHeight - frame.clientHeight - borderTop - borderBottom : 0;\n\n    if (scrollingElement === frame) {\n      if (block === 'start') {\n        blockScroll = targetBlock;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(viewportY, viewportY + viewportHeight, viewportHeight, borderTop, borderBottom, viewportY + targetBlock, viewportY + targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - viewportHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth;\n      } else {\n        inlineScroll = alignNearest(viewportX, viewportX + viewportWidth, viewportWidth, borderLeft, borderRight, viewportX + targetInline, viewportX + targetInline + targetWidth, targetWidth);\n      }\n\n      blockScroll = Math.max(0, blockScroll + viewportY);\n      inlineScroll = Math.max(0, inlineScroll + viewportX);\n    } else {\n      if (block === 'start') {\n        blockScroll = targetBlock - _top - borderTop;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(_top, bottom, _height, borderTop, borderBottom + scrollbarHeight, targetBlock, targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - (_top + _height / 2) + scrollbarHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - _left - borderLeft;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (_left + _width / 2) + scrollbarWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth;\n      } else {\n        inlineScroll = alignNearest(_left, right, _width, borderLeft, borderRight + scrollbarWidth, targetInline, targetInline + targetWidth, targetWidth);\n      }\n\n      var scrollLeft = frame.scrollLeft,\n          scrollTop = frame.scrollTop;\n      blockScroll = Math.max(0, Math.min(scrollTop + blockScroll, frame.scrollHeight - _height + scrollbarHeight));\n      inlineScroll = Math.max(0, Math.min(scrollLeft + inlineScroll, frame.scrollWidth - _width + scrollbarWidth));\n      targetBlock += scrollTop - blockScroll;\n      targetInline += scrollLeft - inlineScroll;\n    }\n\n    computations.push({\n      el: frame,\n      top: blockScroll,\n      left: inlineScroll\n    });\n  }\n\n  return computations;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/compute-scroll-into-view/es/index.js\n// module id = 151\n// module chunks = 0 2","/*\n * Copyright 2017 SideeX committers\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\n\n// change HTML entities to sign\nexport function unescapeHtml(str) {\n  return str\n    .replace(/&amp;/gi, '&')\n    .replace(/&quot;/gi, '\"')\n    .replace(/&lt;/gi, '<')\n    .replace(/&gt;/gi, '>')\n    .replace(/&#39;/gi, \"'\")\n}\n\nfunction escapeAttr(str) {\n  let spaceS = 0\n  let spaceE = -1\n  let tempStr = str\n  let tempAttr = ''\n  let tempValue = ''\n  let processedTag = ''\n  let flag = false\n  let finishedProcessing = false\n\n  do {\n    spaceS = str.indexOf(' ')\n    spaceE = str.indexOf(' ', spaceS + 1)\n\n    if (spaceE >= 0) {\n      while (str.charAt(spaceE - 1) != \"'\" && str.charAt(spaceE - 1) != '\"') {\n        spaceE = str.indexOf(' ', spaceE + 1)\n        if (spaceE < 0) break\n      }\n    }\n\n    //if there is space, then split string\n    if (spaceS >= 0 && spaceE >= 0) {\n      tempAttr = str.substring(spaceS + 1, spaceE)\n      tempStr = str.substring(0, spaceS + 1)\n      str = str.substring(spaceE)\n    } else if (spaceS >= 0 && spaceE < 0) {\n      tempAttr = str.substring(spaceS + 1, str.length - 1)\n      tempStr = str.substring(0, spaceS + 1)\n      str = ''\n    } else {\n      //flag is check that has string been processed\n      if (flag) processedTag += '>'\n      else processedTag = str\n      finishedProcessing = true\n      break\n    }\n\n    flag = true\n    let equal = tempAttr.indexOf('=')\n\n    if (tempAttr.charAt(equal + 1) == \"'\") {\n      //divide the single quote\n      if (tempAttr.indexOf(\"'\") != -1) {\n        let quotS = tempAttr.indexOf(\"'\")\n        let quotE = tempAttr.lastIndexOf(\"'\")\n        tempValue = tempAttr.substring(quotS + 1, quotE)\n        tempAttr = tempAttr.substring(0, quotS + 1)\n        tempValue = replaceChar(tempValue)\n        tempAttr += tempValue + \"'\"\n      }\n    }\n    if (tempAttr.charAt(equal + 1) == '\"') {\n      //divide the double quote\n      if (tempAttr.indexOf('\"') != -1) {\n        let dquotS = tempAttr.indexOf('\"')\n        let dquotE = tempAttr.lastIndexOf('\"')\n        tempValue = tempAttr.substring(dquotS + 1, dquotE)\n        tempAttr = tempAttr.substring(0, dquotS + 1)\n        tempValue = replaceChar(tempValue)\n        tempAttr += tempValue + '\"'\n      }\n    }\n    //merge the splited string\n    processedTag += tempStr + tempAttr\n  } while (!finishedProcessing)\n\n  return processedTag\n}\n\n//escape the character \"<\".\">\".\"&\".\"'\".'\"'\nfunction doEscape(str) {\n  return str.replace(\n    /[&\"'<>]/g,\n    m =>\n      ({ '&': '&amp;', '\"': '&quot;', \"'\": '&#39;', '<': '&lt;', '>': '&gt;' }[\n        m\n      ])\n  )\n}\n\n//append\nfunction checkType(cutStr, replaceStr, mode) {\n  switch (mode) {\n    case 1:\n      return (cutStr += replaceStr + '&amp;')\n    case 2:\n      return (cutStr += replaceStr + '&quot;')\n    case 3:\n      return (cutStr += replaceStr + '&#39;')\n    case 4:\n      return (cutStr += replaceStr + '&lt;')\n    case 5:\n      return (cutStr += replaceStr + '&gt;')\n    default:\n      return cutStr\n  }\n}\n\n//avoid &amp; to escape &amp;amp;\nfunction replaceChar(str) {\n  //escape the character\n  let pos = -1\n  let cutStr = ''\n  let replaceStr = ''\n  let doFlag = 0\n  let charType\n  let ampersandExists = true\n\n  while (ampersandExists) {\n    pos = str.indexOf('&', pos + 1)\n    charType = 0\n    if (pos != -1) {\n      if (str.substring(pos, pos + 5) == '&amp;') {\n        charType = 1\n        replaceStr = str.substring(0, pos)\n        str = str.substring(pos + 5)\n      } else if (str.substring(pos, pos + 6) == '&quot;') {\n        charType = 2\n        replaceStr = str.substring(0, pos)\n        str = str.substring(pos + 6)\n      } else if (str.substring(pos, pos + 5) == '&#39;') {\n        charType = 3\n        replaceStr = str.substring(0, pos)\n        str = str.substring(pos + 5)\n      } else if (str.substring(pos, pos + 4) == '&lt;') {\n        charType = 4\n        replaceStr = str.substring(0, pos)\n        str = str.substring(pos + 4)\n      } else if (str.substring(pos, pos + 4) == '&gt;') {\n        charType = 5\n        replaceStr = str.substring(0, pos)\n        str = str.substring(pos + 4)\n      }\n\n      if (charType != 0) {\n        pos = -1\n        replaceStr = doEscape(replaceStr)\n        cutStr = checkType(cutStr, replaceStr, charType)\n        doFlag = 1\n      }\n    } else {\n      cutStr += str\n      ampersandExists = false\n    }\n  }\n  if (doFlag == 0) return doEscape(str)\n  else return cutStr\n}\n\n//check the HTML value\nexport function escapeHTML(str) {\n  let smallIndex = str.indexOf('<')\n  let greatIndex = str.indexOf('>')\n  let tempStr = ''\n  let tempTag = ''\n  let processed = ''\n  let tempSmallIndex = 0\n  let tagsExists = true\n\n  while (tagsExists) {\n    //find the less target\n    if (smallIndex >= 0) {\n      //find the greater target\n      if (greatIndex >= 0) {\n        do {\n          //split foreward string\n          smallIndex += tempSmallIndex\n          tempStr = str.substring(0, smallIndex)\n          //split the tags\n          tempTag = str.substring(smallIndex, greatIndex + 1)\n          tempSmallIndex = tempTag.lastIndexOf('<')\n        } while (tempSmallIndex != 0)\n\n        //escape attributes in the tag\n        tempTag = escapeAttr(tempTag)\n\n        str = str.substring(greatIndex + 1)\n        //check if the tag is script\n        // if(tempTag.toLowerCase().indexOf(\"script\")>=0)\n        // tempTag = replaceChar(tempTag);\n\n        //merge them up\n        processed += replaceChar(tempStr) + tempTag\n      } else {\n        replaceChar(str)\n        tagsExists = false\n        break\n      }\n    } else {\n      replaceChar(str)\n      tagsExists = false\n      break\n    }\n    //going to do next tag\n    smallIndex = str.indexOf('<')\n    greatIndex = 0\n    do {\n      //avoid other >\n      greatIndex = str.indexOf('>', greatIndex + 1)\n    } while (greatIndex < smallIndex && greatIndex != -1)\n  }\n\n  if (str != '') processed += replaceChar(str)\n\n  return processed\n}\n\nwindow.unescapeHtml = unescapeHtml\nwindow.escapeHTML = escapeHTML\n\n\n\n// WEBPACK FOOTER //\n// ./content/escape.js","/*\n * Copyright 2011 Software Freedom Conservancy\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\n\nimport browser from 'webextension-polyfill'\nimport scrollIntoViewIfNeeded from 'scroll-into-view-if-needed'\nimport SeleniumError from './SeleniumError'\nimport { selenium } from './commands-api'\nimport { escapeHTML } from './escape'\nimport BrowserBot, { browserVersion } from './selenium-browserbot'\nimport goog, { bot, core } from './closure-polyfill'\nimport PatternMatcher from './PatternMatcher'\nimport {\n  getTagName,\n  getTimeoutTime,\n  extractExceptionMessage,\n  lowerFirstChar,\n} from './utils'\n\n// TODO: stop navigating this.browserbot.document() ... it breaks encapsulation\n\nexport default class Selenium {\n  /**\n   * Defines an object that runs Selenium commands.\n   *\n   * <h3><a name=\"locators\"></a>Element Locators</h3>\n   * <p>\n   * Element Locators tell Selenium which HTML element a command refers to.\n   * The format of a locator is:</p>\n   * <blockquote>\n   * <em>locatorType</em><strong>=</strong><em>argument</em>\n   * </blockquote>\n   *\n   * <p>\n   * We support the following strategies for locating elements:\n   * </p>\n   *\n   * <ul>\n   * <li><strong>identifier</strong>=<em>id</em>:\n   * Select the element with the specified &#064;id attribute. If no match is\n   * found, select the first element whose &#064;name attribute is <em>id</em>.\n   * (This is normally the default; see below.)</li>\n   * <li><strong>id</strong>=<em>id</em>:\n   * Select the element with the specified &#064;id attribute.</li>\n   *\n   * <li><strong>name</strong>=<em>name</em>:\n   * Select the first element with the specified &#064;name attribute.\n   * <ul class=\"first last simple\">\n   * <li>username</li>\n   * <li>name=username</li>\n   * </ul>\n   *\n   * <p>The name may optionally be followed by one or more <em>element-filters</em>, separated from the name by whitespace.  If the <em>filterType</em> is not specified, <strong>value</strong> is assumed.</p>\n   *\n   * <ul class=\"first last simple\">\n   * <li>name=flavour value=chocolate</li>\n   * </ul>\n   * </li>\n   * <li><strong>dom</strong>=<em>javascriptExpression</em>:\n   *\n   * Find an element by evaluating the specified string.  This allows you to traverse the HTML Document Object\n   * Model using JavaScript.  Note that you must not return a value in this string; simply make it the last expression in the block.\n   * <ul class=\"first last simple\">\n   * <li>dom=document.forms['myForm'].myDropdown</li>\n   * <li>dom=document.images[56]</li>\n   * <li>dom=function foo() { return document.links[1]; }; foo();</li>\n   * </ul>\n   *\n   * </li>\n   *\n   * <li><strong>xpath</strong>=<em>xpathExpression</em>:\n   * Locate an element using an XPath expression.\n   * <ul class=\"first last simple\">\n   * <li>xpath=//img[&#064;alt='The image alt text']</li>\n   * <li>xpath=//table[&#064;id='table1']//tr[4]/td[2]</li>\n   * <li>xpath=//a[contains(&#064;href,'#id1')]</li>\n   * <li>xpath=//a[contains(&#064;href,'#id1')]/&#064;class</li>\n   * <li>xpath=(//table[&#064;class='stylee'])//th[text()='theHeaderText']/../td</li>\n   * <li>xpath=//input[&#064;name='name2' and &#064;value='yes']</li>\n   * <li>xpath=//*[text()=\"right\"]</li>\n   *\n   * </ul>\n   * </li>\n   * <li><strong>link</strong>=<em>textPattern</em>:\n   * Select the link (anchor) element which contains text matching the\n   * specified <em>pattern</em>.\n   * <ul class=\"first last simple\">\n   * <li>link=The link text</li>\n   * </ul>\n   *\n   * </li>\n   *\n   * <li><strong>css</strong>=<em>cssSelectorSyntax</em>:\n   * Select the element using css selectors. Please refer to <a href=\"http://www.w3.org/TR/REC-CSS2/selector.html\">CSS2 selectors</a>, <a href=\"http://www.w3.org/TR/2001/CR-css3-selectors-20011113/\">CSS3 selectors</a> for more information. You can also check the TestCssLocators test in the selenium test suite for an example of usage, which is included in the downloaded selenium core package.\n   * <ul class=\"first last simple\">\n   * <li>css=a[href=\"#id3\"]</li>\n   * <li>css=span#firstChild + span</li>\n   * </ul>\n   * <p>Currently the css selector locator supports all css1, css2 and css3 selectors except namespace in css3, some pseudo classes(:nth-of-type, :nth-last-of-type, :first-of-type, :last-of-type, :only-of-type, :visited, :hover, :active, :focus, :indeterminate) and pseudo elements(::first-line, ::first-letter, ::selection, ::before, ::after). </p>\n   * </li>\n   *\n   * <li><strong>ui</strong>=<em>uiSpecifierString</em>:\n   * Locate an element by resolving the UI specifier string to another locator, and evaluating it. See the <a href=\"http://svn.openqa.org/fisheye/browse/~raw,r=trunk/selenium/trunk/src/main/resources/core/scripts/ui-doc.html\">Selenium UI-Element Reference</a> for more details.\n   * <ul class=\"first last simple\">\n   * <li>ui=loginPages::loginButton()</li>\n   * <li>ui=settingsPages::toggle(label=Hide Email)</li>\n   * <li>ui=forumPages::postBody(index=2)//a[2]</li>\n   * </ul>\n   * </li>\n   *\n   * </ul>\n   *\n   * <p>\n   * Without an explicit locator prefix, Selenium uses the following default\n   * strategies:\n   * </p>\n   *\n   * <ul class=\"simple\">\n   * <li><strong>dom</strong>, for locators starting with &quot;document.&quot;</li>\n   * <li><strong>xpath</strong>, for locators starting with &quot;//&quot;</li>\n   * <li><strong>identifier</strong>, otherwise</li>\n   * </ul>\n   *\n   * <h3><a name=\"element-filters\">Element Filters</a></h3>\n   * <blockquote>\n   * <p>Element filters can be used with a locator to refine a list of candidate elements.  They are currently used only in the 'name' element-locator.</p>\n   * <p>Filters look much like locators, ie.</p>\n   * <blockquote>\n   * <em>filterType</em><strong>=</strong><em>argument</em></blockquote>\n   *\n   * <p>Supported element-filters are:</p>\n   * <p><strong>value=</strong><em>valuePattern</em></p>\n   * <blockquote>\n   * Matches elements based on their values.  This is particularly useful for refining a list of similarly-named toggle-buttons.</blockquote>\n   * <p><strong>index=</strong><em>index</em></p>\n   * <blockquote>\n   * Selects a single element based on its position in the list (offset from zero).</blockquote>\n   * </blockquote>\n   *\n   * <h3><a name=\"patterns\"></a>String-match Patterns</h3>\n   *\n   * <p>\n   * Various Pattern syntaxes are available for matching string values:\n   * </p>\n   * <ul>\n   * <li><strong>glob:</strong><em>pattern</em>:\n   * Match a string against a \"glob\" (aka \"wildmat\") pattern. \"Glob\" is a\n   * kind of limited regular-expression syntax typically used in command-line\n   * shells. In a glob pattern, \"*\" represents any sequence of characters, and \"?\"\n   * represents any single character. Glob patterns match against the entire\n   * string.</li>\n   * <li><strong>regexp:</strong><em>regexp</em>:\n   * Match a string using a regular-expression. The full power of JavaScript\n   * regular-expressions is available.</li>\n   * <li><strong>regexpi:</strong><em>regexpi</em>:\n   * Match a string using a case-insensitive regular-expression.</li>\n   * <li><strong>exact:</strong><em>string</em>:\n   *\n   * Match a string exactly, verbatim, without any of that fancy wildcard\n   * stuff.</li>\n   * </ul>\n   * <p>\n   * If no pattern prefix is specified, Selenium assumes that it's a \"glob\"\n   * pattern.\n   * </p>\n   * <p>\n   * For commands that return multiple values (such as verifySelectOptions),\n   * the string being matched is a comma-separated list of the return values,\n   * where both commas and backslashes in the values are backslash-escaped.\n   * When providing a pattern, the optional matching syntax (i.e. glob,\n   * regexp, etc.) is specified once, as usual, at the beginning of the\n   * pattern.\n   * </p>\n   */\n  constructor(browserbot) {\n    this.browserbot = browserbot\n    this.optionLocatorFactory = new OptionLocatorFactory()\n    // DGF for backwards compatibility\n    this.page = function() {\n      return browserbot\n    }\n    this.defaultTimeout = Selenium.DEFAULT_TIMEOUT\n    this.mouseSpeed = Selenium.DEFAULT_MOUSE_SPEED\n  }\n}\n\nSelenium.DEFAULT_TIMEOUT = 30 * 1000\nSelenium.DEFAULT_MOUSE_SPEED = 10\nSelenium.RIGHT_MOUSE_CLICK = 2\n\nSelenium.decorateFunctionWithTimeout = function(f, timeout, callback) {\n  if (f == null) {\n    return null\n  }\n\n  let timeoutTime = getTimeoutTime(timeout)\n\n  return function() {\n    if (new Date().getTime() > timeoutTime) {\n      if (callback != null) {\n        callback()\n      }\n      throw new SeleniumError('Timed out after ' + timeout + 'ms')\n    }\n    return f()\n  }\n}\n\nSelenium.createForWindow = function(window, proxyInjectionMode) {\n  if (!window.location) {\n    throw 'error: not a window!'\n  }\n  return Selenium(BrowserBot.createForWindow(window, proxyInjectionMode))\n}\n\nSelenium.prototype.reset = function() {\n  this.defaultTimeout = Selenium.DEFAULT_TIMEOUT\n  // todo: this.browserbot.reset()\n  this.browserbot.selectWindow('null')\n  this.browserbot.resetPopups()\n}\n\nSelenium.prototype.eval = function(\n  script,\n  argv = [],\n  scoped = true,\n  isExpression = false\n) {\n  // we are still stringifying here, but we are not supporting passing HTMLElements anyway :)\n  // Single quotes are important! JSON.stringifies uses double quotes, to avoid syntax error we use single quotes!!\n  if (isExpression) {\n    return window.eval(\n      scoped\n        ? `((...arguments) => (${script}))(...JSON.parse('${JSON.stringify(\n            argv\n          )}'))`\n        : script\n    )\n  } else {\n    return window.eval(\n      scoped\n        ? `((...arguments) => {${script}})(...JSON.parse('${JSON.stringify(\n            argv\n          )}'))`\n        : script\n    )\n  }\n}\n\nSelenium.prototype.doEvaluateConditional = function(script) {\n  return !!this.eval(script.script, script.argv, true, true)\n}\n\nSelenium.prototype.doVerifyChecked = function(locator) {\n  let element = this.browserbot.findElement(locator)\n  if (element.type !== 'checkbox' && element.type !== 'radio') {\n    throw new Error(\n      `Element with locator ${locator} is not a checkbox nor a radio button`\n    )\n  } else if (!element.checked) {\n    throw new Error(`Element with locator ${locator} is not checked`)\n  }\n}\n\nSelenium.prototype.doVerifyNotChecked = function(locator) {\n  let element = this.browserbot.findElement(locator)\n  if (element.type !== 'checkbox' && element.type !== 'radio') {\n    throw new Error(\n      `Element with locator ${locator} is not a checkbox nor a radio button`\n    )\n  } else if (element.checked) {\n    throw new Error(`Element with locator ${locator} is checked`)\n  }\n}\n\nSelenium.prototype.doVerifyEditable = function(locator) {\n  if (!this.isEditable(locator)) {\n    throw new Error(`Element with locator ${locator} is not editable`)\n  }\n}\n\nSelenium.prototype.doVerifyNotEditable = function(locator) {\n  if (this.isEditable(locator)) {\n    throw new Error(`Element with locator ${locator} is editable`)\n  }\n}\n\nSelenium.prototype.doVerifySelectedValue = function(locator, value) {\n  let element = this.browserbot.findElement(locator)\n  if (element.type !== 'select-one') {\n    throw new Error(`Element with locator ${locator} is not a select`)\n  } else if (element.value !== value) {\n    throw new Error(\n      \"Actual value '\" + element.value + \"' did not match '\" + value + \"'\"\n    )\n  }\n}\n\nSelenium.prototype.doVerifyNotSelectedValue = function(locator, value) {\n  let element = this.browserbot.findElement(locator)\n  if (element.type !== 'select-one') {\n    throw new Error(`Element with locator ${locator} is not a select`)\n  } else if (element.value === value) {\n    throw new Error(\"Actual value '\" + element.value + \"' did match\")\n  }\n}\n\nSelenium.prototype.doVerifyText = function(locator, value) {\n  this.doAssertText(locator, value)\n}\n\nSelenium.prototype.doVerifyNotText = function(locator, value) {\n  this.doAssertNotText(locator, value)\n}\n\nSelenium.prototype.doVerifyValue = function(locator, value) {\n  let element = this.browserbot.findElement(locator)\n  if (element.value !== value) {\n    throw new Error(\n      \"Actual value '\" + element.value + \"' did not match '\" + value + \"'\"\n    )\n  }\n}\n\nSelenium.prototype.doVerifyTitle = function(value) {\n  if (goog.string.normalizeSpaces(this.getTitle()) !== value) {\n    throw new Error(\n      \"Actual value '\" +\n        goog.string.normalizeSpaces(this.getTitle()) +\n        \"' did not match '\" +\n        value +\n        \"'\"\n    )\n  }\n}\n\nSelenium.prototype.doVerifyElementPresent = function(locator) {\n  try {\n    this.browserbot.findElement(locator)\n  } catch (error) {\n    if (error.message.match(/Element[\\s\\S]*?not found/)) {\n      throw new Error(`Element with locator ${locator} could not be found`)\n    } else {\n      throw error\n    }\n  }\n}\n\nSelenium.prototype.doVerifyElementNotPresent = function(locator) {\n  try {\n    this.browserbot.findElement(locator)\n    throw new Error(`Element with locator ${locator} was found`)\n  } catch (error) {\n    if (!error.message.match(/Element[\\s\\S]*?not found/)) {\n      throw error\n    }\n  }\n}\n\nSelenium.prototype.doVerify = function(variableName, expected) {\n  return this.doAssert(variableName, expected)\n}\n\nSelenium.prototype.doAssert = function(variableName, expected) {\n  return new Promise((res, rej) => {\n    browser.runtime\n      .sendMessage({\n        getVar: true,\n        variable: variableName,\n      })\n      .then(actual => {\n        if (`${actual}` != expected) {\n          return rej(\n            \"Actual value '\" + actual + \"' did not match '\" + expected + \"'\"\n          )\n        }\n        return res()\n      })\n  })\n}\n\nSelenium.prototype.doAssertChecked = function(locator) {\n  let element = this.browserbot.findElement(locator)\n  if (element.type !== 'checkbox' && element.type !== 'radio') {\n    throw new Error(\n      `Element with locator ${locator} is not a checkbox nor a radio button`\n    )\n  } else if (!element.checked) {\n    throw new Error(`Element with locator ${locator} is not checked`)\n  }\n}\n\nSelenium.prototype.doAssertNotChecked = function(locator) {\n  let element = this.browserbot.findElement(locator)\n  if (element.type !== 'checkbox' && element.type !== 'radio') {\n    throw new Error(\n      `Element with locator ${locator} is not a checkbox nor a radio button`\n    )\n  } else if (element.checked) {\n    throw new Error(`Element with locator ${locator} is checked`)\n  }\n}\n\nSelenium.prototype.doAssertEditable = function(locator) {\n  if (!this.isEditable(locator)) {\n    throw new Error(`Element with locator ${locator} is not editable`)\n  }\n}\n\nSelenium.prototype.doAssertNotEditable = function(locator) {\n  if (this.isEditable(locator)) {\n    throw new Error(`Element with locator ${locator} is editable`)\n  }\n}\n\nSelenium.prototype.doAssertSelectedValue = function(locator, value) {\n  let element = this.browserbot.findElement(locator)\n  if (element.type !== 'select-one') {\n    throw new Error(`Element with locator ${locator} is not a select`)\n  } else if (element.value !== value) {\n    throw new Error(\n      \"Actual value '\" + element.value + \"' did not match '\" + value + \"'\"\n    )\n  }\n}\n\nSelenium.prototype.doVerifySelectedLabel = function(selectLocator, value) {\n  let selectedLabel = this.findSelectedOptionProperty(selectLocator, 'text')\n  if (selectedLabel !== value) {\n    throw new Error(\n      \"Actual label '\" + selectedLabel + \"' did not match '\" + value + \"'\"\n    )\n  }\n}\n\nSelenium.prototype.doAssertSelectedLabel = function(selectLocator, value) {\n  let selectedLabel = this.findSelectedOptionProperty(selectLocator, 'text')\n  if (selectedLabel !== value) {\n    throw new Error(\n      \"Actual label '\" + selectedLabel + \"' did not match '\" + value + \"'\"\n    )\n  }\n}\n\nSelenium.prototype.doAssertNotSelectedValue = function(locator, value) {\n  let element = this.browserbot.findElement(locator)\n  if (element.type !== 'select-one') {\n    throw new Error(`Element with locator ${locator} is not a select`)\n  } else if (element.value === value) {\n    throw new Error(\"Actual value '\" + element.value + \"' did match\")\n  }\n}\n\nSelenium.prototype.findElementVisible = function(locator) {\n  const element = this.browserbot.findElement(locator)\n  if (!bot.dom.isShown(element))\n    throw new Error(`Element ${locator} not visible`)\n  return element\n}\n\nSelenium.prototype.doAssertText = function(locator, value) {\n  const element = this.findElementVisible(locator)\n  const visibleText = bot.dom.getVisibleText(element)\n  if (visibleText !== value) {\n    throw new Error(`Actual value \"${visibleText}\" did not match \"${value}\"`)\n  }\n}\n\nSelenium.prototype.doAssertNotText = function(locator, value) {\n  const element = this.findElementVisible(locator)\n  const visibleText = bot.dom.getVisibleText(element)\n  if (visibleText === value) {\n    throw new Error(`Actual value \"${visibleText}\" did match \"${value}\"`)\n  }\n}\n\nSelenium.prototype.doAssertValue = function(locator, value) {\n  let element = this.browserbot.findElement(locator)\n  if (element.value !== value) {\n    throw new Error(\n      \"Actual value '\" + element.value + \"' did not match '\" + value + \"'\"\n    )\n  }\n}\n\nSelenium.prototype.doAssertTitle = function(value) {\n  if (goog.string.normalizeSpaces(this.getTitle()) !== value) {\n    throw new Error(\n      \"Actual value '\" +\n        goog.string.normalizeSpaces(this.getTitle()) +\n        \"' did not match '\" +\n        value +\n        \"'\"\n    )\n  }\n}\n\nSelenium.prototype.doAssertElementPresent = function(locator) {\n  try {\n    this.browserbot.findElement(locator)\n  } catch (error) {\n    if (error.message.match(/Element[\\s\\S]*?not found/)) {\n      throw new Error(`Element with locator ${locator} could not be found`)\n    } else {\n      throw error\n    }\n  }\n}\n\nSelenium.prototype.doAssertElementNotPresent = function(locator) {\n  try {\n    this.browserbot.findElement(locator)\n    throw new Error(`Element with locator ${locator} was found`)\n  } catch (error) {\n    if (!error.message.match(/Element[\\s\\S]*?not found/)) {\n      throw error\n    }\n  }\n}\n\nfunction throwIfNoVarNameProvided(varName) {\n  if (!varName) {\n    throw new Error('No variable name provided.')\n  }\n}\n\nSelenium.prototype.doStore = function(value, varName) {\n  throwIfNoVarNameProvided(varName)\n  return browser.runtime.sendMessage({ storeStr: value, storeVar: varName })\n}\n\nSelenium.prototype.doStoreEval = function() {\n  throw new Error('store eval is obsolete please migrate to execute script')\n}\n\nSelenium.prototype.doStoreText = function(locator, varName) {\n  throwIfNoVarNameProvided(varName)\n  const element = this.findElementVisible(locator)\n  return browser.runtime.sendMessage({\n    storeStr: bot.dom.getVisibleText(element),\n    storeVar: varName,\n  })\n}\n\nSelenium.prototype.doStoreValue = function(locator, varName) {\n  throwIfNoVarNameProvided(varName)\n  let element = this.browserbot.findElement(locator)\n  return browser.runtime.sendMessage({\n    storeStr: element.value.trim(),\n    storeVar: varName,\n  })\n}\n\nSelenium.prototype.doStoreTitle = function(value, varName) {\n  throwIfNoVarNameProvided(varName)\n  let doc = selenium.browserbot.getDocument()\n  return browser.runtime.sendMessage({\n    storeStr: value || doc.title,\n    storeVar: varName,\n  })\n}\n\nSelenium.prototype.doStoreXpathCount = function(xpath, varName) {\n  throwIfNoVarNameProvided(varName)\n  let count = this.browserbot.evaluateXPathCount(\n    xpath,\n    this.browserbot.getDocument()\n  )\n  return browser.runtime.sendMessage({\n    storeStr: `${count}` || '0',\n    storeVar: varName,\n  })\n}\n\nSelenium.prototype.doStoreAttribute = function(locator, varName) {\n  throwIfNoVarNameProvided(varName)\n  let attributeValue = this.browserbot.findAttribute(locator)\n  return browser.runtime.sendMessage({\n    storeStr: attributeValue,\n    storeVar: varName,\n  })\n}\n\nSelenium.prototype.doEcho = function(value) {\n  return browser.runtime.sendMessage({ echoStr: value })\n}\n\nfunction waitUntil(condition, target, timeout, failureMessage) {\n  if (!timeout) {\n    throw new Error('Timeout not specified.')\n  }\n  return new Promise(function(resolve, reject) {\n    let count = 0\n    let retryInterval = 100\n    let result\n    let interval = setInterval(function() {\n      if (count > timeout) {\n        clearInterval(interval)\n        reject(failureMessage)\n      }\n      try {\n        result = condition(target)\n      } catch (error) {\n        clearInterval(interval)\n        reject(error.message)\n      }\n      if (!result) {\n        count += retryInterval\n      } else if (result) {\n        clearInterval(interval)\n        resolve()\n      }\n    }, retryInterval)\n  })\n}\n\nSelenium.prototype.doWaitForElementPresent = function(locator, timeout) {\n  return waitUntil(\n    this.isElementPresent.bind(this),\n    locator,\n    timeout,\n    'Unable to find the target element within the timeout specified.'\n  )\n}\n\nSelenium.prototype.doWaitForElementNotPresent = function(locator, timeout) {\n  return waitUntil(\n    isElementNotPresent.bind(this),\n    locator,\n    timeout,\n    'Element still present on the page within the timeout specified.'\n  )\n}\n\nSelenium.prototype.doWaitForElementVisible = function(locator, timeout) {\n  return waitUntil(\n    isDisplayed.bind(this),\n    locator,\n    timeout,\n    'Element not visible on the page within the timeout specified.'\n  )\n}\n\nSelenium.prototype.doWaitForElementNotVisible = function(locator, timeout) {\n  return waitUntil(\n    isNotDisplayed.bind(this),\n    locator,\n    timeout,\n    'Element still visible on the page within the timeout specified.'\n  )\n}\n\nSelenium.prototype.doWaitForElementEditable = function(locator, timeout) {\n  return waitUntil(\n    isEditable.bind(this),\n    locator,\n    timeout,\n    'Element not editable within the timeout specified.'\n  )\n}\n\nSelenium.prototype.doWaitForElementNotEditable = function(locator, timeout) {\n  return waitUntil(\n    isNotEditable.bind(this),\n    locator,\n    timeout,\n    'Element still editable within the timeout specified.'\n  )\n}\n\n// xian\nSelenium.prototype.doWaitPreparation = function() {\n  // function setNewPageValue(e) {\n  //     window.new_page = true;\n  // };\n  // window.addEventListener(\"beforeunload\", setNewPageValue, false);\n\n  // if (window.XMLHttpRequest) {\n  //     // only override XMLHttpRequest once\n  //     if (!window.origXMLHttpRequest || !window.ajax_obj) {\n  //         // it's new page, so set the new window's XMLHttpRequest, and all of the obj in the ajax_obj\n  //         // are last window's instance, so clear it\n  //         window.ajax_obj = [];\n\n  //         window.origXMLHttpRequest = window.XMLHttpRequest;\n\n  //         window.XMLHttpRequest = function() {\n  //             var xhr = new window.origXMLHttpRequest();\n  //             window.ajax_obj.push(xhr);\n  //             return xhr;\n  //         }\n  //     }\n  // }\n\n  // function setDOMModifiedTime() {\n  //     window.domModifiedTime = Date.now();\n  // }\n  // var _win = window.document.body;\n  // _win.addEventListener(\"DOMNodeInserted\", setDOMModifiedTime, false);\n  // _win.addEventListener(\"DOMNodeInsertedIntoDocument\", setDOMModifiedTime, false);\n  // _win.addEventListener(\"DOMNodeRemoved\", setDOMModifiedTime, false);\n  // _win.addEventListener(\"DOMNodeRemovedFromDocument\", setDOMModifiedTime, false);\n  // _win.addEventListener(\"DOMSubtreeModified\", setDOMModifiedTime, false);\n\n  this.eval(\n    'function setNewPageValue(e) {window.new_page = true;};\\\n                window.addEventListener(\"beforeunload\", setNewPageValue, false);\\\n                if (window.XMLHttpRequest) {if (!window.origXMLHttpRequest || !window.ajax_obj) {\\\n                window.ajax_obj = []; window.origXMLHttpRequest = window.XMLHttpRequest;\\\n                window.XMLHttpRequest = function() { var xhr = new window.origXMLHttpRequest();\\\n                window.ajax_obj.push(xhr); return xhr;}}} function setDOMModifiedTime() {\\\n                window.domModifiedTime = Date.now();}var _win = window.document.body;\\\n                _win.addEventListener(\"DOMNodeInserted\", setDOMModifiedTime, false);\\\n                _win.addEventListener(\"DOMNodeInsertedIntoDocument\", setDOMModifiedTime, false);\\\n                _win.addEventListener(\"DOMNodeRemoved\", setDOMModifiedTime, false);\\\n                _win.addEventListener(\"DOMNodeRemovedFromDocument\", setDOMModifiedTime, false);\\\n                _win.addEventListener(\"DOMSubtreeModified\", setDOMModifiedTime, false);',\n    [],\n    false\n  )\n}\n\nSelenium.prototype.doPrePageWait = function() {\n  window.sideex_new_page = this.eval(\n    '(function() {return window.new_page;}())',\n    [],\n    false\n  )\n}\n\nSelenium.prototype.doPageWait = function() {\n  // if (window.document.readyState == \"complete\") {\n  //     return true;\n  // } else {\n  //     return false;\n  // }\n\n  let expression =\n    'if(window.document.readyState==\"complete\"){return true;}else{return false;}'\n  window.sideex_page_done = this.eval(\n    '(function() {' + expression + '}())',\n    [],\n    false\n  )\n}\n\nSelenium.prototype.doAjaxWait = function() {\n  // // check ajax wait\n  // if (window.ajax_obj) {\n  //     if (window.ajax_obj.length == 0) {\n  //         return true;\n  //     } else {\n  //         for (var index in window.ajax_obj) {\n  //         // if readyState is 1~3, then keep waiting\n  //             if (window.ajax_obj[index].readyState !== 4 &&\n  //                 window.ajax_obj[index].readyState !== undefined &&\n  //                 window.ajax_obj[index].readyState !== 0) {\n  //                     return false;\n  //             }\n  //         }\n  //         return true;\n  //     }\n  // } else {\n  //     if (window.origXMLHttpRequest) {\n  //         window.origXMLHttpRequest = \"\";\n  //     }\n  //     return true;\n  // }\n\n  let expression =\n    'if (window.ajax_obj) { if (window.ajax_obj.length == 0) {return true;} else {\\\n                      for (var index in window.ajax_obj) {\\\n                      if (window.ajax_obj[index].readyState !== 4 &&\\\n                      window.ajax_obj[index].readyState !== undefined &&\\\n                      window.ajax_obj[index].readyState !== 0) {return false;}}return true;}}\\\n                      else {if (window.origXMLHttpRequest) {window.origXMLHttpRequest = \"\";}return true;}'\n  window.sideex_ajax_done = this.eval(\n    '(function() {' + expression + '}())',\n    [],\n    false\n  )\n}\n\nSelenium.prototype.doDomWait = function() {\n  window.sideex_dom_time = this.eval(\n    '(function() {return window.domModifiedTime;}())',\n    [],\n    false\n  )\n}\n\nSelenium.prototype.doClick = function(locator) {\n  /**\n   * Clicks on a link, button, checkbox or radio button. If the click action\n   * causes a new page to load (like a link usually does), call\n   * waitForPageToLoad.\n   *\n   * @param locator an element locator\n   *\n   */\n  let element = this.browserbot.findElement(locator)\n  bot.action.click(element)\n}\n\nSelenium.prototype.doDoubleClick = function(locator) {\n  /**\n   * Double clicks on a link, button, checkbox or radio button. If the double click action\n   * causes a new page to load (like a link usually does), call\n   * waitForPageToLoad.\n   *\n   * @param locator an element locator\n   *\n   */\n  let element = this.browserbot.findElement(locator)\n  bot.action.doubleClick(element)\n}\n\nSelenium.prototype.doContextMenu = function(locator) {\n  /**\n   * Simulates opening the context menu for the specified element (as might happen if the user \"right-clicked\" on the element).\n   *\n   * @param locator an element locator\n   *\n   */\n  let element = this.browserbot.findElement(locator)\n  bot.action.rightClick(element)\n}\n\nSelenium.prototype.doClickAt = function(locator, coordString) {\n  /**\n   * Clicks on a link, button, checkbox or radio button. If the click action\n   * causes a new page to load (like a link usually does), call\n   * waitForPageToLoad.\n   *\n   * @param locator an element locator\n   * @param coordString specifies the x,y position (i.e. - 10,20) of the mouse\n   *      event relative to the element returned by the locator.\n   *\n   */\n  let element = this.browserbot.findElement(locator)\n  let coords = getCoords(element, coordString)\n  bot.action.click(element, coords)\n}\n\nSelenium.prototype.doDoubleClickAt = function(locator, coordString) {\n  /**\n   * Doubleclicks on a link, button, checkbox or radio button. If the action\n   * causes a new page to load (like a link usually does), call\n   * waitForPageToLoad.\n   *\n   * @param locator an element locator\n   * @param coordString specifies the x,y position (i.e. - 10,20) of the mouse\n   *      event relative to the element returned by the locator.\n   *\n   */\n  let element = this.browserbot.findElement(locator)\n  let coords = getCoords(element, coordString)\n  bot.action.doubleClick(element, coords)\n}\n\nSelenium.prototype.doClickRandom = function(locator, coordString) {\n  /**\n   * Clicks on a link, button, checkbox or radio button. If the click action\n   * causes a new page to load (like a link usually does), call\n   * waitForPageToLoad.\n   *\n   * @param locator an element locator\n   * @param coordString specifies the x,y position (i.e. - 10,20) of the mouse\n   *      event relative to the element returned by the locator.\n   *\n   */\n  let element = this.browserbot.locateRandomElementByCss(locator)\n  let coords = getCoords(element, coordString)\n  bot.action.click(element, coords)\n}\n\nSelenium.prototype.doContextMenuAt = function(locator, coordString) {\n  /**\n   * Simulates opening the context menu for the specified element (as might happen if the user \"right-clicked\" on the element).\n   *\n   * @param locator an element locator\n   * @param coordString specifies the x,y position (i.e. - 10,20) of the mouse\n   *      event relative to the element returned by the locator.\n   *\n   */\n  let element = this.browserbot.findElement(locator)\n  let coords = getCoords(element, coordString)\n  bot.action.rightClick(element, coords)\n}\n\nSelenium.prototype.doFocus = function(locator) {\n  /** Move the focus to the specified element; for example, if the element is an input field, move the cursor to that field.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   */\n  let element = this.browserbot.findElement(locator)\n  if (element.focus) {\n    element.focus()\n  } else {\n    bot.events.fire(element, bot.events.EventType.FOCUS)\n  }\n}\n\nSelenium.prototype.doShiftKeyDown = function() {\n  /**\n   * Press the shift key and hold it down until doShiftUp() is called or a new page is loaded.\n   *\n   */\n  this.browserbot.shiftKeyDown = true\n  core.events.shiftKeyDown_ = true\n}\n\nSelenium.prototype.doShiftKeyUp = function() {\n  /**\n   * Release the shift key.\n   *\n   */\n  this.browserbot.shiftKeyDown = false\n  core.events.shiftKeyDown_ = false\n}\n\nSelenium.prototype.doMetaKeyDown = function() {\n  /**\n   * Press the meta key and hold it down until doMetaUp() is called or a new page is loaded.\n   *\n   */\n  this.browserbot.metaKeyDown = true\n  core.events.metaKeyDown_ = true\n}\n\nSelenium.prototype.doMetaKeyUp = function() {\n  /**\n   * Release the meta key.\n   *\n   */\n  this.browserbot.metaKeyDown = false\n  core.events.metaKeyDown_ = false\n}\n\nSelenium.prototype.doAltKeyDown = function() {\n  /**\n   * Press the alt key and hold it down until doAltUp() is called or a new page is loaded.\n   *\n   */\n  this.browserbot.altKeyDown = true\n  core.events.altKeyDown_ = true\n}\n\nSelenium.prototype.doAltKeyUp = function() {\n  /**\n   * Release the alt key.\n   *\n   */\n  this.browserbot.altKeyDown = false\n  core.events.altKeyDown_ = false\n}\n\nSelenium.prototype.doControlKeyDown = function() {\n  /**\n   * Press the control key and hold it down until doControlUp() is called or a new page is loaded.\n   *\n   */\n  this.browserbot.controlKeyDown = true\n  core.events.controlKeyDown_ = true\n}\n\nSelenium.prototype.doControlKeyUp = function() {\n  /**\n   * Release the control key.\n   *\n   */\n  this.browserbot.controlKeyDown = false\n  core.events.controlKeyDown_ = false\n}\n\nfunction getClientXY(element, coordString) {\n  // Parse coordString\n  let coords = null\n  let x\n  let y\n  if (coordString) {\n    coords = coordString.split(/,/)\n    x = Number(coords[0])\n    y = Number(coords[1])\n  } else {\n    x = y = 0\n  }\n\n  // Get position of element,\n  // Return 2 item array with clientX and clientY\n  return [\n    Selenium.prototype.getElementPositionLeft(element) + x,\n    Selenium.prototype.getElementPositionTop(element) + y,\n  ]\n}\n\nfunction getCoords(_element, coordString) {\n  // Parse coordString\n  let coords = null\n  let x\n  let y\n  if (coordString) {\n    coords = coordString.split(/,/)\n    x = Number(coords[0])\n    y = Number(coords[1])\n  } else {\n    x = y = 0\n  }\n\n  return new goog.math.Coordinate(x, y)\n}\n\nSelenium.prototype.prepareToInteract_ = function(locator) {\n  let element = this.browserbot.findElement(locator)\n  let rect = element.getBoundingClientRect()\n  bot.action.prepareToInteractWith_(\n    element,\n    new goog.math.Coordinate(rect.width / 2, rect.height / 2)\n  )\n  return element.getBoundingClientRect()\n}\n\nSelenium.prototype.doMouseOver = function(locator) {\n  /**\n   * Simulates a user hovering a mouse over the specified element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   */\n\n  let element = this.browserbot.findElement(locator)\n  let rect = element.getBoundingClientRect()\n  bot.action.moveMouse(\n    element,\n    new goog.math.Coordinate(rect.width / 2, rect.height / 2)\n  )\n}\n\nSelenium.prototype.doMouseOut = function(locator) {\n  /**\n   * Simulates a user moving the mouse pointer away from the specified element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   */\n  let element = this.browserbot.findElement(locator)\n  this.browserbot.triggerMouseEvent(element, 'mouseout', true)\n}\n\nSelenium.prototype.doMouseDown = function(locator) {\n  /**\n   * Simulates a user pressing the left mouse button (without releasing it yet) on\n   * the specified element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   */\n  let element = this.browserbot.findElement(locator)\n  this.browserbot.triggerMouseEvent(element, 'mousedown', true)\n}\n\nSelenium.prototype.doMouseDownRight = function(locator) {\n  /**\n   * Simulates a user pressing the right mouse button (without releasing it yet) on\n   * the specified element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   */\n  let element = this.browserbot.findElement(locator)\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mousedown',\n    true,\n    undefined,\n    undefined,\n    Selenium.RIGHT_MOUSE_CLICK\n  )\n}\n\nSelenium.prototype.doMouseDownAt = function(locator, coordString) {\n  /**\n   * Simulates a user pressing the left mouse button (without releasing it yet) at\n   * the specified location.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @param coordString specifies the x,y position (i.e. - 10,20) of the mouse\n   *      event relative to the element returned by the locator.\n   */\n  let element = this.browserbot.findElement(locator)\n  let clientXY = getClientXY(element, coordString)\n\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mousedown',\n    true,\n    clientXY[0],\n    clientXY[1]\n  )\n}\n\nSelenium.prototype.doMouseDownRightAt = function(locator, coordString) {\n  /**\n   * Simulates a user pressing the right mouse button (without releasing it yet) at\n   * the specified location.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @param coordString specifies the x,y position (i.e. - 10,20) of the mouse\n   *      event relative to the element returned by the locator.\n   */\n  let element = this.browserbot.findElement(locator)\n  let clientXY = getClientXY(element, coordString)\n\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mousedown',\n    true,\n    clientXY[0],\n    clientXY[1],\n    Selenium.RIGHT_MOUSE_CLICK\n  )\n}\n\nSelenium.prototype.doMouseUp = function(locator) {\n  /**\n   * Simulates the event that occurs when the user releases the mouse button (i.e., stops\n   * holding the button down) on the specified element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   */\n  let element = this.browserbot.findElement(locator)\n  this.browserbot.triggerMouseEvent(element, 'mouseup', true)\n}\n\nSelenium.prototype.doMouseUpRight = function(locator) {\n  /**\n   * Simulates the event that occurs when the user releases the right mouse button (i.e., stops\n   * holding the button down) on the specified element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   */\n  let element = this.browserbot.findElement(locator)\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mouseup',\n    true,\n    undefined,\n    undefined,\n    Selenium.RIGHT_MOUSE_CLICK\n  )\n}\n\nSelenium.prototype.doMouseUpAt = function(locator, coordString) {\n  /**\n   * Simulates the event that occurs when the user releases the mouse button (i.e., stops\n   * holding the button down) at the specified location.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @param coordString specifies the x,y position (i.e. - 10,20) of the mouse\n   *      event relative to the element returned by the locator.\n   */\n  let element = this.browserbot.findElement(locator)\n  let clientXY = getClientXY(element, coordString)\n\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mouseup',\n    true,\n    clientXY[0],\n    clientXY[1]\n  )\n}\n\nSelenium.prototype.doMouseUpRightAt = function(locator, coordString) {\n  /**\n   * Simulates the event that occurs when the user releases the right mouse button (i.e., stops\n   * holding the button down) at the specified location.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @param coordString specifies the x,y position (i.e. - 10,20) of the mouse\n   *      event relative to the element returned by the locator.\n   */\n  let element = this.browserbot.findElement(locator)\n  let clientXY = getClientXY(element, coordString)\n\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mouseup',\n    true,\n    clientXY[0],\n    clientXY[1],\n    Selenium.RIGHT_MOUSE_CLICK\n  )\n}\n\nSelenium.prototype.doMouseMove = function(locator) {\n  /**\n   * Simulates a user pressing the mouse button (without releasing it yet) on\n   * the specified element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   */\n  let element = this.browserbot.findElement(locator)\n  this.browserbot.triggerMouseEvent(element, 'mousemove', true)\n}\n\nSelenium.prototype.doMouseMoveAt = function(locator, coordString) {\n  /**\n   * Simulates a user pressing the mouse button (without releasing it yet) on\n   * the specified element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @param coordString specifies the x,y position (i.e. - 10,20) of the mouse\n   *      event relative to the element returned by the locator.\n   */\n\n  let element = this.browserbot.findElement(locator)\n  let clientXY = getClientXY(element, coordString)\n\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mousemove',\n    true,\n    clientXY[0],\n    clientXY[1]\n  )\n}\n\nSelenium.prototype.doType = function(locator, value) {\n  /**\n   * Sets the value of an input field, as though you typed it in.\n   *\n   * <p>Can also be used to set the value of combo boxes, check boxes, etc. In these cases,\n   * value should be the value of the option selected, not the visible text.</p>\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @param value the value to type\n   */\n  if (\n    this.browserbot.controlKeyDown ||\n    this.browserbot.altKeyDown ||\n    this.browserbot.metaKeyDown\n  ) {\n    throw new SeleniumError(\n      'type not supported immediately after call to controlKeyDown() or altKeyDown() or metaKeyDown()'\n    )\n  }\n\n  let element = this.browserbot.findElement(locator)\n\n  core.events.setValue(element, '')\n  const type = element.type\n  if (type === 'number' || type === 'date') {\n    core.events.setValue(element, value)\n  } else {\n    bot.action.type(element, value)\n    if (element.value !== value) {\n      core.events.setValue(element, value)\n    }\n  }\n}\n\nSelenium.prototype.doSendKeys = function(locator, value) {\n  /**\n   * *Experimental* Simulates keystroke events on the specified element, as though you typed the value key-by-key.\n   *\n   * <p>This simulates a real user typing every character in the specified string; it is also bound by the limitations of a\n   * real user, like not being able to type into a invisible or read only elements. This is useful for dynamic UI widgets\n   * (like auto-completing combo boxes) that require explicit key events.</p>\n   * <p>Unlike the simple \"type\" command, which forces the specified value into the page directly, this command will not\n   * replace the existing content. If you want to replace the existing contents, you need to use the simple \"type\" command to set the value of the\n   * field to empty string to clear the field and then the \"sendKeys\" command to send the keystroke for what you want\n   * to type.</p>\n   * <p>This command is experimental. It may replace the typeKeys command in the future.</p>\n   * <p>For those who are interested in the details, unlike the typeKeys command, which tries to\n   * fire the keyDown, the keyUp and the keyPress events, this command is backed by the atoms from Selenium 2 and provides a\n   * much more robust implementation that will be maintained in the future.</p>\n   *\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @param value the value to type\n   */\n  if (\n    this.browserbot.controlKeyDown ||\n    this.browserbot.altKeyDown ||\n    this.browserbot.metaKeyDown\n  ) {\n    throw new SeleniumError(\n      'type not supported immediately after call to controlKeyDown() or altKeyDown() or metaKeyDown()'\n    )\n  }\n\n  let element = this.browserbot.findElement(locator)\n  let keys = this.replaceKeys(value)\n  bot.action.type(element, keys)\n}\n\nSelenium.prototype.doSetSpeed = function() {\n  /**\n   * Set execution speed (i.e., set the millisecond length of a delay which will follow each selenium operation).  By default, there is no such delay, i.e.,\n   * the delay is 0 milliseconds.\n   *\n   * @param value the number of milliseconds to pause after operation\n   */\n  throw new SeleniumError(\n    'this operation is only implemented in selenium-rc, and should never result in a request making it across the wire'\n  )\n}\n\nSelenium.prototype.getSpeed = function() {\n  /**\n   * Get execution speed (i.e., get the millisecond length of the delay following each selenium operation).  By default, there is no such delay, i.e.,\n   * the delay is 0 milliseconds.\n   *\n   * See also setSpeed.\n   *\n   * @return string the execution speed in milliseconds.\n   */\n  throw new SeleniumError(\n    'this operation is only implemented in selenium-rc, and should never result in a request making it across the wire'\n  )\n}\n\nSelenium.prototype.findToggleButton = function(locator) {\n  let element = this.browserbot.findElement(locator)\n  if (element.checked == null) {\n    throw new Error('Element ' + locator + ' is not a toggle-button.') // eslint-disable-line no-undef\n  }\n  return element\n}\n\nSelenium.prototype.doCheck = function(locator) {\n  /**\n   * Check a toggle-button (checkbox/radio)\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   */\n  this.findToggleButton(locator).checked = true\n}\n\nSelenium.prototype.doUncheck = function(locator) {\n  /**\n   * Uncheck a toggle-button (checkbox/radio)\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   */\n  this.findToggleButton(locator).checked = false\n}\n\nSelenium.prototype.doSelect = function(selectLocator, optionLocator) {\n  /**\n   * Select an option from a drop-down using an option locator.\n   *\n   * <p>\n   * Option locators provide different ways of specifying options of an HTML\n   * Select element (e.g. for selecting a specific option, or for asserting\n   * that the selected option satisfies a specification). There are several\n   * forms of Select Option Locator.\n   * </p>\n   * <ul>\n   * <li><strong>label</strong>=<em>labelPattern</em>:\n   * matches options based on their labels, i.e. the visible text. (This\n   * is the default.)\n   * <ul class=\"first last simple\">\n   * <li>label=regexp:^[Oo]ther</li>\n   * </ul>\n   * </li>\n   * <li><strong>value</strong>=<em>valuePattern</em>:\n   * matches options based on their values.\n   * <ul class=\"first last simple\">\n   * <li>value=other</li>\n   * </ul>\n   *\n   *\n   * </li>\n   * <li><strong>id</strong>=<em>id</em>:\n   *\n   * matches options based on their ids.\n   * <ul class=\"first last simple\">\n   * <li>id=option1</li>\n   * </ul>\n   * </li>\n   * <li><strong>index</strong>=<em>index</em>:\n   * matches an option based on its index (offset from zero).\n   * <ul class=\"first last simple\">\n   *\n   * <li>index=2</li>\n   * </ul>\n   * </li>\n   * </ul>\n   * <p>\n   * If no option locator prefix is provided, the default behaviour is to match on <strong>label</strong>.\n   * </p>\n   *\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @param optionLocator an option locator (a label by default)\n   */\n  let element = this.browserbot.findElement(selectLocator)\n  if (!('options' in element)) {\n    throw new SeleniumError(\n      'Specified element is not a Select (has no options)'\n    )\n  }\n  let locator = this.optionLocatorFactory.fromLocatorString(optionLocator)\n  let option = locator.findOption(element)\n  this.browserbot.selectOption(element, option)\n}\n\nSelenium.prototype.doAddSelection = function(locator, optionLocator) {\n  /**\n   * Add a selection to the set of selected options in a multi-select element using an option locator.\n   *\n   * @see #doSelect for details of option locators\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> identifying a multi-select box\n   * @param optionLocator an option locator (a label by default)\n   */\n  let element = this.browserbot.findElement(locator)\n  if (!('options' in element)) {\n    throw new SeleniumError(\n      'Specified element is not a Select (has no options)'\n    )\n  }\n  let currLocator = this.optionLocatorFactory.fromLocatorString(optionLocator)\n  let option = currLocator.findOption(element)\n  this.browserbot.addSelection(element, option)\n}\n\nSelenium.prototype.doRemoveSelection = function(locator, optionLocator) {\n  /**\n   * Remove a selection from the set of selected options in a multi-select element using an option locator.\n   *\n   * @see #doSelect for details of option locators\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> identifying a multi-select box\n   * @param optionLocator an option locator (a label by default)\n   */\n\n  let element = this.browserbot.findElement(locator)\n  if (!('options' in element)) {\n    throw new SeleniumError(\n      'Specified element is not a Select (has no options)'\n    )\n  }\n  let currLocator = this.optionLocatorFactory.fromLocatorString(optionLocator)\n  let option = currLocator.findOption(element)\n  this.browserbot.removeSelection(element, option)\n}\n\nSelenium.prototype.doRemoveAllSelections = function(locator) {\n  /**\n   * Unselects all of the selected options in a multi-select element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> identifying a multi-select box\n   */\n  let element = this.browserbot.findElement(locator)\n  if (!('options' in element)) {\n    throw new SeleniumError(\n      'Specified element is not a Select (has no options)'\n    )\n  }\n  for (let i = 0; i < element.options.length; i++) {\n    this.browserbot.removeSelection(element, element.options[i])\n  }\n}\n\nSelenium.prototype.doSubmit = function(formLocator) {\n  /**\n   * Submit the specified form. This is particularly useful for forms without\n   * submit buttons, e.g. single-input \"Search\" forms.\n   *\n   * @param formLocator an <a href=\"#locators\">element locator</a> for the form you want to submit\n   */\n  let form = this.browserbot.findElement(formLocator)\n  return bot.action.submit(form)\n}\n\nSelenium.prototype.makePageLoadCondition = function(timeout) {\n  if (timeout == null) {\n    timeout = this.defaultTimeout\n  }\n  // if the timeout is zero, we won't wait for the page to load before returning\n  if (timeout == 0) {\n    // abort XHR request\n    this._abortXhrRequest()\n    return\n  }\n  return Selenium.decorateFunctionWithTimeout(\n    this._isNewPageLoaded.bind(this),\n    timeout,\n    this._abortXhrRequest.bind(this)\n  )\n}\n\nSelenium.prototype.doOpen = function(url, ignoreResponseCode) {\n  /**\n   * Opens an URL in the test frame. This accepts both relative and absolute\n   * URLs.\n   *\n   * The &quot;open&quot; command waits for the page to load before proceeding,\n   * ie. the &quot;AndWait&quot; suffix is implicit.\n   *\n   * <em>Note</em>: The URL must be on the same domain as the runner HTML\n   * due to security restrictions in the browser (Same Origin Policy). If you\n   * need to open an URL on another domain, use the Selenium Server to start a\n   * new browser session on that domain.\n   *\n   * @param url the URL to open; may be relative or absolute\n   * @param ignoreResponseCode (optional) turn off ajax head request functionality\n   *\n   */\n  if (ignoreResponseCode == null || ignoreResponseCode.length == 0) {\n    this.browserbot.ignoreResponseCode = true\n  } else if (ignoreResponseCode.toLowerCase() == 'true') {\n    this.browserbot.ignoreResponseCode = true\n  } else {\n    this.browserbot.ignoreResponseCode = false\n  }\n  this.browserbot.openLocation(url)\n  if (window['proxyInjectionMode'] == null || !window['proxyInjectionMode']) {\n    return this.makePageLoadCondition()\n  } // in PI mode, just return \"OK\"; the server will waitForLoad\n}\n\nSelenium.prototype.doOpenWindow = function(url, windowID) {\n  /**\n   * Opens a popup window (if a window with that ID isn't already open).\n   * After opening the window, you'll need to select it using the selectWindow\n   * command.\n   *\n   * <p>This command can also be a useful workaround for bug SEL-339.  In some cases, Selenium will be unable to intercept a call to window.open (if the call occurs during or before the \"onLoad\" event, for example).\n   * In those cases, you can force Selenium to notice the open window's name by using the Selenium openWindow command, using\n   * an empty (blank) url, like this: openWindow(\"\", \"myFunnyWindow\").</p>\n   *\n   * @param url the URL to open, which can be blank\n   * @param windowID the JavaScript window ID of the window to select\n   */\n  this.browserbot.openWindow(url, windowID)\n}\n\nSelenium.prototype.doSelectWindow = function(windowID) {\n  /**\n   * Selects a popup window using a window locator; once a popup window has been selected, all\n   * commands go to that window. To select the main window again, use null\n   * as the target.\n   *\n   * <p>\n   *\n   * Window locators provide different ways of specifying the window object:\n   * by title, by internal JavaScript \"name,\" or by JavaScript variable.\n   * </p>\n   * <ul>\n   * <li><strong>title</strong>=<em>My Special Window</em>:\n   * Finds the window using the text that appears in the title bar.  Be careful;\n   * two windows can share the same title.  If that happens, this locator will\n   * just pick one.\n   * </li>\n   * <li><strong>name</strong>=<em>myWindow</em>:\n   * Finds the window using its internal JavaScript \"name\" property.  This is the second\n   * parameter \"windowName\" passed to the JavaScript method window.open(url, windowName, windowFeatures, replaceFlag)\n   * (which Selenium intercepts).\n   * </li>\n   * <li><strong>var</strong>=<em>variableName</em>:\n   * Some pop-up windows are unnamed (anonymous), but are associated with a JavaScript variable name in the current\n   * application window, e.g. \"window.foo = window.open(url);\".  In those cases, you can open the window using\n   * \"var=foo\".\n   * </li>\n   * </ul>\n   * <p>\n   * If no window locator prefix is provided, we'll try to guess what you mean like this:</p>\n   * <p>1.) if windowID is null, (or the string \"null\") then it is assumed the user is referring to the original window instantiated by the browser).</p>\n   * <p>2.) if the value of the \"windowID\" parameter is a JavaScript variable name in the current application window, then it is assumed\n   * that this variable contains the return value from a call to the JavaScript window.open() method.</p>\n   * <p>3.) Otherwise, selenium looks in a hash it maintains that maps string names to window \"names\".</p>\n   * <p>4.) If <em>that</em> fails, we'll try looping over all of the known windows to try to find the appropriate \"title\".\n   * Since \"title\" is not necessarily unique, this may have unexpected behavior.</p>\n   *\n   * <p>If you're having trouble figuring out the name of a window that you want to manipulate, look at the Selenium log messages\n   * which identify the names of windows created via window.open (and therefore intercepted by Selenium).  You will see messages\n   * like the following for each window as it is opened:</p>\n   *\n   * <p><code>debug: window.open call intercepted; window ID (which you can use with selectWindow()) is \"myNewWindow\"</code></p>\n   *\n   * <p>In some cases, Selenium will be unable to intercept a call to window.open (if the call occurs during or before the \"onLoad\" event, for example).\n   * (This is bug SEL-339.)  In those cases, you can force Selenium to notice the open window's name by using the Selenium openWindow command, using\n   * an empty (blank) url, like this: openWindow(\"\", \"myFunnyWindow\").</p>\n   *\n   * @param windowID the JavaScript window ID of the window to select\n   */\n  this.browserbot.selectWindow(windowID)\n}\n\nSelenium.prototype.doSelectPopUp = function(windowID) {\n  /**\n   * Simplifies the process of selecting a popup window (and does not offer\n   * functionality beyond what <code>selectWindow()</code> already provides).\n   * <ul>\n   * <li>If <code>windowID</code> is either not specified, or specified as\n   * \"null\", the first non-top window is selected. The top window is the one\n   * that would be selected by <code>selectWindow()</code> without providing a\n   * <code>windowID</code> . This should not be used when more than one popup\n   * window is in play.</li>\n   * <li>Otherwise, the window will be looked up considering\n   * <code>windowID</code> as the following in order: 1) the \"name\" of the\n   * window, as specified to <code>window.open()</code>; 2) a javascript\n   * variable which is a reference to a window; and 3) the title of the\n   * window. This is the same ordered lookup performed by\n   * <code>selectWindow</code> .</li>\n   * </ul>\n   *\n   * @param windowID  an identifier for the popup window, which can take on a\n   *                  number of different meanings\n   */\n  this.browserbot.selectPopUp(windowID)\n}\n\nSelenium.prototype.doDeselectPopUp = function() {\n  /**\n   * Selects the main window. Functionally equivalent to using\n   * <code>selectWindow()</code> and specifying no value for\n   * <code>windowID</code>.\n   */\n  this.browserbot.selectWindow()\n}\n\nSelenium.prototype.doSelectFrame = function(locator) {\n  /**\n   * Selects a frame within the current window.  (You may invoke this command\n   * multiple times to select nested frames.)  To select the parent frame, use\n   * \"relative=parent\" as a locator; to select the top frame, use \"relative=top\".\n   * You can also select a frame by its 0-based index number; select the first frame with\n   * \"index=0\", or the third frame with \"index=2\".\n   *\n   * <p>You may also use a DOM expression to identify the frame you want directly,\n   * like this: <code>dom=frames[\"main\"].frames[\"subframe\"]</code></p>\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> identifying a frame or iframe\n   */\n  this.browserbot.selectFrame(locator)\n}\n\nSelenium.prototype.getWhetherThisFrameMatchFrameExpression = function(\n  currentFrameString,\n  target\n) {\n  /**\n   * Determine whether current/locator identify the frame containing this running code.\n   *\n   * <p>This is useful in proxy injection mode, where this code runs in every\n   * browser frame and window, and sometimes the selenium server needs to identify\n   * the \"current\" frame.  In this case, when the test calls selectFrame, this\n   * routine is called for each frame to figure out which one has been selected.\n   * The selected frame will return true, while all others will return false.</p>\n   *\n   * @param currentFrameString starting frame\n   * @param target new frame (which might be relative to the current one)\n   * @return boolean true if the new frame is this code's window\n   */\n  return this.browserbot.doesThisFrameMatchFrameExpression(\n    currentFrameString,\n    target\n  )\n}\n\nSelenium.prototype.getWhetherThisWindowMatchWindowExpression = function(\n  _currentWindowString,\n  target\n) {\n  /**\n   * Determine whether currentWindowString plus target identify the window containing this running code.\n   *\n   * <p>This is useful in proxy injection mode, where this code runs in every\n   * browser frame and window, and sometimes the selenium server needs to identify\n   * the \"current\" window.  In this case, when the test calls selectWindow, this\n   * routine is called for each window to figure out which one has been selected.\n   * The selected window will return true, while all others will return false.</p>\n   *\n   * @param currentWindowString starting window\n   * @param target new window (which might be relative to the current one, e.g., \"_parent\")\n   * @return boolean true if the new window is this code's window\n   */\n  if (\n    window.opener != null &&\n    window.opener[target] != null &&\n    window.opener[target] == window\n  ) {\n    return true\n  }\n  return false\n}\n\nSelenium.prototype.doWaitForPopUp = function(windowID, timeout) {\n  /**\n   * Waits for a popup window to appear and load up.\n   *\n   * @param windowID the JavaScript window \"name\" of the window that will appear (not the text of the title bar)\n   *                 If unspecified, or specified as \"null\", this command will\n   *                 wait for the first non-top window to appear (don't rely\n   *                 on this if you are working with multiple popups\n   *                 simultaneously).\n   * @param timeout a timeout in milliseconds, after which the action will return with an error.\n   *                If this value is not specified, the default Selenium\n   *                timeout will be used. See the setTimeout() command.\n   */\n  if (!timeout) {\n    timeout = this.defaultTimeout\n  }\n  let timeoutTime = getTimeoutTime(timeout)\n\n  let popupLoadedPredicate = function() {\n    let targetWindow\n    try {\n      if (windowID && windowID != 'null') {\n        targetWindow = selenium.browserbot.getWindowByName(windowID, true)\n      } else {\n        let names = selenium.browserbot.getNonTopWindowNames()\n        targetWindow = selenium.browserbot.getWindowByName(names[0], true)\n      }\n    } catch (e) {\n      if (new Date().getTime() > timeoutTime) {\n        throw e\n      }\n    }\n\n    if (!targetWindow) return false\n    try {\n      if (!targetWindow.location) return false\n      if ('about:blank' == targetWindow.location) return false\n    } catch (e) {\n      //LOG.debug(\"Location exception (\" + e.message + \")!\");\n      return false\n    }\n    if (browserVersion.isKonqueror) {\n      if ('/' == targetWindow.location.href) {\n        // apparently Konqueror uses this as the temporary location, instead of about:blank\n        return false\n      }\n    }\n    if (browserVersion.isSafari) {\n      if (\n        targetWindow.location.href ==\n        selenium.browserbot.buttonWindow.location.href\n      ) {\n        // Apparently Safari uses this as the temporary location, instead of about:blank\n        // what a world!\n        //LOG.debug(\"DGF what a world!\");\n        return false\n      }\n    }\n    if (!targetWindow.document) return false\n    if (!selenium.browserbot.getCurrentWindow().document.readyState) {\n      // This is Firefox, with no readyState extension\n      return true\n    }\n    if ('complete' != targetWindow.document.readyState) return false\n    return true\n  }\n\n  return Selenium.decorateFunctionWithTimeout(popupLoadedPredicate, timeout)\n}\n\nSelenium.prototype.doWaitForPopUp.dontCheckAlertsAndConfirms = true\n\n//Selenium.prototype.doChooseCancelOnNextConfirmation = function() {\n/**\n * <p>\n * By default, Selenium's overridden window.confirm() function will\n * return true, as if the user had manually clicked OK; after running\n * this command, the next call to confirm() will return false, as if\n * the user had clicked Cancel.  Selenium will then resume using the\n * default behavior for future confirmations, automatically returning\n * true (OK) unless/until you explicitly call this command for each\n * confirmation.\n * </p>\n * <p>\n * Take note - every time a confirmation comes up, you must\n * consume it with a corresponding getConfirmation, or else\n * the next selenium operation will fail.\n * </p>\n */\n//this.browserbot.cancelNextConfirmation(false);\n//};\n\n//Selenium.prototype.doChooseOkOnNextConfirmation = function() {\n/**\n * <p>\n * Undo the effect of calling chooseCancelOnNextConfirmation.  Note\n * that Selenium's overridden window.confirm() function will normally automatically\n * return true, as if the user had manually clicked OK, so you shouldn't\n * need to use this command unless for some reason you need to change\n * your mind prior to the next confirmation.  After any confirmation, Selenium will resume using the\n * default behavior for future confirmations, automatically returning\n * true (OK) unless/until you explicitly call chooseCancelOnNextConfirmation for each\n * confirmation.\n * </p>\n * <p>\n * Take note - every time a confirmation comes up, you must\n * consume it with a corresponding getConfirmation, or else\n * the next selenium operation will fail.\n * </p>\n *\n */\n//this.browserbot.cancelNextConfirmation(true);\n//};\n\n//Selenium.prototype.doAnswerOnNextPrompt = function(answer) {\n/**\n * Instructs Selenium to return the specified answer string in response to\n * the next JavaScript prompt [window.prompt()].\n *\n *\n * @param answer the answer to give in response to the prompt pop-up\n */\n//this.browserbot.setNextPromptResult(answer);\n//};\n\nSelenium.prototype.doGoBack = function() {\n  /**\n   * Simulates the user clicking the \"back\" button on their browser.\n   *\n   */\n  this.browserbot.goBack()\n}\n\nSelenium.prototype.doRefresh = function() {\n  /**\n   * Simulates the user clicking the \"Refresh\" button on their browser.\n   *\n   */\n  this.browserbot.refresh()\n}\n\nSelenium.prototype.doClose = function() {\n  /**\n   * Simulates the user clicking the \"close\" button in the titlebar of a popup\n   * window or tab.\n   */\n  this.browserbot.close()\n}\n\nSelenium.prototype.ensureNoUnhandledPopups = function() {\n  if (this.browserbot.hasAlerts()) {\n    throw new SeleniumError(\n      'There was an unexpected Alert! [' + this.browserbot.getNextAlert() + ']'\n    )\n  }\n  if (this.browserbot.hasConfirmations()) {\n    throw new SeleniumError(\n      'There was an unexpected Confirmation! [' +\n        this.browserbot.getNextConfirmation() +\n        ']'\n    )\n  }\n}\n\nSelenium.prototype.isAlertPresent = function() {\n  /**\n   * Has an alert occurred?\n   *\n   * <p>\n   * This function never throws an exception\n   * </p>\n   * @return boolean true if there is an alert\n   */\n  return this.browserbot.hasAlerts()\n}\n\nSelenium.prototype.isPromptPresent = function() {\n  /**\n   * Has a prompt occurred?\n   *\n   * <p>\n   * This function never throws an exception\n   * </p>\n   * @return boolean true if there is a pending prompt\n   */\n  return this.browserbot.hasPrompts()\n}\n\nSelenium.prototype.isConfirmationPresent = function() {\n  /**\n   * Has confirm() been called?\n   *\n   * <p>\n   * This function never throws an exception\n   * </p>\n   * @return boolean true if there is a pending confirmation\n   */\n  return this.browserbot.hasConfirmations()\n}\nSelenium.prototype.getAlert = function() {\n  /**\n     * Retrieves the message of a JavaScript alert generated during the previous action, or fail if there were no alerts.\n     *\n     * <p>Getting an alert has the same effect as manually clicking OK. If an\n     * alert is generated but you do not consume it with getAlert, the next Selenium action\n     * will fail.</p>\n     *\n     * <p>Under Selenium, JavaScript alerts will NOT pop up a visible alert\n     * dialog.</p>\n     *\n     * <p>Selenium does NOT support JavaScript alerts that are generated in a\n     * page's onload() event handler. In this case a visible dialog WILL be\n     * generated and Selenium will hang until someone manually clicks OK.</p>\n     * @return string The message of the most recent JavaScript alert\n\n     */\n  if (!this.browserbot.hasAlerts()) {\n    Assert.fail('There were no alerts') // eslint-disable-line no-undef\n  }\n  return this.browserbot.getNextAlert()\n}\nSelenium.prototype.getAlert.dontCheckAlertsAndConfirms = true\n\nSelenium.prototype.getConfirmation = function() {\n  /**\n   * Retrieves the message of a JavaScript confirmation dialog generated during\n   * the previous action.\n   *\n   * <p>\n   * By default, the confirm function will return true, having the same effect\n   * as manually clicking OK. This can be changed by prior execution of the\n   * chooseCancelOnNextConfirmation command.\n   * </p>\n   * <p>\n   * If an confirmation is generated but you do not consume it with getConfirmation,\n   * the next Selenium action will fail.\n   * </p>\n   *\n   * <p>\n   * NOTE: under Selenium, JavaScript confirmations will NOT pop up a visible\n   * dialog.\n   * </p>\n   *\n   * <p>\n   * NOTE: Selenium does NOT support JavaScript confirmations that are\n   * generated in a page's onload() event handler. In this case a visible\n   * dialog WILL be generated and Selenium will hang until you manually click\n   * OK.\n   * </p>\n   *\n   * @return string the message of the most recent JavaScript confirmation dialog\n   */\n  if (!this.browserbot.hasConfirmations()) {\n    Assert.fail('There were no confirmations') // eslint-disable-line no-undef\n  }\n  return this.browserbot.getNextConfirmation()\n}\nSelenium.prototype.getConfirmation.dontCheckAlertsAndConfirms = true\n\nSelenium.prototype.getPrompt = function() {\n  /**\n   * Retrieves the message of a JavaScript question prompt dialog generated during\n   * the previous action.\n   *\n   * <p>Successful handling of the prompt requires prior execution of the\n   * answerOnNextPrompt command. If a prompt is generated but you\n   * do not get/verify it, the next Selenium action will fail.</p>\n   *\n   * <p>NOTE: under Selenium, JavaScript prompts will NOT pop up a visible\n   * dialog.</p>\n   *\n   * <p>NOTE: Selenium does NOT support JavaScript prompts that are generated in a\n   * page's onload() event handler. In this case a visible dialog WILL be\n   * generated and Selenium will hang until someone manually clicks OK.</p>\n   * @return string the message of the most recent JavaScript question prompt\n   */\n  if (!this.browserbot.hasPrompts()) {\n    Assert.fail('There were no prompts') // eslint-disable-line no-undef\n  }\n  return this.browserbot.getNextPrompt()\n}\n\nSelenium.prototype.getLocation = function() {\n  /** Gets the absolute URL of the current page.\n   *\n   * @return string the absolute URL of the current page\n   */\n  return this.browserbot.getCurrentWindow().location.href\n}\n\nSelenium.prototype.getTitle = function() {\n  /** Gets the title of the current page.\n   *\n   * @return string the title of the current page\n   */\n  return this.browserbot.getTitle()\n}\n\nSelenium.prototype.getBodyText = function() {\n  /**\n   * Gets the entire text of the page.\n   * @return string the entire text of the page\n   */\n  return this.browserbot.bodyText()\n}\n\nSelenium.prototype.getValue = function(locator) {\n  /**\n   * Gets the (whitespace-trimmed) value of an input field (or anything else with a value parameter).\n   * For checkbox/radio elements, the value will be \"on\" or \"off\" depending on\n   * whether the element is checked or not.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @return string the element value, or \"on/off\" for checkbox/radio elements\n   */\n  let element = this.browserbot.findElement(locator)\n  return element.value.trim()\n}\n\nSelenium.prototype.getText = function(locator) {\n  /**\n   * Gets the text of an element. This works for any element that contains\n   * text. This command uses either the textContent (Mozilla-like browsers) or\n   * the innerText (IE-like browsers) of the element, which is the rendered\n   * text shown to the user.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @return string the text of the element\n   */\n  let element = this.browserbot.findElement(locator)\n  return bot.dom.getVisibleText(element)\n}\n\nSelenium.prototype.getEval = function(script) {\n  /** Gets the result of evaluating the specified JavaScript snippet.  The snippet may\n   * have multiple lines, but only the result of the last line will be returned.\n   *\n   * <p>Note that, by default, the snippet will run in the context of the \"selenium\"\n   * object itself, so <code>this</code> will refer to the Selenium object.  Use <code>window</code> to\n   * refer to the window of your application, e.g. <code>window.document.getElementById('foo')</code></p>\n   *\n   * <p>If you need to use\n   * a locator to refer to a single element in your application page, you can\n   * use <code>this.browserbot.findElement(\"id=foo\")</code> where \"id=foo\" is your locator.</p>\n   *\n   * @param script the JavaScript snippet to run\n   * @return string the results of evaluating the snippet\n   */\n  try {\n    //LOG.info('script is: ' + script);\n    let result = this.eval(script)\n    // Selenium RC doesn't allow returning null\n    if (null == result) return 'null'\n    return result\n  } catch (e) {\n    throw new SeleniumError('Threw an exception: ' + extractExceptionMessage(e))\n  }\n}\n\nSelenium.prototype.isChecked = function(locator) {\n  /**\n   * Gets whether a toggle-button (checkbox/radio) is checked.  Fails if the specified element doesn't exist or isn't a toggle-button.\n   * @param locator an <a href=\"#locators\">element locator</a> pointing to a checkbox or radio button\n   * @return boolean true if the checkbox is checked, false otherwise\n   */\n  let element = this.browserbot.findElement(locator)\n  if (element.checked == null) {\n    throw new SeleniumError('Element ' + locator + ' is not a toggle-button.')\n  }\n  return element.checked\n}\n\nSelenium.prototype.getTable = function(tableCellAddress) {\n  /**\n   * Gets the text from a cell of a table. The cellAddress syntax\n   * tableLocator.row.column, where row and column start at 0.\n   *\n   * @param tableCellAddress a cell address, e.g. \"foo.1.4\"\n   * @return string the text from the specified cell\n   */\n  // This regular expression matches \"tableName.row.column\"\n  // For example, \"mytable.3.4\"\n  let pattern = /(.*)\\.(\\d+)\\.(\\d+)/\n\n  if (!pattern.test(tableCellAddress)) {\n    throw new SeleniumError(\n      'Invalid target format. Correct format is tableName.rowNum.columnNum'\n    )\n  }\n\n  let pieces = tableCellAddress.match(pattern)\n\n  let tableName = pieces[1]\n  let row = pieces[2]\n  let col = pieces[3]\n\n  let table = this.browserbot.findElement(tableName)\n  if (row > table.rows.length) {\n    // eslint-disable-next-line no-undef\n    Assert.fail(\n      'Cannot access row ' + row + ' - table has ' + table.rows.length + ' rows'\n    )\n  } else if (col > table.rows[row].cells.length) {\n    // eslint-disable-next-line no-undef\n    Assert.fail(\n      'Cannot access column ' +\n        col +\n        ' - table row has ' +\n        table.rows[row].cells.length +\n        ' columns'\n    )\n  } else {\n    let actualContent = bot.dom.getVisibleText(table.rows[row].cells[col])\n    return actualContent.trim()\n  }\n  return null\n}\n\nSelenium.prototype.getSelectedLabels = function(selectLocator) {\n  /** Gets all option labels (visible text) for selected options in the specified select or multi-select element.\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @return string[] an array of all selected option labels in the specified select drop-down\n   */\n  return this.findSelectedOptionProperties(selectLocator, 'text')\n}\n\nSelenium.prototype.getSelectedLabel = function(selectLocator) {\n  /** Gets option label (visible text) for selected option in the specified select element.\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @return string the selected option label in the specified select drop-down\n   */\n  return this.findSelectedOptionProperty(selectLocator, 'text')\n}\n\nSelenium.prototype.getSelectedValues = function(selectLocator) {\n  /** Gets all option values (value attributes) for selected options in the specified select or multi-select element.\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @return string[] an array of all selected option values in the specified select drop-down\n   */\n  return this.findSelectedOptionProperties(selectLocator, 'value')\n}\n\nSelenium.prototype.getSelectedValue = function(selectLocator) {\n  /** Gets option value (value attribute) for selected option in the specified select element.\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @return string the selected option value in the specified select drop-down\n   */\n  return this.findSelectedOptionProperty(selectLocator, 'value')\n}\n\nSelenium.prototype.getSelectedIndexes = function(selectLocator) {\n  /** Gets all option indexes (option number, starting at 0) for selected options in the specified select or multi-select element.\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @return string[] an array of all selected option indexes in the specified select drop-down\n   */\n  return this.findSelectedOptionProperties(selectLocator, 'index')\n}\n\nSelenium.prototype.getSelectedIndex = function(selectLocator) {\n  /** Gets option index (option number, starting at 0) for selected option in the specified select element.\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @return string the selected option index in the specified select drop-down\n   */\n  return this.findSelectedOptionProperty(selectLocator, 'index')\n}\n\nSelenium.prototype.getSelectedIds = function(selectLocator) {\n  /** Gets all option element IDs for selected options in the specified select or multi-select element.\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @return string[] an array of all selected option IDs in the specified select drop-down\n   */\n  return this.findSelectedOptionProperties(selectLocator, 'id')\n}\n\nSelenium.prototype.getSelectedId = function(selectLocator) {\n  /** Gets option element ID for selected option in the specified select element.\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @return string the selected option ID in the specified select drop-down\n   */\n  return this.findSelectedOptionProperty(selectLocator, 'id')\n}\n\nSelenium.prototype.isSomethingSelected = function(selectLocator) {\n  /** Determines whether some option in a drop-down menu is selected.\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @return boolean true if some option has been selected, false otherwise\n   */\n  let element = this.browserbot.findElement(selectLocator)\n  if (!('options' in element)) {\n    throw new SeleniumError(\n      'Specified element is not a Select (has no options)'\n    )\n  }\n\n  for (let i = 0; i < element.options.length; i++) {\n    if (element.options[i].selected) {\n      return true\n    }\n  }\n  return false\n}\n\nSelenium.prototype.findSelectedOptionProperties = function(locator, property) {\n  let element = this.browserbot.findElement(locator)\n  if (!('options' in element)) {\n    throw new SeleniumError(\n      'Specified element is not a Select (has no options)'\n    )\n  }\n\n  let selectedOptions = []\n\n  for (let i = 0; i < element.options.length; i++) {\n    if (element.options[i].selected) {\n      let propVal = element.options[i][property]\n      selectedOptions.push(propVal)\n    }\n  }\n  if (selectedOptions.length == 0) Assert.fail('No option selected') // eslint-disable-line no-undef\n  return selectedOptions\n}\n\nSelenium.prototype.findSelectedOptionProperty = function(locator, property) {\n  let selectedOptions = this.findSelectedOptionProperties(locator, property)\n  if (selectedOptions.length > 1) {\n    Assert.fail('More than one selected option!') // eslint-disable-line no-undef\n  }\n  return selectedOptions[0]\n}\n\nSelenium.prototype.getSelectOptions = function(selectLocator) {\n  /** Gets all option labels in the specified select drop-down.\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @return string[] an array of all option labels in the specified select drop-down\n   */\n  let element = this.browserbot.findElement(selectLocator)\n\n  let selectOptions = []\n\n  for (let i = 0; i < element.options.length; i++) {\n    let option = element.options[i].text\n    selectOptions.push(option)\n  }\n\n  return selectOptions\n}\n\nSelenium.prototype.getAttribute = function(attributeLocator) {\n  /**\n   * Gets the value of an element attribute. The value of the attribute may\n   * differ across browsers (this is the case for the \"style\" attribute, for\n   * example).\n   *\n   * @param attributeLocator an element locator followed by an &#064; sign and then the name of the attribute, e.g. \"foo&#064;bar\"\n   * @return string the value of the specified attribute\n   */\n  let result = this.browserbot.findAttribute(attributeLocator)\n  if (result == null) {\n    throw new SeleniumError(\n      'Could not find element attribute: ' + attributeLocator\n    )\n  }\n  return result\n}\n\nSelenium.prototype.isTextPresent = function(pattern) {\n  /**\n   * Verifies that the specified text pattern appears somewhere on the rendered page shown to the user.\n   * @param pattern a <a href=\"#patterns\">pattern</a> to match with the text of the page\n   * @return boolean true if the pattern matches the text, false otherwise\n   */\n  let allText = this.browserbot.bodyText()\n\n  let patternMatcher = new PatternMatcher(pattern)\n  if (patternMatcher.strategy == PatternMatcher.strategies.glob) {\n    if (pattern.indexOf('glob:') == 0) {\n      pattern = pattern.substring('glob:'.length) // strip off \"glob:\"\n    }\n    patternMatcher.matcher = new PatternMatcher.strategies.globContains(pattern)\n  } else if (patternMatcher.strategy == PatternMatcher.strategies.exact) {\n    pattern = pattern.substring('exact:'.length) // strip off \"exact:\"\n    return allText.indexOf(pattern) != -1\n  }\n  return patternMatcher.matches(allText)\n}\n\nfunction isElementNotPresent(locator) {\n  return !this.isElementPresent(locator)\n}\n\nSelenium.prototype.isElementPresent = function(locator) {\n  /**\n   * Verifies that the specified element is somewhere on the page.\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @return boolean true if the element is present, false otherwise\n   */\n  let element = this.browserbot.findElementOrNull(locator)\n  if (element == null) {\n    return false\n  }\n  return true\n}\n\nfunction unableToLocateTargetElementError() {\n  throw new Error('Unable to locate target element.')\n}\n\nfunction isNotDisplayed(locator) {\n  try {\n    return !this.isVisible(locator)\n  } catch (error) {\n    unableToLocateTargetElementError()\n  }\n}\n\nfunction isDisplayed(locator) {\n  try {\n    return this.isVisible(locator)\n  } catch (error) {\n    return false\n  }\n}\n\nSelenium.prototype.isVisible = function(locator) {\n  /**\n   * Determines if the specified element is visible. An\n   * element can be rendered invisible by setting the CSS \"visibility\"\n   * property to \"hidden\", or the \"display\" property to \"none\", either for the\n   * element itself or one if its ancestors.  This method will fail if\n   * the element is not present.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @return boolean true if the specified element is visible, false otherwise\n   */\n  let element\n  element = this.browserbot.findElement(locator)\n  // DGF if it's an input tag of type \"hidden\" then it's not visible\n  if (element.tagName) {\n    let tagName = new String(element.tagName).toLowerCase()\n    if (tagName == 'input') {\n      if (element.type) {\n        let elementType = new String(element.type).toLowerCase()\n        if (elementType == 'hidden') {\n          return false\n        }\n      }\n    }\n  }\n  let visibility = this.findEffectiveStyleProperty(element, 'visibility')\n  let _isDisplayed = this._isDisplayed(element)\n  return visibility != 'hidden' && _isDisplayed\n}\n\nSelenium.prototype.findEffectiveStyleProperty = function(element, property) {\n  let effectiveStyle = this.findEffectiveStyle(element)\n  let propertyValue = effectiveStyle[property]\n  if (propertyValue == 'inherit' && element.parentNode.style) {\n    return this.findEffectiveStyleProperty(element.parentNode, property)\n  }\n  return propertyValue\n}\n\nSelenium.prototype._isDisplayed = function(element) {\n  let display = this.findEffectiveStyleProperty(element, 'display')\n  if (display == 'none') return false\n  if (element.parentNode.style) {\n    return this._isDisplayed(element.parentNode)\n  }\n  return true\n}\n\nSelenium.prototype.findEffectiveStyle = function(element) {\n  if (element.style == undefined) {\n    return undefined // not a styled element\n  }\n  let window = this.browserbot.getCurrentWindow()\n  if (window.getComputedStyle) {\n    // DOM-Level-2-CSS\n    return window.getComputedStyle(element, null)\n  }\n  if (element.currentStyle) {\n    // non-standard IE alternative\n    return element.currentStyle\n    // TODO: this won't really work in a general sense, as\n    //   currentStyle is not identical to getComputedStyle()\n    //   ... but it's good enough for \"visibility\"\n  }\n\n  if (\n    window.document.defaultView &&\n    window.document.defaultView.getComputedStyle\n  ) {\n    return window.document.defaultView.getComputedStyle(element, null)\n  }\n\n  throw new SeleniumError(\n    'cannot determine effective stylesheet in this browser'\n  )\n}\n\nfunction isEditable(locator) {\n  try {\n    return this.isEditable(locator)\n  } catch (error) {\n    unableToLocateTargetElementError()\n  }\n}\n\nfunction isNotEditable(locator) {\n  try {\n    return !this.isEditable(locator)\n  } catch (error) {\n    unableToLocateTargetElementError()\n  }\n}\n\nSelenium.prototype.isEditable = function(locator) {\n  /**\n   * Determines whether the specified input element is editable, ie hasn't been disabled.\n   * This method will fail if the specified element isn't an input element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @return boolean true if the input element is editable, false otherwise\n   */\n  let element = this.browserbot.findElement(locator)\n  if (element.value == undefined) {\n    Assert.fail('Element ' + locator + ' is not an input.') // eslint-disable-line no-undef\n  }\n  if (element.disabled) {\n    return false\n  }\n  // DGF \"readonly\" is a bit goofy... it doesn't necessarily have a value\n  // You can write <input readonly value=\"black\">\n  let readOnlyNode = element.getAttributeNode('readonly')\n  if (readOnlyNode) {\n    // DGF on IE, every input element has a readOnly node, but it may be false\n    if (typeof readOnlyNode.nodeValue == 'boolean') {\n      let readOnly = readOnlyNode.nodeValue\n      if (readOnly) {\n        return false\n      }\n    } else {\n      return false\n    }\n  }\n  return true\n}\n\nSelenium.prototype.getAllButtons = function() {\n  /** Returns the IDs of all buttons on the page.\n   *\n   * <p>If a given button has no ID, it will appear as \"\" in this array.</p>\n   *\n   * @return string[] the IDs of all buttons on the page\n   */\n  return this.browserbot.getAllButtons()\n}\n\nSelenium.prototype.getAllLinks = function() {\n  /** Returns the IDs of all links on the page.\n   *\n   * <p>If a given link has no ID, it will appear as \"\" in this array.</p>\n   *\n   * @return string[] the IDs of all links on the page\n   */\n  return this.browserbot.getAllLinks()\n}\n\nSelenium.prototype.getAllFields = function() {\n  /** Returns the IDs of all input fields on the page.\n   *\n   * <p>If a given field has no ID, it will appear as \"\" in this array.</p>\n   *\n   * @return string[] the IDs of all field on the page\n   */\n  return this.browserbot.getAllFields()\n}\n\nSelenium.prototype.doSetMouseSpeed = function(pixels) {\n  /** Configure the number of pixels between \"mousemove\" events during dragAndDrop commands (default=10).\n   * <p>Setting this value to 0 means that we'll send a \"mousemove\" event to every single pixel\n   * in between the start location and the end location; that can be very slow, and may\n   * cause some browsers to force the JavaScript to timeout.</p>\n   *\n   * <p>If the mouse speed is greater than the distance between the two dragged objects, we'll\n   * just send one \"mousemove\" at the start location and then one final one at the end location.</p>\n   * @param pixels the number of pixels between \"mousemove\" events\n   */\n  let intValue = new Number(pixels)\n  if (intValue.constructor != Number || intValue < 0) {\n    this.mouseSpeed = Selenium.DEFAULT_MOUSE_SPEED\n  } else {\n    this.mouseSpeed = pixels\n  }\n}\n\nSelenium.prototype.getMouseSpeed = function() {\n  /** Returns the number of pixels between \"mousemove\" events during dragAndDrop commands (default=10).\n   *\n   * @return number the number of pixels between \"mousemove\" events during dragAndDrop commands (default=10)\n   */\n  return this.mouseSpeed\n}\n\nSelenium.prototype.doDragAndDrop = function(locator, movementsString) {\n  /** Drags an element a certain distance and then drops it\n   * @param locator an element locator\n   * @param movementsString offset in pixels from the current location to which the element should be moved, e.g., \"+70,-300\"\n   */\n  let element = this.browserbot.findElement(locator)\n  let clientStartXY = getClientXY(element)\n  let clientStartX = clientStartXY[0]\n  let clientStartY = clientStartXY[1]\n\n  let movements = movementsString.split(/,/)\n  let movementX = Number(movements[0])\n  let movementY = Number(movements[1])\n\n  let clientFinishX =\n    clientStartX + movementX < 0 ? 0 : clientStartX + movementX\n  let clientFinishY =\n    clientStartY + movementY < 0 ? 0 : clientStartY + movementY\n\n  let mouseSpeed = this.mouseSpeed\n  let move = function(current, dest) {\n    if (current == dest) return current\n    if (Math.abs(current - dest) < mouseSpeed) return dest\n    return current < dest ? current + mouseSpeed : current - mouseSpeed\n  }\n\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mousedown',\n    true,\n    clientStartX,\n    clientStartY\n  )\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mousemove',\n    true,\n    clientStartX,\n    clientStartY\n  )\n  let clientX = clientStartX\n  let clientY = clientStartY\n\n  while (clientX != clientFinishX || clientY != clientFinishY) {\n    clientX = move(clientX, clientFinishX)\n    clientY = move(clientY, clientFinishY)\n    this.browserbot.triggerMouseEvent(\n      element,\n      'mousemove',\n      true,\n      clientX,\n      clientY\n    )\n  }\n\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mousemove',\n    true,\n    clientFinishX,\n    clientFinishY\n  )\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mouseup',\n    true,\n    clientFinishX,\n    clientFinishY\n  )\n}\n\nSelenium.prototype.doDragAndDropToObject = function(\n  locatorOfObjectToBeDragged,\n  locatorOfDragDestinationObject\n) {\n  /** Drags an element and drops it on another element\n   *\n   * @param locatorOfObjectToBeDragged an element to be dragged\n   * @param locatorOfDragDestinationObject an element whose location (i.e., whose center-most pixel) will be the point where locatorOfObjectToBeDragged  is dropped\n   */\n  if (!this.browserbot.findElement(locatorOfObjectToBeDragged).draggable) {\n    //origin code\n    let startX = this.getElementPositionLeft(locatorOfObjectToBeDragged)\n    let startY = this.getElementPositionTop(locatorOfObjectToBeDragged)\n\n    let destinationLeftX = this.getElementPositionLeft(\n      locatorOfDragDestinationObject\n    )\n    let destinationTopY = this.getElementPositionTop(\n      locatorOfDragDestinationObject\n    )\n    let destinationWidth = this.getElementWidth(locatorOfDragDestinationObject)\n    let destinationHeight = this.getElementHeight(\n      locatorOfDragDestinationObject\n    )\n\n    let endX = Math.round(destinationLeftX + destinationWidth / 2)\n    let endY = Math.round(destinationTopY + destinationHeight / 2)\n\n    let deltaX = endX - startX\n    let deltaY = endY - startY\n\n    let movementsString = '' + deltaX + ',' + deltaY\n    this.doDragAndDrop(locatorOfObjectToBeDragged, movementsString)\n  } else {\n    //DragAndDropExt, Shuo-Heng Shih, SELAB, CSIE, NCKU, 2016/09/29\n    let element = this.browserbot.findElement(locatorOfObjectToBeDragged)\n    let target = this.browserbot.findElement(locatorOfDragDestinationObject)\n    this.browserbot.triggerDragEvent(element, target)\n  }\n}\n\nSelenium.prototype.doWindowFocus = function() {\n  /** Gives focus to the currently selected window\n   *\n   */\n  this.browserbot.getCurrentWindow().focus()\n}\n\nSelenium.prototype.doWindowMaximize = function() {\n  /** Resize currently selected window to take up the entire screen\n   *\n   */\n  let window = this.browserbot.getCurrentWindow()\n  if (window != null && window.screen) {\n    window.moveTo(0, 0)\n\n    // It appears Firefox on Mac won't move a window to (0,0).  But, you can move it to (0,1), which\n    // seems to do basically the same thing.  In my (KJM - 6/20/10) tests, anything less than (0, 22)\n    // pushed the browser to (0,0), so it seems it's improperly accounting for something in the browser chrome.\n    if (window.screenX != 0) {\n      window.moveTo(0, 1)\n    }\n\n    window.resizeTo(screen.availWidth, screen.availHeight)\n  }\n}\n\nSelenium.prototype.getHtmlSource = function() {\n  /** Returns the entire HTML source between the opening and\n   * closing \"html\" tags.\n   *\n   * @return string the entire HTML source\n   */\n  return this.browserbot.getDocument().getElementsByTagName('html')[0].innerHTML\n}\n\nSelenium.prototype.doSetCursorPosition = function(locator, position) {\n  /**\n   * Moves the text cursor to the specified position in the given input element or textarea.\n   * This method will fail if the specified element isn't an input element or textarea.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> pointing to an input element or textarea\n   * @param position the numerical position of the cursor in the field; position should be 0 to move the position to the beginning of the field.  You can also set the cursor to -1 to move it to the end of the field.\n   */\n  let element = this.browserbot.findElement(locator)\n  if (element.value == undefined) {\n    Assert.fail('Element ' + locator + ' is not an input.') // eslint-disable-line no-undef\n  }\n  if (position == -1) {\n    position = element.value.length\n  }\n\n  if (element.setSelectionRange && !browserVersion.isOpera) {\n    element.focus()\n    element.setSelectionRange(/*start*/ position, /*end*/ position)\n  } else if (element.createTextRange) {\n    bot.events.fire(element, bot.events.EventType.FOCUS)\n    let range = element.createTextRange()\n    range.collapse(true)\n    range.moveEnd('character', position)\n    range.moveStart('character', position)\n    range.select()\n  }\n}\n\nSelenium.prototype.getElementIndex = function(locator) {\n  /**\n   * Get the relative index of an element to its parent (starting from 0). The comment node and empty text node\n   * will be ignored.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> pointing to an element\n   * @return number of relative index of the element to its parent (starting from 0)\n   */\n  let element = this.browserbot.findElement(locator)\n  let previousSibling\n  let index = 0\n  while ((previousSibling = element.previousSibling) != null) {\n    if (!this._isCommentOrEmptyTextNode(previousSibling)) {\n      index++\n    }\n    element = previousSibling\n  }\n  return index\n}\n\nSelenium.prototype.isOrdered = function(locator1, locator2) {\n  /**\n   * Check if these two elements have same parent and are ordered siblings in the DOM. Two same elements will\n   * not be considered ordered.\n   *\n   * @param locator1 an <a href=\"#locators\">element locator</a> pointing to the first element\n   * @param locator2 an <a href=\"#locators\">element locator</a> pointing to the second element\n   * @return boolean true if element1 is the previous sibling of element2, false otherwise\n   */\n  let element1 = this.browserbot.findElement(locator1)\n  let element2 = this.browserbot.findElement(locator2)\n  if (element1 === element2) return false\n\n  let previousSibling\n  while ((previousSibling = element2.previousSibling) != null) {\n    if (previousSibling === element1) {\n      return true\n    }\n    element2 = previousSibling\n  }\n  return false\n}\n\nSelenium.prototype._isCommentOrEmptyTextNode = function(node) {\n  return (\n    node.nodeType == 8 || (node.nodeType == 3 && !/[^\\t\\n\\r ]/.test(node.data))\n  )\n}\n\nSelenium.prototype.getElementPositionLeft = function(locator) {\n  /**\n   * Retrieves the horizontal position of an element\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> pointing to an element OR an element itself\n   * @return number of pixels from the edge of the frame.\n   */\n  let element\n  if ('string' == typeof locator) {\n    element = this.browserbot.findElement(locator)\n  } else {\n    element = locator\n  }\n  let x = element.offsetLeft\n  let elementParent = element.offsetParent\n\n  while (elementParent != null) {\n    if (document.all) {\n      if (elementParent.tagName != 'TABLE' && elementParent.tagName != 'BODY') {\n        x += elementParent.clientLeft\n      }\n    } // Netscape/DOM\n    else {\n      if (elementParent.tagName == 'TABLE') {\n        let parentBorder = parseInt(elementParent.border)\n        if (isNaN(parentBorder)) {\n          let parentFrame = elementParent.getAttribute('frame')\n          if (parentFrame != null) {\n            x += 1\n          }\n        } else if (parentBorder > 0) {\n          x += parentBorder\n        }\n      }\n    }\n    x += elementParent.offsetLeft\n    elementParent = elementParent.offsetParent\n  }\n  return x\n}\n\nSelenium.prototype.getElementPositionTop = function(locator) {\n  /**\n   * Retrieves the vertical position of an element\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> pointing to an element OR an element itself\n   * @return number of pixels from the edge of the frame.\n   */\n  let element\n  if ('string' == typeof locator) {\n    element = this.browserbot.findElement(locator)\n  } else {\n    element = locator\n  }\n\n  let y = 0\n\n  while (element != null) {\n    if (document.all) {\n      if (element.tagName != 'TABLE' && element.tagName != 'BODY') {\n        y += element.clientTop\n      }\n    } // Netscape/DOM\n    else {\n      if (element.tagName == 'TABLE') {\n        let parentBorder = parseInt(element.border)\n        if (isNaN(parentBorder)) {\n          let parentFrame = element.getAttribute('frame')\n          if (parentFrame != null) {\n            y += 1\n          }\n        } else if (parentBorder > 0) {\n          y += parentBorder\n        }\n      }\n    }\n    y += element.offsetTop\n\n    // Netscape can get confused in some cases, such that the height of the parent is smaller\n    // than that of the element (which it shouldn't really be). If this is the case, we need to\n    // exclude this element, since it will result in too large a 'top' return value.\n    if (\n      element.offsetParent &&\n      element.offsetParent.offsetHeight &&\n      element.offsetParent.offsetHeight < element.offsetHeight\n    ) {\n      // skip the parent that's too small\n      element = element.offsetParent.offsetParent\n    } else {\n      // Next up...\n      element = element.offsetParent\n    }\n  }\n  return y\n}\n\nSelenium.prototype.getElementWidth = function(locator) {\n  /**\n   * Retrieves the width of an element\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> pointing to an element\n   * @return number width of an element in pixels\n   */\n  let element = this.browserbot.findElement(locator)\n  return element.offsetWidth\n}\n\nSelenium.prototype.getElementHeight = function(locator) {\n  /**\n   * Retrieves the height of an element\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> pointing to an element\n   * @return number height of an element in pixels\n   */\n  let element = this.browserbot.findElement(locator)\n  return element.offsetHeight\n}\n\nSelenium.prototype.getCursorPosition = function(locator) {\n  /**\n   * Retrieves the text cursor position in the given input element or textarea; beware, this may not work perfectly on all browsers.\n   *\n   * <p>Specifically, if the cursor/selection has been cleared by JavaScript, this command will tend to\n   * return the position of the last location of the cursor, even though the cursor is now gone from the page.  This is filed as <a href=\"http://jira.openqa.org/browse/SEL-243\">SEL-243</a>.</p>\n   * This method will fail if the specified element isn't an input element or textarea, or there is no cursor in the element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> pointing to an input element or textarea\n   * @return number the numerical position of the cursor in the field\n   */\n  let element = this.browserbot.findElement(locator)\n  let doc = this.browserbot.getDocument()\n  let win = this.browserbot.getCurrentWindow()\n  let elementRange\n  if (doc.selection && !browserVersion.isOpera) {\n    try {\n      let selectRange = doc.selection.createRange().duplicate()\n      elementRange = element.createTextRange()\n      selectRange.move('character', 0)\n      elementRange.move('character', 0)\n      elementRange.setEndPoint('EndToEnd', selectRange)\n    } catch (e) {\n      Assert.fail('There is no cursor on this page!') // eslint-disable-line no-undef\n    }\n    let answer = String(elementRange.text).replace(/\\r/g, '').length\n    return answer\n  } else {\n    if (typeof element.selectionStart != 'undefined') {\n      if (\n        win.getSelection &&\n        typeof win.getSelection().rangeCount != undefined &&\n        win.getSelection().rangeCount == 0\n      ) {\n        Assert.fail('There is no cursor on this page!') // eslint-disable-line no-undef\n      }\n      return element.selectionStart\n    }\n  }\n  throw new Error(\"Couldn't detect cursor position on this browser!\")\n}\n\nSelenium.prototype.getExpression = function(expression) {\n  /**\n   * Returns the specified expression.\n   *\n   * <p>This is useful because of JavaScript preprocessing.\n   * It is used to generate commands like assertExpression and waitForExpression.</p>\n   *\n   * @param expression the value to return\n   * @return string the value passed in\n   */\n  return expression\n}\n\nSelenium.prototype.getXpathCount = function(xpath) {\n  /**\n   * Returns the number of nodes that match the specified xpath, eg. \"//table\" would give\n   * the number of tables.\n   *\n   * @param xpath the xpath expression to evaluate. do NOT wrap this expression in a 'count()' function; we will do that for you.\n   * @return number the number of nodes that match the specified xpath\n   */\n  let result = this.browserbot.evaluateXPathCount(\n    xpath,\n    this.browserbot.getDocument()\n  )\n  return result\n}\n\nSelenium.prototype.getCssCount = function(css) {\n  /**\n   * Returns the number of nodes that match the specified css selector, eg. \"css=table\" would give\n   * the number of tables.\n   *\n   * @param css the css selector to evaluate. do NOT wrap this expression in a 'count()' function; we will do that for you.\n   * @return the number of nodes that match the specified selector\n   */\n  let result = this.browserbot.evaluateCssCount(\n    css,\n    this.browserbot.getDocument()\n  )\n  return result\n}\n\nSelenium.prototype.doAssignId = function(locator, identifier) {\n  /**\n   * Temporarily sets the \"id\" attribute of the specified element, so you can locate it in the future\n   * using its ID rather than a slow/complicated XPath.  This ID will disappear once the page is\n   * reloaded.\n   * @param locator an <a href=\"#locators\">element locator</a> pointing to an element\n   * @param identifier a string to be used as the ID of the specified element\n   */\n  let element = this.browserbot.findElement(locator)\n  element.id = identifier\n}\n\nSelenium.prototype.doAllowNativeXpath = function(allow) {\n  /**\n   * Specifies whether Selenium should use the native in-browser implementation\n   * of XPath (if any native version is available); if you pass \"false\" to\n   * this function, we will always use our pure-JavaScript xpath library.\n   * Using the pure-JS xpath library can improve the consistency of xpath\n   * element locators between different browser vendors, but the pure-JS\n   * version is much slower than the native implementations.\n   * @param allow boolean, true means we'll prefer to use native XPath; false means we'll only use JS XPath\n   */\n  if ('false' == allow || '0' == allow) {\n    // The strings \"false\" and \"0\" are true values in JS\n    allow = false\n  }\n  this.browserbot.setAllowNativeXPath(allow)\n}\n\nSelenium.prototype.doIgnoreAttributesWithoutValue = function(ignore) {\n  /**\n   * Specifies whether Selenium will ignore xpath attributes that have no\n   * value, i.e. are the empty string, when using the non-native xpath\n   * evaluation engine. You'd want to do this for performance reasons in IE.\n   * However, this could break certain xpaths, for example an xpath that looks\n   * for an attribute whose value is NOT the empty string.\n   *\n   * The hope is that such xpaths are relatively rare, but the user should\n   * have the option of using them. Note that this only influences xpath\n   * evaluation when using the ajaxslt engine (i.e. not \"javascript-xpath\").\n   *\n   * @param ignore boolean, true means we'll ignore attributes without value\n   *                        at the expense of xpath \"correctness\"; false means\n   *                        we'll sacrifice speed for correctness.\n   */\n  if ('false' == ignore || '0' == ignore) {\n    ignore = false\n  }\n  this.browserbot.setIgnoreAttributesWithoutValue(ignore)\n}\n\nSelenium.prototype.doWaitForCondition = function(script, timeout) {\n  /**\n   * Runs the specified JavaScript snippet repeatedly until it evaluates to \"true\".\n   * The snippet may have multiple lines, but only the result of the last line\n   * will be considered.\n   *\n   * <p>Note that, by default, the snippet will be run in the runner's test window, not in the window\n   * of your application.  To get the window of your application, you can use\n   * the JavaScript snippet <code>selenium.browserbot.getCurrentWindow()</code>, and then\n   * run your JavaScript in there</p>\n   * @param script the JavaScript snippet to run\n   * @param timeout a timeout in milliseconds, after which this command will return with an error\n   */\n\n  return Selenium.decorateFunctionWithTimeout(function() {\n    return this.eval(script)\n  }, timeout)\n}\n\nSelenium.prototype.doWaitForCondition.dontCheckAlertsAndConfirms = true\n\nSelenium.prototype.doSetTimeout = function(timeout) {\n  /**\n   * Specifies the amount of time that Selenium will wait for actions to complete.\n   *\n   * <p>Actions that require waiting include \"open\" and the \"waitFor*\" actions.</p>\n   * The default timeout is 30 seconds.\n   * @param timeout a timeout in milliseconds, after which the action will return with an error\n   */\n  if (!timeout) {\n    timeout = Selenium.DEFAULT_TIMEOUT\n  }\n  this.defaultTimeout = timeout\n}\n\nSelenium.prototype.doWaitForPageToLoad = function(timeout) {\n  /**\n   * Waits for a new page to load.\n   *\n   * <p>You can use this command instead of the \"AndWait\" suffixes, \"clickAndWait\", \"selectAndWait\", \"typeAndWait\" etc.\n   * (which are only available in the JS API).</p>\n   *\n   * <p>Selenium constantly keeps track of new pages loading, and sets a \"newPageLoaded\"\n   * flag when it first notices a page load.  Running any other Selenium command after\n   * turns the flag to false.  Hence, if you want to wait for a page to load, you must\n   * wait immediately after a Selenium command that caused a page-load.</p>\n   * @param timeout a timeout in milliseconds, after which this command will return with an error\n   */\n  // in pi-mode, the test and the harness share the window; thus if we are executing this code, then we have loaded\n  if (window['proxyInjectionMode'] == null || !window['proxyInjectionMode']) {\n    return this.makePageLoadCondition(timeout)\n  }\n}\n\nSelenium.prototype.doWaitForFrameToLoad = function(_frameAddress, timeout) {\n  /**\n   * Waits for a new frame to load.\n   *\n   * <p>Selenium constantly keeps track of new pages and frames loading,\n   * and sets a \"newPageLoaded\" flag when it first notices a page load.</p>\n   *\n   * See waitForPageToLoad for more information.\n   *\n   * @param frameAddress FrameAddress from the server side\n   * @param timeout a timeout in milliseconds, after which this command will return with an error\n   */\n  // in pi-mode, the test and the harness share the window; thus if we are executing this code, then we have loaded\n  if (window['proxyInjectionMode'] == null || !window['proxyInjectionMode']) {\n    return this.makePageLoadCondition(timeout)\n  }\n}\n\nSelenium.prototype._isNewPageLoaded = function() {\n  return this.browserbot.isNewPageLoaded()\n}\n\nSelenium.prototype._abortXhrRequest = function() {\n  return this.browserbot.abortXhrRequest()\n}\n\nSelenium.prototype.doWaitForPageToLoad.dontCheckAlertsAndConfirms = true\n\n/**\n * Evaluate a parameter, performing JavaScript evaluation and variable substitution.\n * If the string matches the pattern \"javascript{ ... }\", evaluate the string between the braces.\n */\nSelenium.prototype.preprocessParameter = function(value) {\n  if (!value.script) {\n    // only for non-scripts\n    let match = value.match(/^javascript\\{((.|\\r?\\n)+)\\}$/)\n    if (match && match[1]) {\n      browser.runtime.sendMessage({\n        log: {\n          type: 'warn',\n          message:\n            'parameter preprocessing using javascript{} tag is deprecated, please use execute script',\n        },\n      })\n      let result = this.eval(match[1])\n      return result == null ? null : result.toString()\n    }\n  }\n  return value\n}\n\nSelenium.prototype.replaceKeys = function(str) {\n  let keys = []\n  let match = str.match(/\\$\\{\\w+\\}/g)\n  if (!match) {\n    keys.push(str)\n  } else {\n    let i = 0\n    while (i < str.length) {\n      let currentKey = match.shift(),\n        currentKeyIndex = str.indexOf(currentKey, i)\n      if (currentKeyIndex > i) {\n        // push the string before the current key\n        keys.push(str.substr(i, currentKeyIndex - i))\n        i = currentKeyIndex\n      }\n      if (currentKey) {\n        if (/^\\$\\{KEY_\\w+\\}/.test(currentKey)) {\n          // is a key\n          let keyName = currentKey.match(/\\$\\{KEY_(\\w+)\\}/)[1]\n          let key = bot.Keyboard.Keys[keyName]\n          if (key) {\n            keys.push(key)\n          } else {\n            throw new Error(`Unrecognised key ${keyName}`)\n          }\n        } else {\n          // not a key, and not a stored variable, push it as-is\n          keys.push(currentKey)\n        }\n        i += currentKey.length\n      } else if (i < str.length) {\n        // push the rest of the string\n        keys.push(str.substr(i, str.length))\n        i = str.length\n      }\n    }\n  }\n  return keys\n}\n\nSelenium.prototype.getCookie = function() {\n  /**\n   * Return all cookies of the current page under test.\n   *\n   * @return string all cookies of the current page under test\n   */\n  let doc = this.browserbot.getDocument()\n  return doc.cookie\n}\n\nSelenium.prototype.getCookieByName = function(name) {\n  /**\n   * Returns the value of the cookie with the specified name, or throws an error if the cookie is not present.\n   * @param name the name of the cookie\n   * @return string the value of the cookie\n   */\n  let v = this.browserbot.getCookieByName(name)\n  if (v === null) {\n    throw new SeleniumError(\"Cookie '\" + name + \"' was not found\")\n  }\n  return v\n}\n\nSelenium.prototype.isCookiePresent = function(name) {\n  /**\n   * Returns true if a cookie with the specified name is present, or false otherwise.\n   * @param name the name of the cookie\n   * @return boolean true if a cookie with the specified name is present, or false otherwise.\n   */\n  let v = this.browserbot.getCookieByName(name)\n  let absent = v === null\n  return !absent\n}\n\nSelenium.prototype.doCreateCookie = function(nameValuePair, optionsString) {\n  /**\n   * Create a new cookie whose path and domain are same with those of current page\n   * under test, unless you specified a path for this cookie explicitly.\n   *\n   * @param nameValuePair name and value of the cookie in a format \"name=value\"\n   * @param optionsString options for the cookie. Currently supported options include 'path', 'max_age' and 'domain'.\n   *      the optionsString's format is \"path=/path/, max_age=60, domain=.foo.com\". The order of options are irrelevant, the unit\n   *      of the value of 'max_age' is second.  Note that specifying a domain that isn't a subset of the current domain will\n   *      usually fail.\n   */\n  // eslint-disable-next-line no-useless-escape\n  let results = /[^\\s=\\[\\]\\(\\),\"\\/\\?@:;]+=[^\\s=\\[\\]\\(\\),\"\\/\\?@:;]*/.test(\n    nameValuePair\n  )\n  if (!results) {\n    throw new SeleniumError('Invalid parameter.')\n  }\n  let cookie = nameValuePair.trim()\n  results = /max_age=(\\d+)/.exec(optionsString)\n  if (results) {\n    let expireDateInMilliseconds = new Date().getTime() + results[1] * 1000\n    cookie += '; expires=' + new Date(expireDateInMilliseconds).toGMTString()\n  }\n  results = /path=([^\\s,]+)[,]?/.exec(optionsString)\n  if (results) {\n    let path = results[1]\n    if (browserVersion.khtml) {\n      // Safari and conquerer don't like paths with / at the end\n      if ('/' != path) {\n        path = path.replace(/\\/$/, '')\n      }\n    }\n    cookie += '; path=' + path\n  }\n  results = /domain=([^\\s,]+)[,]?/.exec(optionsString)\n  if (results) {\n    let domain = results[1]\n    cookie += '; domain=' + domain\n  }\n  //LOG.debug(\"Setting cookie to: \" + cookie);\n  this.browserbot.getDocument().cookie = cookie\n}\n\nSelenium.prototype.doDeleteCookie = function(name, optionsString) {\n  /**\n   * Delete a named cookie with specified path and domain.  Be careful; to delete a cookie, you\n   * need to delete it using the exact same path and domain that were used to create the cookie.\n   * If the path is wrong, or the domain is wrong, the cookie simply won't be deleted.  Also\n   * note that specifying a domain that isn't a subset of the current domain will usually fail.\n   *\n   * Since there's no way to discover at runtime the original path and domain of a given cookie,\n   * we've added an option called 'recurse' to try all sub-domains of the current domain with\n   * all paths that are a subset of the current path.  Beware; this option can be slow.  In\n   * big-O notation, it operates in O(n*m) time, where n is the number of dots in the domain\n   * name and m is the number of slashes in the path.\n   *\n   * @param name the name of the cookie to be deleted\n   * @param optionsString options for the cookie. Currently supported options include 'path', 'domain'\n   *      and 'recurse.' The optionsString's format is \"path=/path/, domain=.foo.com, recurse=true\".\n   *      The order of options are irrelevant. Note that specifying a domain that isn't a subset of\n   *      the current domain will usually fail.\n   */\n  // set the expire time of the cookie to be deleted to one minute before now.\n  let path = ''\n  let domain = ''\n  let recurse = false\n  let matched = false\n  let results = /path=([^\\s,]+)[,]?/.exec(optionsString)\n  if (results) {\n    matched = true\n    path = results[1]\n  }\n  results = /domain=([^\\s,]+)[,]?/.exec(optionsString)\n  if (results) {\n    matched = true\n    domain = results[1]\n  }\n  results = /recurse=([^\\s,]+)[,]?/.exec(optionsString)\n  if (results) {\n    matched = true\n    recurse = results[1]\n    if ('false' == recurse) {\n      recurse = false\n    }\n  }\n  // Treat the entire optionsString as a path (for backwards compatibility)\n  if (optionsString && !matched) {\n    //LOG.warn(\"Using entire optionsString as a path; please change the argument to deleteCookie to use path=\" + optionsString);\n    path = optionsString\n  }\n  if (browserVersion.khtml) {\n    // Safari and conquerer don't like paths with / at the end\n    if ('/' != path) {\n      path = path.replace(/\\/$/, '')\n    }\n  }\n  path = path.trim()\n  domain = domain.trim()\n  let cookieName = name.trim()\n  if (recurse) {\n    this.browserbot.recursivelyDeleteCookie(cookieName, domain, path)\n  } else {\n    this.browserbot.deleteCookie(cookieName, domain, path)\n  }\n}\n\nSelenium.prototype.doDeleteAllVisibleCookies = function() {\n  /** Calls deleteCookie with recurse=true on all cookies visible to the current page.\n   * As noted on the documentation for deleteCookie, recurse=true can be much slower\n   * than simply deleting the cookies using a known domain/path.\n   */\n  let win = this.browserbot.getCurrentWindow()\n  let doc = win.document\n  let cookieNames = this.browserbot.getAllCookieNames(doc)\n  let domain = doc.domain\n  let path = win.location.pathname\n  for (let i = 0; i < cookieNames.length; i++) {\n    this.browserbot.recursivelyDeleteCookie(cookieNames[i], domain, path, win)\n  }\n}\n\n//Selenium.prototype.doSetBrowserLogLevel = function(logLevel) {\n/**\n * Sets the threshold for browser-side logging messages; log messages beneath this threshold will be discarded.\n * Valid logLevel strings are: \"debug\", \"info\", \"warn\", \"error\" or \"off\".\n * To see the browser logs, you need to\n * either show the log window in GUI mode, or enable browser-side logging in Selenium RC.\n *\n * @param logLevel one of the following: \"debug\", \"info\", \"warn\", \"error\" or \"off\"\n */\n/*    if (logLevel == null || logLevel == \"\") {\n        throw new SeleniumError(\"You must specify a log level\");\n    }\n    logLevel = logLevel.toLowerCase();\n    if (//LOG.logLevels[logLevel] == null) {\n        throw new SeleniumError(\"Invalid log level: \" + logLevel);\n    }\n    //LOG.setLogLevelThreshold(logLevel);\n}*/\n\nSelenium.prototype.doScroll = function(target, value) {\n  this.browserbot.scroll(target, value)\n}\n\nSelenium.prototype.doExecuteScript = function(script, varName) {\n  const value = this.eval(script.script, script.argv)\n  if (value && value.constructor.name === 'Promise') {\n    throw new Error('Expected sync operation, instead received Promise')\n  }\n  if (varName) {\n    return browser.runtime.sendMessage({ storeStr: value, storeVar: varName })\n  }\n}\n\nSelenium.prototype.doExecuteAsyncScript = function(script, varName) {\n  const value = this.eval(script.script, script.argv)\n  if (value && value.constructor.name !== 'Promise') {\n    throw new Error(\n      `Expected async operation, instead received ${\n        value ? value.constructor.name : value\n      }`\n    )\n  }\n  return Promise.resolve(value).then(v => {\n    if (varName) {\n      return browser.runtime.sendMessage({ storeStr: v, storeVar: varName })\n    }\n  })\n}\n\nSelenium.prototype.doRunScript = function(script) {\n  /**\n   * Creates a new \"script\" tag in the body of the current test window, and\n   * adds the specified text into the body of the command.  Scripts run in\n   * this way can often be debugged more easily than scripts executed using\n   * Selenium's \"getEval\" command.  Beware that JS exceptions thrown in these script\n   * tags aren't managed by Selenium, so you should probably wrap your script\n   * in try/catch blocks if there is any chance that the script will throw\n   * an exception.\n   * @param script the JavaScript snippet to run\n   */\n  this.eval(script.script, script.argv)\n}\n\nSelenium.prototype.doRollup = function(rollupName, kwargs) {\n  /**\n   * Executes a command rollup, which is a series of commands with a unique\n   * name, and optionally arguments that control the generation of the set of\n   * commands. If any one of the rolled-up commands fails, the rollup is\n   * considered to have failed. Rollups may also contain nested rollups.\n   *\n   * @param rollupName  the name of the rollup command\n   * @param kwargs      keyword arguments string that influences how the\n   *                    rollup expands into commands\n   */\n  // we have to temporarily hijack the commandStarted, nextCommand(),\n  // commandComplete(), and commandError() methods of the TestLoop object.\n  // When the expanded rollup commands are done executing (or an error has\n  // occurred), we'll restore them to their original values.\n  let loop = currentTest || htmlTestRunner.currentTest // eslint-disable-line no-undef\n  let backupManager = {\n    backup: function() {\n      for (let item in this.data) {\n        this.data[item] = loop[item]\n      }\n    },\n    restore: function() {\n      for (let item in this.data) {\n        loop[item] = this.data[item]\n      }\n    },\n    data: {\n      requiresCallBack: null,\n      commandStarted: null,\n      nextCommand: null,\n      commandComplete: null,\n      commandError: null,\n      pendingRollupCommands: null,\n      rollupFailed: null,\n      rollupFailedMessage: null,\n    },\n  }\n\n  // eslint-disable-next-line no-undef\n  let rule = RollupManager.getInstance().getRollupRule(rollupName)\n  let expandedCommands = rule.getExpandedCommands(kwargs)\n\n  // hold your breath ...\n  try {\n    backupManager.backup()\n    loop.requiresCallBack = false\n    loop.commandStarted = function() {}\n    loop.nextCommand = function() {\n      if (this.pendingRollupCommands.length == 0) {\n        return null\n      }\n      let command = this.pendingRollupCommands.shift()\n      return command\n    }\n    loop.commandComplete = function(result) {\n      if (result.failed) {\n        this.rollupFailed = true\n        this.rollupFailureMessages.push(result.failureMessage)\n      }\n\n      if (this.pendingRollupCommands.length == 0) {\n        result = {\n          failed: this.rollupFailed,\n          failureMessage: this.rollupFailureMessages.join('; '),\n        }\n        //LOG.info('Rollup execution complete: ' + (result.failed ? 'failed! (see error messages below)' : 'ok'));\n        backupManager.restore()\n        this.commandComplete(result)\n      }\n    }\n    loop.commandError = function(errorMessage) {\n      //LOG.info('Rollup execution complete: bombed!');\n      backupManager.restore()\n      this.commandError(errorMessage)\n    }\n\n    loop.pendingRollupCommands = expandedCommands\n    loop.rollupFailed = false\n    loop.rollupFailureMessages = []\n  } catch (e) {\n    //LOG.error('Rollup error: ' + e);\n    backupManager.restore()\n  }\n}\n\nSelenium.prototype.doAddScript = function(scriptContent, scriptTagId) {\n  /**\n   * Loads script content into a new script tag in the Selenium document. This\n   * differs from the runScript command in that runScript adds the script tag\n   * to the document of the AUT, not the Selenium document. The following\n   * entities in the script content are replaced by the characters they\n   * represent:\n   *\n   *     &lt;\n   *     &gt;\n   *     &amp;\n   *\n   * The corresponding remove command is removeScript.\n   *\n   * @param scriptContent  the Javascript content of the script to add\n   * @param scriptTagId    (optional) the id of the new script tag. If\n   *                       specified, and an element with this id already\n   *                       exists, this operation will fail.\n   */\n  if (scriptTagId && document.getElementById(scriptTagId)) {\n    let msg = \"Element with id '\" + scriptTagId + \"' already exists!\"\n    throw new SeleniumError(msg)\n  }\n\n  let head = document.getElementsByTagName('head')[0]\n  let script = document.createElement('script')\n\n  script.type = 'text/javascript'\n\n  if (scriptTagId) {\n    script.id = scriptTagId\n  }\n\n  // replace some entities\n  scriptContent = scriptContent\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&amp;/g, '&')\n\n  script.text = scriptContent\n  head.appendChild(script)\n}\n\nSelenium.prototype.doRemoveScript = function(scriptTagId) {\n  /**\n   * Removes a script tag from the Selenium document identified by the given\n   * id. Does nothing if the referenced tag doesn't exist.\n   *\n   * @param scriptTagId  the id of the script element to remove.\n   */\n  let script = document.getElementById(scriptTagId)\n\n  if (script && getTagName(script) == 'script') {\n    script.parentNode.removeChild(script)\n  }\n}\n\nSelenium.prototype.doUseXpathLibrary = function(libraryName) {\n  /**\n   * Allows choice of one of the available libraries.\n   * @param libraryName name of the desired library\n   * Only the following can be chosen:\n   * <ul>\n   *   <li>\"ajaxslt\" - Google's library</li>\n   *   <li>\"javascript-xpath\" - Cybozu Labs' faster library</li>\n   *   <li>\"rpc-optimizing-ajaxslt\" - the RPC optimizing strategy, delegating to ajaxslt</li>\n   *   <li>\"rpc-optimizing-jsxpath\" - the RPC optimizing strategy, delegating to javascript-xpath</li>\n   *   <li>\"default\" - The default library.  Currently the default library is \"ajaxslt\" .</li>\n   * </ul>\n   * If libraryName isn't one of these, it may be the name of another engine\n   * registered to the browserbot's XPathEvaluator, for example by overriding\n   * XPathEvaluator.prototype.init() . If it is not a registered engine\n   * either, then no change will be made.\n   */\n\n  if (!this.browserbot.getXPathEngine(libraryName)) {\n    return\n  }\n\n  this.browserbot.setXPathEngine(libraryName)\n}\n\n/**\n *  Factory for creating \"Option Locators\".\n *  An OptionLocator is an object for dealing with Select options (e.g. for\n *  finding a specified option, or asserting that the selected option of\n *  Select element matches some condition.\n *  The type of locator returned by the factory depends on the locator string:\n *     label=<exp>  (OptionLocatorByLabel)\n *     value=<exp>  (OptionLocatorByValue)\n *     index=<exp>  (OptionLocatorByIndex)\n *     id=<exp>     (OptionLocatorById)\n *     <exp> (default is OptionLocatorByLabel).\n */\nfunction OptionLocatorFactory() {}\n\nOptionLocatorFactory.prototype.fromLocatorString = function(locatorString) {\n  let locatorType = 'label'\n  let locatorValue = locatorString\n  // If there is a locator prefix, use the specified strategy\n  let result = locatorString.match(/^([a-zA-Z]+)=(.*)/)\n  if (result) {\n    locatorType = result[1]\n    locatorValue = result[2]\n  }\n  if (this.optionLocators == undefined) {\n    this.registerOptionLocators()\n  }\n  if (this.optionLocators[locatorType]) {\n    return new this.optionLocators[locatorType](locatorValue)\n  }\n  throw new SeleniumError('Unknown option locator type: ' + locatorType)\n}\n\n/**\n * To allow for easy extension, all of the option locators are found by\n * searching for all methods of OptionLocatorFactory.prototype that start\n * with \"OptionLocatorBy\".\n * TODO: Consider using the term \"Option Specifier\" instead of \"Option Locator\".\n */\nOptionLocatorFactory.prototype.registerOptionLocators = function() {\n  this.optionLocators = {}\n  for (let functionName in this) {\n    let result = /OptionLocatorBy([A-Z].+)$/.exec(functionName)\n    if (result != null) {\n      let locatorName = lowerFirstChar(result[1])\n      this.optionLocators[locatorName] = this[functionName]\n    }\n  }\n}\n\n/**\n *  OptionLocator for options identified by their labels.\n */\nOptionLocatorFactory.prototype.OptionLocatorByLabel = function(label) {\n  this.label = label\n  this.labelMatcher = new PatternMatcher(this.label)\n  this.findOption = function(element) {\n    for (let i = 0; i < element.options.length; i++) {\n      if (this.labelMatcher.matches(element.options[i].text)) {\n        return element.options[i]\n      }\n    }\n    throw new SeleniumError(\"Option with label '\" + this.label + \"' not found\")\n  }\n\n  this.assertSelected = function(element) {\n    let selectedLabel = element.options[element.selectedIndex].text\n    Assert.matches(this.label, selectedLabel) // eslint-disable-line no-undef\n  }\n}\n\n/**\n *  OptionLocator for options identified by their values.\n */\nOptionLocatorFactory.prototype.OptionLocatorByValue = function(value) {\n  this.value = value\n  this.valueMatcher = new PatternMatcher(this.value)\n  this.findOption = function(element) {\n    for (let i = 0; i < element.options.length; i++) {\n      if (this.valueMatcher.matches(element.options[i].value)) {\n        return element.options[i]\n      }\n    }\n    throw new SeleniumError(\"Option with value '\" + this.value + \"' not found\")\n  }\n\n  this.assertSelected = function(element) {\n    let selectedValue = element.options[element.selectedIndex].value\n    Assert.matches(this.value, selectedValue) // eslint-disable-line no-undef\n  }\n}\n\n/**\n *  OptionLocator for options identified by their index.\n */\nOptionLocatorFactory.prototype.OptionLocatorByIndex = function(index) {\n  this.index = Number(index)\n  if (isNaN(this.index) || this.index < 0) {\n    throw new SeleniumError('Illegal Index: ' + index)\n  }\n\n  this.findOption = function(element) {\n    if (element.options.length <= this.index) {\n      throw new SeleniumError(\n        'Index out of range.  Only ' +\n          element.options.length +\n          ' options available'\n      )\n    }\n    return element.options[this.index]\n  }\n\n  this.assertSelected = function(element) {\n    Assert.equals(this.index, element.selectedIndex) // eslint-disable-line no-undef\n  }\n}\n\n/**\n *  OptionLocator for options identified by their id.\n */\nOptionLocatorFactory.prototype.OptionLocatorById = function(id) {\n  this.id = id\n  this.idMatcher = new PatternMatcher(this.id)\n  this.findOption = function(element) {\n    for (let i = 0; i < element.options.length; i++) {\n      if (this.idMatcher.matches(element.options[i].id)) {\n        return element.options[i]\n      }\n    }\n    throw new SeleniumError(\"Option with id '\" + this.id + \"' not found\")\n  }\n\n  this.assertSelected = function(element) {\n    let selectedId = element.options[element.selectedIndex].id\n    Assert.matches(this.id, selectedId) // eslint-disable-line no-undef\n  }\n}\n\n//EditContentExt, Lin Yun Wen, SELAB, CSIE, NCKU, 2016/11/17\nSelenium.prototype.doEditContent = function(locator, value) {\n  /**\n   *to set text in the element which's conentEditable attribute is true\n   *@param locator an element locator\n   *@param value the context of the element in html\n   */\n  let element = this.browserbot.findElement(locator)\n  let editable = element.contentEditable\n\n  if (editable == 'true') {\n    element.innerHTML = escapeHTML(value)\n  } else {\n    throw new SeleniumError(\n      'The value of contentEditable attribute of this element is not true.'\n    )\n  }\n}\n\n// Modified prompt by SideeX comitters (Copyright 2017)\nSelenium.prototype.doChooseCancelOnNextPrompt = function() {\n  return this.browserbot.cancelNextPrompt()\n}\n\nSelenium.prototype.doAnswerOnNextPrompt = function(answer) {\n  return this.browserbot.setNextPromptResult(answer)\n}\n\nSelenium.prototype.doAssertPrompt = function(message) {\n  return this.browserbot.getPromptMessage().then(function(actualMessage) {\n    if (message != actualMessage)\n      return Promise.reject(\"Prompt message doesn't match actual message\")\n    else return Promise.resolve(true)\n  })\n}\n\n// Modified alert by SideeX comitters (Copyright 2017)\nSelenium.prototype.doAssertAlert = function(message) {\n  return this.browserbot.getAlertMessage().then(function(actualMessage) {\n    if (message != actualMessage)\n      return Promise.reject(\"Alert message doesn't match actual message\")\n    else return Promise.resolve(true)\n  })\n}\n\n// Modified confirm by SideeX comitters (Copyright 2017)\nSelenium.prototype.doChooseCancelOnNextConfirmation = function() {\n  return this.browserbot.setNextConfirmationResult(false)\n}\n\nSelenium.prototype.doChooseOkOnNextConfirmation = function() {\n  return this.browserbot.setNextConfirmationResult(true)\n}\n\nSelenium.prototype.doAssertConfirmation = function(value) {\n  return this.browserbot.getConfirmationMessage().then(function(actualMessage) {\n    if (value != actualMessage)\n      return Promise.reject(\"Confirmation message doesn't match actual message\")\n    else return Promise.resolve(true)\n  })\n}\n\nSelenium.prototype.doShowElement = function(locator) {\n  const elementForInjectingStyle = document.createElement('link')\n  elementForInjectingStyle.rel = 'stylesheet'\n  elementForInjectingStyle.href = browser.runtime.getURL(\n    '/assets/highlight.css'\n  )\n  ;(document.head || document.documentElement).appendChild(\n    elementForInjectingStyle\n  )\n  const highlightElement = document.createElement('div')\n  highlightElement.id = 'selenium-highlight'\n  document.body.appendChild(highlightElement)\n  if (locator.x) {\n    highlightElement.style.left = parseInt(locator.x) + 'px'\n    highlightElement.style.top = parseInt(locator.y) + 'px'\n    highlightElement.style.width = parseInt(locator.width) + 'px'\n    highlightElement.style.height = parseInt(locator.height) + 'px'\n  } else {\n    const bodyRects = document.documentElement.getBoundingClientRect()\n    const element = this.browserbot.findElement(locator)\n    const elementRects = element.getBoundingClientRect()\n    highlightElement.style.left =\n      parseInt(elementRects.left - bodyRects.left) + 'px'\n    highlightElement.style.top =\n      parseInt(elementRects.top - bodyRects.top) + 'px'\n    highlightElement.style.width = parseInt(elementRects.width) + 'px'\n    highlightElement.style.height = parseInt(elementRects.height) + 'px'\n  }\n  highlightElement.style.position = 'absolute'\n  highlightElement.style.zIndex = '100'\n  highlightElement.style.display = 'block'\n  highlightElement.style.pointerEvents = 'none'\n  scrollIntoViewIfNeeded(highlightElement, { centerIfNeeded: true })\n  highlightElement.className = 'active-selenium-highlight'\n  setTimeout(() => {\n    document.body.removeChild(highlightElement)\n    elementForInjectingStyle.parentNode.removeChild(elementForInjectingStyle)\n  }, 500)\n  return 'element found'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content/selenium-api.js","/*\n * Copyright 2011 Software Freedom Conservancy\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\n\n/*\n * This script provides the Javascript API to drive the test application contained within\n * a Browser Window.\n * TODO:\n *    Add support for more events (keyboard and mouse)\n *    Allow to switch \"user-entry\" mode from mouse-based to keyboard-based, firing different\n *          events in different modes.\n */\n\nimport _Selenium from './selenium-api'\nimport SeleniumError from './SeleniumError'\nimport { selenium } from './commands-api'\nimport goog, { bot, core } from './closure-polyfill'\nimport { getTagName, parse_locator } from './utils'\nimport PatternMatcher from './PatternMatcher'\n\nexport const browserVersion = new window.global.BrowserVersion()\nwindow.global.browserVersion = browserVersion\n\n// The window to which the commands will be sent.  For example, to click on a\n// popup window, first select that window, and then do a normal click command.\nexport default class BrowserBot {\n  constructor(topLevelApplicationWindow) {\n    this.topWindow = topLevelApplicationWindow\n    this.topFrame = this.topWindow\n    this.baseUrl = window.location.href\n    bot.setWindow(window)\n\n    //UnnamedWinIFrameExt, Jie-Lin You, SELAB, CSIE, NCKU, 2016/05/26\n    this.count = 1\n\n    // the buttonWindow is the Selenium window\n    // it contains the Run/Pause buttons... this should *not* be the AUT window\n    this.buttonWindow = window\n    this.currentWindow = this.topWindow\n    this.currentWindowName = null\n    this.allowNativeXpath = true\n    this.xpathEvaluator = new XPathEvaluator('ajaxslt') // change to \"javascript-xpath\" for the newer, faster engine\n\n    // We need to know this in advance, in case the frame closes unexpectedly\n    this.isSubFrameSelected = false\n\n    this.altKeyDown = false\n    this.controlKeyDown = false\n    this.shiftKeyDown = false\n    this.metaKeyDown = false\n\n    this.modalDialogTest = null\n    this.recordedAlerts = new Array()\n    this.recordedConfirmations = new Array()\n    this.recordedPrompts = new Array()\n    this.openedWindows = {}\n    //UnnamedWinIFrameExt, Jie-Lin You, SELAB, CSIE, NCKU, 2016/05/26\n    this.openedWindows['win_ser_local'] = this.topWindow\n\n    this.nextConfirmResult = true\n    this.nextPromptResult = ''\n    this.newPageLoaded = false\n    this.pageLoadError = null\n\n    this.ignoreResponseCode = false\n    this.xhr = null\n    this.abortXhr = false\n    this.isXhrSent = false\n    this.isXhrDone = false\n    this.xhrOpenLocation = null\n    this.xhrResponseCode = null\n    this.xhrStatusText = null\n\n    this.shouldHighlightLocatedElement = false\n\n    this.uniqueId = 'seleniumMarker' + new Date().getTime()\n    this.pollingForLoad = new Object()\n    this.permDeniedCount = new Object()\n    this.windowPollers = new Array()\n    // DGF for backwards compatibility\n    this.browserbot = this\n\n    let self = this\n\n    Object.assign(this, PageBot.prototype)\n    this._registerAllLocatorFunctions()\n\n    this.recordPageLoad = function() {\n      self.newPageLoaded = true\n    }\n\n    this.isNewPageLoaded = function() {\n      let e\n\n      if (this.pageLoadError) {\n        e = this.pageLoadError\n        this.pageLoadError = null\n        throw e\n      }\n\n      if (self.ignoreResponseCode) {\n        return self.newPageLoaded\n      } else {\n        if (self.isXhrSent && self.isXhrDone) {\n          if (\n            !(\n              (self.xhrResponseCode >= 200 && self.xhrResponseCode <= 399) ||\n              self.xhrResponseCode == 0\n            )\n          ) {\n            // TODO: for IE status like: 12002, 12007, ... provide corresponding statusText messages also.\n            e =\n              'XHR ERROR: URL = ' +\n              self.xhrOpenLocation +\n              ' Response_Code = ' +\n              self.xhrResponseCode +\n              ' Error_Message = ' +\n              self.xhrStatusText\n            self.abortXhr = false\n            self.isXhrSent = false\n            self.isXhrDone = false\n            self.xhrResponseCode = null\n            self.xhrStatusText = null\n            throw new SeleniumError(e)\n          }\n        }\n        return (\n          self.newPageLoaded &&\n          (self.isXhrSent ? self.abortXhr || self.isXhrDone : true)\n        )\n      }\n    }\n\n    this.setAllowNativeXPath = function(allow) {\n      this.xpathEvaluator.setAllowNativeXPath(allow)\n    }\n\n    this.setIgnoreAttributesWithoutValue = function(ignore) {\n      this.xpathEvaluator.setIgnoreAttributesWithoutValue(ignore)\n    }\n\n    this.setXPathEngine = function(engineName) {\n      this.xpathEvaluator.setCurrentEngine(engineName)\n    }\n\n    this.getXPathEngine = function() {\n      return this.xpathEvaluator.getCurrentEngine()\n    }\n  }\n}\n\n// DGF PageBot exists for backwards compatibility with old user-extensions\nconst PageBot = function() {}\n\nBrowserBot.createForWindow = function(window, proxyInjectionMode) {\n  let browserbot\n  if (browserVersion.isIE) {\n    browserbot = new IEBrowserBot(window)\n  } else if (browserVersion.isKonqueror) {\n    browserbot = new KonquerorBrowserBot(window)\n  } else if (browserVersion.isOpera) {\n    browserbot = new OperaBrowserBot(window)\n  } else if (browserVersion.isSafari) {\n    browserbot = new SafariBrowserBot(window)\n  } else {\n    // Use mozilla by default\n    browserbot = new MozillaBrowserBot(window)\n  }\n  // getCurrentWindow has the side effect of modifying it to handle page loads etc\n  browserbot.proxyInjectionMode = proxyInjectionMode\n  browserbot.getCurrentWindow() // for modifyWindow side effect.  This is not a transparent style\n  return browserbot\n}\n\n// todo: rename?  This doesn't actually \"do\" anything.\nBrowserBot.prototype.doModalDialogTest = function(test) {\n  this.modalDialogTest = test\n}\n\nBrowserBot.prototype.cancelNextConfirmation = function(result) {\n  this.nextConfirmResult = result\n}\n\n//BrowserBot.prototype.setNextPromptResult = function(result) {\n//this.nextResult = result;\n//};\n\nBrowserBot.prototype.hasAlerts = function() {\n  return this.recordedAlerts.length > 0\n}\n\nBrowserBot.prototype.relayBotToRC = function(s) {\n  // DGF need to do this funny trick to see if we're in PI mode, because\n  // \"this\" might be the window, rather than the browserbot (e.g. during window.alert)\n  let piMode = this.proxyInjectionMode\n  if (!piMode) {\n    if (typeof selenium != 'undefined') {\n      piMode = selenium.browserbot && selenium.browserbot.proxyInjectionMode\n    }\n  }\n  if (piMode) {\n    this.relayToRC('selenium.' + s)\n  }\n}\n\nBrowserBot.prototype.relayToRC = function() {\n  return null\n}\n\nBrowserBot.prototype.resetPopups = function() {\n  this.recordedAlerts = []\n  this.recordedConfirmations = []\n  this.recordedPrompts = []\n}\n\nBrowserBot.prototype.getNextAlert = function() {\n  let t = this.recordedAlerts.shift()\n  if (t) {\n    t = t.replace(/\\n/g, ' ') // because Selenese loses \\n's when retrieving text from HTML table\n  }\n  this.relayBotToRC('browserbot.recordedAlerts')\n  return t\n}\n\nBrowserBot.prototype.hasConfirmations = function() {\n  return this.recordedConfirmations.length > 0\n}\n\nBrowserBot.prototype.getNextConfirmation = function() {\n  let t = this.recordedConfirmations.shift()\n  this.relayBotToRC('browserbot.recordedConfirmations')\n  return t\n}\n\nBrowserBot.prototype.hasPrompts = function() {\n  return this.recordedPrompts.length > 0\n}\n\nBrowserBot.prototype.getNextPrompt = function() {\n  let t = this.recordedPrompts.shift()\n  this.relayBotToRC('browserbot.recordedPrompts')\n  return t\n}\n\n/* Fire a mouse event in a browser-compatible manner */\n\nBrowserBot.prototype.triggerMouseEvent = function(\n  element,\n  eventType,\n  canBubble,\n  clientX,\n  clientY,\n  button\n) {\n  clientX = clientX ? clientX : 0\n  clientY = clientY ? clientY : 0\n\n  //LOG.debug(\"triggerMouseEvent assumes setting screenX and screenY to 0 is ok\");\n  let screenX = 0\n  let screenY = 0\n\n  canBubble = typeof canBubble == undefined ? true : canBubble\n  let doc = goog.dom.getOwnerDocument(element)\n  let view = goog.dom.getWindow(doc)\n\n  let evt = doc.createEvent('MouseEvents')\n  if (evt.initMouseEvent) {\n    // see http://developer.mozilla.org/en/docs/DOM:event.button and\n    // http://developer.mozilla.org/en/docs/DOM:event.initMouseEvent for button ternary logic logic\n    //Safari\n    evt.initMouseEvent(\n      eventType,\n      canBubble,\n      true,\n      view,\n      1,\n      screenX,\n      screenY,\n      clientX,\n      clientY,\n      this.controlKeyDown,\n      this.altKeyDown,\n      this.shiftKeyDown,\n      this.metaKeyDown,\n      button ? button : 0,\n      null\n    )\n  } else {\n    //LOG.warn(\"element doesn't have initMouseEvent; firing an event which should -- but doesn't -- have other mouse-event related attributes here, as well as controlKeyDown, altKeyDown, shiftKeyDown, metaKeyDown\");\n    evt.initEvent(eventType, canBubble, true)\n\n    evt.shiftKey = this.shiftKeyDown\n    evt.metaKey = this.metaKeyDown\n    evt.altKey = this.altKeyDown\n    evt.ctrlKey = this.controlKeyDown\n    if (button) {\n      evt.button = button\n    }\n  }\n  element.dispatchEvent(evt)\n}\n\nBrowserBot.prototype.scroll = function(target, value) {\n  const scrollHeight = window.document.body.scrollHeight\n  const scrollY = (scrollHeight / 100) * value\n  window.scrollBy(0, scrollY)\n}\n\n//DragAndDropExt, Shuo-Heng Shih, SELAB, CSIE, NCKU, 2016/10/17\nBrowserBot.prototype.triggerDragEvent = function(element, target) {\n  const getXpathOfElement = function(element) {\n    if (element == null) {\n      return 'null'\n    }\n    if (element.parentElement == null) {\n      return '/' + element.tagName\n    }\n\n    let siblingElement = element.parentElement.children\n    let tagCount = 0\n    let totalTagCount = 0\n    let isFound = false\n\n    for (let i = 0; i < siblingElement.length; i++) {\n      if (siblingElement[i].tagName == element.tagName && !isFound) {\n        tagCount++\n        totalTagCount++\n      } else if (siblingElement[i].tagName == element.tagName) {\n        totalTagCount++\n      }\n      if (siblingElement[i] == element) {\n        isFound = true\n      }\n    }\n\n    if (totalTagCount > 1) {\n      return (\n        getXpathOfElement(element.parentElement) +\n        '/' +\n        element.tagName +\n        '[' +\n        tagCount +\n        ']'\n      )\n    }\n\n    return getXpathOfElement(element.parentElement) + '/' + element.tagName\n  }\n  let script =\n    \"                                              \\\n        function simulateDragDrop(sourceNode, destinationNode){\\\n        function createCustomEvent(type) {                     \\\n            var event = new CustomEvent('CustomEvent');        \\\n            event.initCustomEvent(type, true, true, null);     \\\n            event.dataTransfer = {                             \\\n                data: {                                        \\\n                },                                             \\\n                setData: function(type, val) {                 \\\n                    this.data[type] = val;                     \\\n                },                                             \\\n                getData: function(type) {                      \\\n                    return this.data[type];                    \\\n                }                                              \\\n            };                                                 \\\n            return event;                                      \\\n        }                                                      \\\n        function dispatchEvent(node, type, event) {            \\\n            if (node.dispatchEvent) {                          \\\n                return node.dispatchEvent(event);              \\\n            }                                                  \\\n            if (node.fireEvent) {                              \\\n                return node.fireEvent('on' + type, event);     \\\n            }                                                  \\\n        }                                                      \\\n        var event = createCustomEvent('dragstart');            \\\n        dispatchEvent(sourceNode, 'dragstart', event);         \\\n                                                               \\\n        var dropEvent = createCustomEvent('drop');             \\\n        dropEvent.dataTransfer = event.dataTransfer;           \\\n        dispatchEvent(destinationNode, 'drop', dropEvent);     \\\n                                                               \\\n        var dragEndEvent = createCustomEvent('dragend');       \\\n        dragEndEvent.dataTransfer = event.dataTransfer;        \\\n        dispatchEvent(sourceNode, 'dragend', dragEndEvent);    \\\n    }                                                          \\\n    simulateDragDrop(document.evaluate('\" +\n    getXpathOfElement(element) +\n    \"', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue, document.evaluate('\" +\n    getXpathOfElement(target) +\n    \"', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue);\\\n    \"\n  let win = this.browserbot.getCurrentWindow()\n  let doc = win.document\n  let scriptTag = doc.createElement('script')\n  scriptTag.type = 'text/javascript'\n  scriptTag.text = script\n  doc.body.appendChild(scriptTag)\n}\n\nBrowserBot.prototype._windowClosed = function(win) {\n  try {\n    let c = win.closed\n    if (c == null) return true\n    return c\n  } catch (ignored) {\n    // Firefox 15+ may already have marked the win dead. Accessing it\n    // causes an exception to be thrown. That exception tells us the window\n    // is closed.\n    return true\n  }\n}\n\nBrowserBot.uniqueKey = 1\n\nBrowserBot.prototype._modifyWindow = function(win) {\n  // In proxyInjectionMode, have to suppress //LOG calls in _modifyWindow to avoid an infinite loop\n  if (this._windowClosed(win)) {\n    if (!this.proxyInjectionMode) {\n      //LOG.error(\"modifyWindow: Window was closed!\");\n    }\n    return null\n  }\n  if (!this.proxyInjectionMode) {\n    //LOG.debug('modifyWindow ' + this.uniqueId + \":\" + win[this.uniqueId]);\n  }\n\n  // Assign a unique label for this window. We set this on a known attribute so we can reliably\n  // find it later. This is slightly different from uniqueId.\n  win.seleniumKey = BrowserBot.uniqueKey++\n\n  try {\n    this.modifyWindowToRecordPopUpDialogs(win, this)\n  } catch (ex) {\n    console.error(ex) // eslint-disable-line no-console\n  }\n\n  //Commenting out for issue 1854\n  //win[this.uniqueId] = 1;\n\n  // In proxyInjection mode, we have our own mechanism for detecting page loads\n  if (!this.proxyInjectionMode) {\n    this.modifySeparateTestWindowToDetectPageLoads(win)\n  }\n  if (win.frames && win.frames.length && win.frames.length > 0) {\n    for (let i = 0; i < win.frames.length; i++) {\n      try {\n        this._modifyWindow(win.frames[i])\n      } catch (e) {} // eslint-disable-line no-empty\n      // we're just trying to be opportunistic; don't worry if this doesn't work out\n    }\n  }\n  return win\n}\n\nBrowserBot.prototype.selectWindow = function(target) {\n  if (!target || target == 'null') {\n    this._selectTopWindow()\n    return\n  }\n  let result = target.match(/^([a-zA-Z]+)=(.*)/)\n  if (!result) {\n    this._selectWindowByWindowId(target)\n    return\n  }\n  let locatorType = result[1]\n  let locatorValue = result[2]\n  if (locatorType == 'title') {\n    this._selectWindowByTitle(locatorValue)\n  }\n  // TODO separate name and var into separate functions\n  else if (locatorType == 'name') {\n    this._selectWindowByName(locatorValue)\n  } else if (locatorType == 'var') {\n    let win = this.getCurrentWindow().eval(locatorValue)\n    if (win) {\n      this._selectWindowByName(win.name)\n    } else {\n      throw new SeleniumError('Window not found by var: ' + locatorValue)\n    }\n  } else {\n    throw new SeleniumError('Window locator not recognized: ' + locatorType)\n  }\n}\n\nBrowserBot.prototype.selectPopUp = function(windowId) {\n  if (!windowId || windowId == 'null') {\n    this._selectFirstNonTopWindow()\n  } else {\n    this._selectWindowByWindowId(windowId)\n  }\n}\n\nBrowserBot.prototype._selectTopWindow = function() {\n  this.currentWindowName = null\n  this.currentWindow = this.topWindow\n  this.topFrame = this.topWindow\n  this.isSubFrameSelected = false\n}\n\nBrowserBot.prototype._selectWindowByWindowId = function(windowId) {\n  try {\n    this._selectWindowByName(windowId)\n  } catch (e) {\n    this._selectWindowByTitle(windowId)\n  }\n}\n\nBrowserBot.prototype._selectWindowByName = function(target) {\n  this.currentWindow = this.getWindowByName(target, false)\n  this.topFrame = this.currentWindow\n  this.currentWindowName = target\n  this.isSubFrameSelected = false\n}\n\nBrowserBot.prototype._selectWindowByTitle = function(target) {\n  let windowName = this.getWindowNameByTitle(target)\n  if (!windowName) {\n    this._selectTopWindow()\n  } else {\n    this._selectWindowByName(windowName)\n  }\n}\n\nBrowserBot.prototype._selectFirstNonTopWindow = function() {\n  let names = this.getNonTopWindowNames()\n  if (names.length) {\n    this._selectWindowByName(names[0])\n  }\n}\n\nBrowserBot.prototype.selectFrame = function(target) {\n  let frame\n\n  if (target.indexOf('index=') == 0) {\n    target = target.substr(6)\n    frame = this.getCurrentWindow().frames[target]\n    if (frame == null) {\n      throw new SeleniumError('Not found: frames[' + target + ']')\n    }\n    if (!frame.document) {\n      throw new SeleniumError('frames[' + target + '] is not a frame')\n    }\n    this.currentWindow = frame\n    this.isSubFrameSelected = true\n  } else if (target == 'relative=up' || target == 'relative=parent') {\n    this.currentWindow = this.getCurrentWindow().parent\n    this.isSubFrameSelected = this._getFrameElement(this.currentWindow) != null\n  } else if (target == 'relative=top') {\n    this.currentWindow = this.topFrame\n    this.isSubFrameSelected = false\n  } else {\n    frame = this.findElement(target)\n    if (frame == null) {\n      throw new SeleniumError('Not found: ' + target)\n    }\n    // now, did they give us a frame or a frame ELEMENT?\n    let match = false\n    if (frame.contentWindow) {\n      // this must be a frame element\n      if (browserVersion.isHTA) {\n        // stupid HTA bug; can't get in the front door\n        target = frame.contentWindow.name\n      } else {\n        this.currentWindow = frame.contentWindow\n        this.isSubFrameSelected = true\n        match = true\n      }\n    } else if (frame.document && frame.location) {\n      // must be an actual window frame\n      this.currentWindow = frame\n      this.isSubFrameSelected = true\n      match = true\n    }\n\n    if (!match) {\n      // neither, let's loop through the frame names\n      let win = this.getCurrentWindow()\n\n      if (win && win.frames && win.frames.length) {\n        for (let i = 0; i < win.frames.length; i++) {\n          if (win.frames[i].name == target) {\n            this.currentWindow = win.frames[i]\n            this.isSubFrameSelected = true\n            match = true\n            break\n          }\n        }\n      }\n      if (!match) {\n        throw new SeleniumError('Not a frame: ' + target)\n      }\n    }\n  }\n  // modifies the window\n  this.getCurrentWindow()\n}\n\nBrowserBot.prototype.doesThisFrameMatchFrameExpression = function(\n  currentFrameString,\n  target\n) {\n  let isDom = false\n  if (target.indexOf('dom=') == 0) {\n    target = target.substr(4)\n    isDom = true\n  } else if (target.indexOf('index=') == 0) {\n    target = 'frames[' + target.substr(6) + ']'\n    isDom = true\n  }\n  let t\n  //Evalinsandbox\n  // eslint-disable-next-line no-undef\n  let mySandbox = new Components.utils.Sandbox(this.currentWindow.location.href)\n  mySandbox.currentFrameString = currentFrameString\n  mySandbox.target = target\n  try {\n    // eslint-disable-next-line no-undef\n    t = Components.utils.evalInSandbox(\n      currentFrameString + '.' + target,\n      mySandbox\n    )\n    //eval(\"t=\" + currentFrameString + \".\" + target);\n  } catch (e) {} // eslint-disable-line no-empty\n  let autWindow = this.browserbot.getCurrentWindow()\n  if (t != null) {\n    try {\n      if (t.window == autWindow) {\n        return true\n      }\n      if (t.window.uniqueId == autWindow.uniqueId) {\n        return true\n      }\n      return false\n    } catch (permDenied) {\n      // DGF if the windows are incomparable, they're probably not the same...\n    }\n  }\n  if (isDom) {\n    return false\n  }\n  // eslint-disable-next-line no-undef\n  let currentFrame = Components.utils.evalInSandbox(\n    currentFrameString,\n    mySandbox\n  )\n  //var currentFrame;\n  //eval(\"currentFrame=\" + currentFrameString);\n  if (target == 'relative=up') {\n    if (currentFrame.window.parent == autWindow) {\n      return true\n    }\n    return false\n  }\n  if (target == 'relative=top') {\n    if (currentFrame.window.top == autWindow) {\n      return true\n    }\n    return false\n  }\n  if (currentFrame.window == autWindow.parent) {\n    if (autWindow.name == target) {\n      return true\n    }\n    try {\n      let element = this.findElement(target, currentFrame.window)\n      if (element.contentWindow == autWindow) {\n        return true\n      }\n    } catch (e) {} // eslint-disable-line no-empty\n  }\n  return false\n}\n\nBrowserBot.prototype.abortXhrRequest = function() {\n  if (this.ignoreResponseCode) {\n    //LOG.debug(\"XHR response code being ignored. Nothing to abort.\");\n  } else {\n    if (this.abortXhr == false && this.isXhrSent && !this.isXhrDone) {\n      //LOG.info(\"abortXhrRequest(): aborting request\");\n      this.abortXhr = true\n      this.xhr.abort()\n    }\n  }\n}\n\nBrowserBot.prototype.onXhrStateChange = function(method) {\n  //LOG.info(\"onXhrStateChange(): xhr.readyState = \" + this.xhr.readyState + \" method = \" + method + \" time = \" + new Date().getTime());\n  if (this.xhr.readyState == 4) {\n    // check if the request got aborted.\n    if (this.abortXhr == true) {\n      this.xhrResponseCode = 0\n      this.xhrStatusText = 'Request Aborted'\n      this.isXhrDone = true\n      return\n    }\n\n    try {\n      if (\n        method == 'HEAD' &&\n        (this.xhr.status == 501 || this.xhr.status == 405)\n      ) {\n        //LOG.info(\"onXhrStateChange(): HEAD ajax returned 501 or 405, retrying with GET\");\n        // handle 501 response code from servers that do not support 'HEAD' method.\n        // send GET ajax request with range 0-1.\n        this.xhr = new XMLHttpRequest()\n        this.xhr.onreadystatechange = this.onXhrStateChange.bind(this, 'GET')\n        this.xhr.open('GET', this.xhrOpenLocation, true)\n        this.xhr.setRequestHeader('Range', 'bytes:0-1')\n        this.xhr.send('')\n        this.isXhrSent = true\n        return\n      }\n      this.xhrResponseCode = this.xhr.status\n      this.xhrStatusText = this.xhr.statusText\n    } catch (ex) {\n      //LOG.info(\"encountered exception while reading xhrResponseCode.\" + ex.message);\n      this.xhrResponseCode = -1\n      this.xhrStatusText = 'Request Error'\n    }\n\n    this.isXhrDone = true\n  }\n}\n\nBrowserBot.prototype.openWindow = function(url, windowID) {\n  if (url != '') {\n    url = 'https://www.google.com'\n  }\n  if (browserVersion.isHTA) {\n    // in HTA mode, calling .open on the window interprets the url relative to that window\n    // we need to absolute-ize the URL to make it consistent\n    let child = this.getCurrentWindow().open(url, windowID, 'resizable=yes')\n    selenium.browserbot.openedWindows[windowID] = child\n  } else {\n    this.getCurrentWindow().open(url, windowID, 'resizable=yes')\n  }\n}\n\nBrowserBot.prototype.setIFrameLocation = function(iframe, location) {\n  iframe.src = location\n}\n\nBrowserBot.prototype.getCurrentPage = function() {\n  return this\n}\n\nBrowserBot.prototype.windowNeedsModifying = function(win, uniqueId) {\n  // On anything but Firefox, checking the unique id is enough.\n  // Firefox 4 introduces a race condition which selenium regularly loses.\n\n  try {\n    // eslint-disable-next-line no-undef\n    let appInfo = Components.classes['@mozilla.org/xre/app-info;1'].getService(\n      // eslint-disable-next-line no-undef\n      Components.interfaces.nsIXULAppInfo\n    )\n    // eslint-disable-next-line no-undef\n    let versionChecker = Components.classes[\n      '@mozilla.org/xpcom/version-comparator;1'\n      // eslint-disable-next-line no-undef\n    ].getService(Components.interfaces.nsIVersionComparator)\n\n    if (versionChecker.compare(appInfo.version, '4.0b1') >= 0) {\n      return win.alert.toString().indexOf('native code') != -1\n    }\n  } catch (ignored) {} // eslint-disable-line no-empty\n  return !win[uniqueId]\n}\n\nBrowserBot.prototype.modifyWindowToRecordPopUpDialogs = function(\n  originalWindow,\n  browserBot\n) {\n  let self = this\n\n  // Apparently, Firefox 4 makes it possible to unwrap an object to find that\n  // there's nothing in it.\n  let windowToModify = core.firefox.unwrap(originalWindow)\n  if (!windowToModify) {\n    windowToModify = originalWindow\n  }\n\n  windowToModify.seleniumAlert = windowToModify.alert\n\n  if (!self.windowNeedsModifying(windowToModify, browserBot.uniqueId)) {\n    return\n  }\n\n  windowToModify.alert = function(alert) {\n    browserBot.recordedAlerts.push(alert)\n    self.relayBotToRC.call(self, 'browserbot.recordedAlerts')\n  }\n\n  windowToModify.confirm = function(message) {\n    browserBot.recordedConfirmations.push(message)\n    let result = browserBot.nextConfirmResult\n    browserBot.nextConfirmResult = true\n    self.relayBotToRC.call(self, 'browserbot.recordedConfirmations')\n    return result\n  }\n\n  windowToModify.prompt = function(message) {\n    browserBot.recordedPrompts.push(message)\n    let result = !browserBot.nextConfirmResult\n      ? null\n      : browserBot.nextPromptResult\n    browserBot.nextConfirmResult = true\n    browserBot.nextPromptResult = ''\n    self.relayBotToRC.call(self, 'browserbot.recordedPrompts')\n    return result\n  }\n\n  // Keep a reference to all popup windows by name\n  // note that in IE the \"windowName\" argument must be a valid javascript identifier, it seems.\n  let originalOpen = windowToModify.open\n  let originalOpenReference\n  if (browserVersion.isHTA) {\n    originalOpenReference = 'selenium_originalOpen' + new Date().getTime()\n    windowToModify[originalOpenReference] = windowToModify.open\n  }\n\n  let isHTA = browserVersion.isHTA\n\n  let newOpen = function(url, windowName, windowFeatures, replaceFlag) {\n    let myOriginalOpen = originalOpen\n    if (isHTA) {\n      myOriginalOpen = this[originalOpenReference]\n    }\n\n    //UnnamedWinIFrameExt, Jie-Lin You, SELAB, CSIE, NCKU, 2016/05/26\n    if (\n      windowName == '' ||\n      windowName == '_blank' ||\n      typeof windowName === 'undefined'\n    ) {\n      windowName = 'win_ser_' + self.count\n      self.count += 1\n    }\n\n    let openedWindow = myOriginalOpen(\n      url,\n      windowName,\n      windowFeatures,\n      replaceFlag\n    )\n    //LOG.debug(\"window.open call intercepted; window ID (which you can use with selectWindow()) is \\\"\" +  windowName + \"\\\"\");\n    if (windowName != null) {\n      openedWindow['seleniumWindowName'] = windowName\n    }\n    selenium.browserbot.openedWindows[windowName] = openedWindow\n    return openedWindow\n  }\n\n  if (browserVersion.isHTA) {\n    originalOpenReference = 'selenium_originalOpen' + new Date().getTime()\n    const newOpenReference = 'selenium_newOpen' + new Date().getTime()\n    let setOriginalRef = \"this['\" + originalOpenReference + \"'] = this.open;\"\n\n    if (windowToModify.eval) {\n      windowToModify.eval(setOriginalRef)\n      windowToModify.open = newOpen\n    } else {\n      // DGF why can't I eval here?  Seems like I'm querying the window at a bad time, maybe?\n      setOriginalRef += \"this.open = this['\" + newOpenReference + \"'];\"\n      windowToModify[newOpenReference] = newOpen\n      windowToModify.setTimeout(setOriginalRef, 0)\n    }\n  } else {\n    windowToModify.open = newOpen\n  }\n}\n\n/**\n * Call the supplied function when a the current page unloads and a new one loads.\n * This is done by polling continuously until the document changes and is fully loaded.\n */\nBrowserBot.prototype.modifySeparateTestWindowToDetectPageLoads = function(\n  windowObject\n) {\n  // Since the unload event doesn't fire in Safari 1.3, we start polling immediately\n  if (!windowObject) {\n    //LOG.warn(\"modifySeparateTestWindowToDetectPageLoads: no windowObject!\");\n    return\n  }\n  if (this._windowClosed(windowObject)) {\n    //LOG.info(\"modifySeparateTestWindowToDetectPageLoads: windowObject was closed\");\n    return\n  }\n  let oldMarker = this.isPollingForLoad(windowObject)\n  if (oldMarker) {\n    //LOG.debug(\"modifySeparateTestWindowToDetectPageLoads: already polling this window: \" + oldMarker);\n    return\n  }\n\n  let marker = 'selenium' + new Date().getTime()\n  //LOG.debug(\"Starting pollForLoad (\" + marker + \"): \" + windowObject.location);\n  this.pollingForLoad[marker] = true\n  // if this is a frame, add a load listener, otherwise, attach a poller\n  let frameElement = this._getFrameElement(windowObject)\n  // DGF HTA mode can't attach load listeners to subframes (yuk!)\n  let htaSubFrame = this._isHTASubFrame(windowObject)\n  if (frameElement && !htaSubFrame) {\n    //LOG.debug(\"modifySeparateTestWindowToDetectPageLoads: this window is a frame; attaching a load listener\");\n    //addLoadListener(frameElement, this.recordPageLoad); TODO: check if this is necessary\n    frameElement[marker] = true\n    frameElement['frame' + this.uniqueId] = marker\n    //LOG.debug(\"dgf this.uniqueId=\"+this.uniqueId);\n    //LOG.debug(\"dgf marker=\"+marker);\n    //LOG.debug(\"dgf frameElement['frame'+this.uniqueId]=\"+frameElement['frame'+this.uniqueId]);\n    frameElement[this.uniqueId] = marker\n    //LOG.debug(\"dgf frameElement[this.uniqueId]=\"+frameElement[this.uniqueId]);\n  } else {\n    windowObject.location[marker] = true\n    windowObject[this.uniqueId] = marker\n    this.pollForLoad(\n      this.recordPageLoad,\n      windowObject,\n      windowObject.document,\n      windowObject.location,\n      windowObject.location.href,\n      marker\n    )\n  }\n}\n\nBrowserBot.prototype._isHTASubFrame = function() {\n  if (!browserVersion.isHTA) return false\n  // DGF this is wrong! what if \"win\" isn't the selected window?\n  return this.isSubFrameSelected\n}\n\nBrowserBot.prototype._getFrameElement = function(win) {\n  let frameElement = null\n  let caught\n  try {\n    frameElement = win.frameElement\n  } catch (e) {\n    caught = true\n  }\n  if (caught) {\n    // on IE, checking frameElement in a pop-up results in a \"No such interface supported\" exception\n    // but it might have a frame element anyway!\n    let parentContainsIdenticallyNamedFrame = false\n    try {\n      parentContainsIdenticallyNamedFrame = win.parent.frames[win.name]\n    } catch (e) {} // eslint-disable-line no-empty\n    // this may fail if access is denied to the parent; in that case, assume it's not a pop-up\n\n    if (parentContainsIdenticallyNamedFrame) {\n      // it can't be a coincidence that the parent has a frame with the same name as myself!\n      let result\n      try {\n        result = parentContainsIdenticallyNamedFrame.frameElement\n        if (result) {\n          return result\n        }\n      } catch (e) {} // eslint-disable-line no-empty\n      // it was worth a try! _getFrameElementsByName is often slow\n      result = this._getFrameElementByName(win.name, win.parent.document, win)\n      return result\n    }\n  }\n  //LOG.debug(\"_getFrameElement: frameElement=\"+frameElement);\n  if (frameElement) {\n    //LOG.debug(\"frameElement.name=\"+frameElement.name);\n  }\n  return frameElement\n}\n\nBrowserBot.prototype._getFrameElementByName = function(name, doc, win) {\n  let frames\n  let frame\n  let i\n  frames = doc.getElementsByTagName('iframe')\n  for (i = 0; i < frames.length; i++) {\n    frame = frames[i]\n    if (frame.name === name) {\n      return frame\n    }\n  }\n  frames = doc.getElementsByTagName('frame')\n  for (i = 0; i < frames.length; i++) {\n    frame = frames[i]\n    if (frame.name === name) {\n      return frame\n    }\n  }\n  // DGF weird; we only call this function when we know the doc contains the frame\n  //LOG.warn(\"_getFrameElementByName couldn't find a frame or iframe; checking every element for the name \" + name);\n  return BrowserBot.prototype.locateElementByName(win.name, win.parent.document)\n}\n\n/**\n * Set up a polling timer that will keep checking the readyState of the document until it's complete.\n * Since we might call this before the original page is unloaded, we first check to see that the current location\n * or href is different from the original one.\n */\nBrowserBot.prototype.pollForLoad = function(\n  loadFunction,\n  windowObject,\n  originalDocument,\n  originalLocation,\n  originalHref,\n  marker\n) {\n  //LOG.debug(\"pollForLoad original (\" + marker + \"): \" + originalHref);\n  try {\n    //Samit: Fix: open command sometimes fails if current url is chrome and new is not\n    windowObject = core.firefox.unwrap(windowObject)\n    if (this._windowClosed(windowObject)) {\n      //LOG.debug(\"pollForLoad WINDOW CLOSED (\" + marker + \")\");\n      delete this.pollingForLoad[marker]\n      return\n    }\n\n    let isSamePage = this._isSamePage(\n      windowObject,\n      originalDocument,\n      originalLocation,\n      originalHref,\n      marker\n    )\n    let rs = this.getReadyState(windowObject, windowObject.document)\n\n    if (!isSamePage && rs == 'complete') {\n      let currentHref = windowObject.location.href\n      //LOG.debug(\"pollForLoad FINISHED (\" + marker + \"): \" + rs + \" (\" + currentHref + \")\");\n      delete this.pollingForLoad[marker]\n      this._modifyWindow(windowObject)\n      let newMarker = this.isPollingForLoad(windowObject)\n      if (!newMarker) {\n        //LOG.debug(\"modifyWindow didn't start new poller: \" + newMarker);\n        this.modifySeparateTestWindowToDetectPageLoads(windowObject)\n      }\n      newMarker = this.isPollingForLoad(windowObject)\n      let currentlySelectedWindow\n      let currentlySelectedWindowMarker\n      currentlySelectedWindow = this.getCurrentWindow(true)\n      currentlySelectedWindowMarker = currentlySelectedWindow[this.uniqueId]\n\n      //LOG.debug(\"pollForLoad (\" + marker + \") restarting \" + newMarker);\n      if (/(TestRunner-splash|Blank)\\.html\\?start=true$/.test(currentHref)) {\n        //LOG.debug(\"pollForLoad Oh, it's just the starting page.  Never mind!\");\n      } else if (currentlySelectedWindowMarker == newMarker) {\n        loadFunction(currentlySelectedWindow)\n      } else {\n        //LOG.debug(\"pollForLoad page load detected in non-current window; ignoring (currentlySelected=\"+currentlySelectedWindowMarker+\", detection in \"+newMarker+\")\");\n      }\n      return\n    }\n    //LOG.debug(\"pollForLoad continue (\" + marker + \"): \" + currentHref);\n    this.reschedulePoller(\n      loadFunction,\n      windowObject,\n      originalDocument,\n      originalLocation,\n      originalHref,\n      marker\n    )\n  } catch (e) {\n    //LOG.debug(\"Exception during pollForLoad; this should get noticed soon (\" + e.message + \")!\");\n    //DGF this is supposed to get logged later; log it at debug just in case\n    ////LOG.exception(e);\n    this.pageLoadError = e\n  }\n}\n\nBrowserBot.prototype._isSamePage = function(\n  windowObject,\n  originalDocument,\n  originalLocation,\n  originalHref,\n  marker\n) {\n  let currentDocument = windowObject.document\n  let currentLocation = windowObject.location\n  let currentHref = currentLocation.href\n\n  let sameDoc = this._isSameDocument(originalDocument, currentDocument)\n\n  let sameLoc = originalLocation === currentLocation\n\n  // hash marks don't meant the page has loaded, so we need to strip them off if they exist...\n  let currentHash = currentHref.indexOf('#')\n  if (currentHash > 0) {\n    currentHref = currentHref.substring(0, currentHash)\n  }\n  let originalHash = originalHref.indexOf('#')\n  if (originalHash > 0) {\n    originalHref = originalHref.substring(0, originalHash)\n  }\n  //LOG.debug(\"_isSamePage: currentHref: \" + currentHref);\n  //LOG.debug(\"_isSamePage: originalHref: \" + originalHref);\n\n  let sameHref = originalHref === currentHref\n  let markedLoc = currentLocation[marker]\n\n  if (browserVersion.isKonqueror || browserVersion.isSafari) {\n    // the mark disappears too early on these browsers\n    markedLoc = true\n  }\n\n  // since this is some _very_ important logic, especially for PI and multiWindow mode, we should log all these out\n  //LOG.debug(\"_isSamePage: sameDoc: \" + sameDoc);\n  //LOG.debug(\"_isSamePage: sameLoc: \" + sameLoc);\n  //LOG.debug(\"_isSamePage: sameHref: \" + sameHref);\n  //LOG.debug(\"_isSamePage: markedLoc: \" + markedLoc);\n\n  return sameDoc && sameLoc && sameHref && markedLoc\n}\n\nBrowserBot.prototype._isSameDocument = function(\n  originalDocument,\n  currentDocument\n) {\n  return originalDocument === currentDocument\n}\n\nBrowserBot.prototype.getReadyState = function(windowObject, currentDocument) {\n  let rs = currentDocument.readyState\n  if (rs == null) {\n    if (\n      (this.buttonWindow != null &&\n        this.buttonWindow.document.readyState == null) || // not proxy injection mode (and therefore buttonWindow isn't null)\n      top.document.readyState == null\n    ) {\n      // proxy injection mode (and therefore everything's in the top window, but buttonWindow doesn't exist)\n      // uh oh!  we're probably on Firefox with no readyState extension installed!\n      // We'll have to just take a guess as to when the document is loaded; this guess\n      // will never be perfect. :-(\n      if (\n        typeof currentDocument.getElementsByTagName != 'undefined' &&\n        typeof currentDocument.getElementById != 'undefined' &&\n        (currentDocument.getElementsByTagName('body')[0] != null ||\n          currentDocument.body != null)\n      ) {\n        if (\n          windowObject.frameElement &&\n          windowObject.location.href == 'about:blank' &&\n          windowObject.frameElement.src != 'about:blank'\n        ) {\n          //LOG.info(\"getReadyState not loaded, frame location was about:blank, but frame src = \" + windowObject.frameElement.src);\n          return null\n        }\n        //LOG.debug(\"getReadyState = windowObject.frames.length = \" + windowObject.frames.length);\n        for (let i = 0; i < windowObject.frames.length; i++) {\n          //LOG.debug(\"i = \" + i);\n          if (\n            this.getReadyState(\n              windowObject.frames[i],\n              windowObject.frames[i].document\n            ) != 'complete'\n          ) {\n            //LOG.debug(\"getReadyState aha! the nested frame \" + windowObject.frames[i].name + \" wasn't ready!\");\n            return null\n          }\n        }\n\n        rs = 'complete'\n      } else {\n        //LOG.debug(\"pollForLoad readyState was null and DOM appeared to not be ready yet\");\n      }\n    }\n  } else if (rs == 'loading' && browserVersion.isIE) {\n    //LOG.debug(\"pageUnloading = true!!!!\");\n    this.pageUnloading = true\n  }\n  //LOG.debug(\"getReadyState returning \" + rs);\n  return rs\n}\n\n/** This function isn't used normally, but was the way we used to schedule pollers:\n asynchronously executed autonomous units.  This is deprecated, but remains here\n for future reference.\n */\nBrowserBot.prototype.XXXreschedulePoller = function(\n  loadFunction,\n  windowObject,\n  originalDocument,\n  originalLocation,\n  originalHref,\n  marker\n) {\n  let self = this\n  window.setTimeout(function() {\n    self.pollForLoad(\n      loadFunction,\n      windowObject,\n      originalDocument,\n      originalLocation,\n      originalHref,\n      marker\n    )\n  }, 500)\n}\n\n/** This function isn't used normally, but is useful for debugging asynchronous pollers\n * To enable it, rename it to \"reschedulePoller\", so it will override the\n * existing reschedulePoller function\n */\nBrowserBot.prototype.XXXreschedulePoller = function(\n  loadFunction,\n  windowObject,\n  originalDocument,\n  originalLocation,\n  originalHref,\n  marker\n) {\n  let doc = this.buttonWindow.document\n  let button = doc.createElement('button')\n  let buttonName = doc.createTextNode(marker + ' - ' + windowObject.name)\n  button.appendChild(buttonName)\n  let tools = doc.getElementById('tools')\n  let self = this\n  button.onclick = function() {\n    tools.removeChild(button)\n    self.pollForLoad(\n      loadFunction,\n      windowObject,\n      originalDocument,\n      originalLocation,\n      originalHref,\n      marker\n    )\n  }\n  tools.appendChild(button)\n  window.setTimeout(button.onclick, 500)\n}\n\nBrowserBot.prototype.reschedulePoller = function(\n  loadFunction,\n  windowObject,\n  originalDocument,\n  originalLocation,\n  originalHref,\n  marker\n) {\n  let self = this\n  let pollerFunction = function() {\n    self.pollForLoad(\n      loadFunction,\n      windowObject,\n      originalDocument,\n      originalLocation,\n      originalHref,\n      marker\n    )\n  }\n  this.windowPollers.push(pollerFunction)\n}\n\nBrowserBot.prototype.runScheduledPollers = function() {\n  //LOG.debug(\"runScheduledPollers\");\n  let oldPollers = this.windowPollers\n  this.windowPollers = new Array()\n  for (let i = 0; i < oldPollers.length; i++) {\n    oldPollers[i].call()\n  }\n  //LOG.debug(\"runScheduledPollers DONE\");\n}\n\nBrowserBot.prototype.isPollingForLoad = function(win) {\n  let marker\n  let frameElement = this._getFrameElement(win)\n  let htaSubFrame = this._isHTASubFrame(win)\n  if (frameElement && !htaSubFrame) {\n    marker = frameElement['frame' + this.uniqueId]\n  } else {\n    marker = win[this.uniqueId]\n  }\n  if (!marker) {\n    //LOG.debug(\"isPollingForLoad false, missing uniqueId \" + this.uniqueId + \": \" + marker);\n    return false\n  }\n  if (!this.pollingForLoad[marker]) {\n    //LOG.debug(\"isPollingForLoad false, this.pollingForLoad[\" + marker + \"]: \" + this.pollingForLoad[marker]);\n    return false\n  }\n  return marker\n}\n\nBrowserBot.prototype.getWindowByName = function(windowName, doNotModify) {\n  //LOG.debug(\"getWindowByName(\" + windowName + \")\");\n  // First look in the map of opened windows\n  let targetWindow = this.openedWindows[windowName]\n  if (!targetWindow) {\n    targetWindow = this.topWindow[windowName]\n  }\n  if (!targetWindow && windowName == '_blank') {\n    for (let winName in this.openedWindows) {\n      // _blank can match selenium_blank*, if it looks like it's OK (valid href, not closed)\n      if (/^selenium_blank/.test(winName)) {\n        targetWindow = this.openedWindows[winName]\n        let ok\n        try {\n          if (!this._windowClosed(targetWindow)) {\n            ok = targetWindow.location.href\n          }\n        } catch (e) {} // eslint-disable-line no-empty\n        if (ok) break\n      }\n    }\n  }\n  if (!targetWindow) {\n    throw new SeleniumError(\n      'Window does not exist. If this looks like a Selenium bug, make sure to read http://seleniumhq.org/docs/02_selenium_ide.html#alerts-popups-and-multiple-windows for potential workarounds.'\n    )\n  }\n  if (browserVersion.isHTA) {\n    try {\n      targetWindow.location.href\n    } catch (e) {\n      targetWindow = window.open('', targetWindow.name)\n      this.openedWindows[targetWindow.name] = targetWindow\n    }\n  }\n  if (!doNotModify) {\n    this._modifyWindow(targetWindow)\n  }\n  return targetWindow\n}\n\n/**\n * Find a window name from the window title.\n */\nBrowserBot.prototype.getWindowNameByTitle = function(windowTitle) {\n  //LOG.debug(\"getWindowNameByTitle(\" + windowTitle + \")\");\n\n  // First look in the map of opened windows and iterate them\n  for (let windowName in this.openedWindows) {\n    let targetWindow = this.openedWindows[windowName]\n\n    // If the target window's title is our title\n    try {\n      // TODO implement Pattern Matching here\n      if (\n        !this._windowClosed(targetWindow) &&\n        targetWindow.document.title == windowTitle\n      ) {\n        return windowName\n      }\n    } catch (e) {\n      // You'll often get Permission Denied errors here in IE\n      // eh, if we can't read this window's title,\n      // it's probably not available to us right now anyway\n    }\n  }\n\n  try {\n    if (this.topWindow.document.title == windowTitle) {\n      return ''\n    }\n  } catch (e) {} // eslint-disable-line no-empty\n  // IE Perm denied\n\n  throw new SeleniumError('Could not find window with title ' + windowTitle)\n}\n\nBrowserBot.prototype.getNonTopWindowNames = function() {\n  let nonTopWindowNames = []\n\n  for (let windowName in this.openedWindows) {\n    let win = this.openedWindows[windowName]\n    if (!this._windowClosed(win) && win != this.topWindow) {\n      nonTopWindowNames.push(windowName)\n    }\n  }\n\n  return nonTopWindowNames\n}\n\nBrowserBot.prototype.getCurrentWindow = function(doNotModify) {\n  if (this.proxyInjectionMode) {\n    return window\n  }\n  let testWindow = core.firefox.unwrap(this.currentWindow)\n  if (!doNotModify) {\n    this._modifyWindow(testWindow)\n    //LOG.debug(\"getCurrentWindow newPageLoaded = false\");\n    this.newPageLoaded = false\n  }\n  testWindow = this._handleClosedSubFrame(testWindow, doNotModify)\n  bot.window_ = testWindow\n  return core.firefox.unwrap(testWindow)\n}\n\n/**\n * Offer a method the end-user can reliably use to retrieve the current window.\n * This should work even for windows with an XPCNativeWrapper. Returns the\n * current window object.\n */\nBrowserBot.prototype.getUserWindow = function() {\n  let userWindow = this.getCurrentWindow(true)\n  return userWindow\n}\n\nBrowserBot.prototype._handleClosedSubFrame = function(testWindow, doNotModify) {\n  if (this.proxyInjectionMode) {\n    return testWindow\n  }\n\n  if (this.isSubFrameSelected) {\n    let missing = true\n    if (\n      testWindow.parent &&\n      testWindow.parent.frames &&\n      testWindow.parent.frames.length\n    ) {\n      for (let i = 0; i < testWindow.parent.frames.length; i++) {\n        let frame = testWindow.parent.frames[i]\n        if (\n          frame == testWindow ||\n          frame.seleniumKey == testWindow.seleniumKey\n        ) {\n          missing = false\n          break\n        }\n      }\n    }\n    if (missing) {\n      //LOG.warn(\"Current subframe appears to have closed; selecting top frame\");\n      this.selectFrame('relative=top')\n      return this.getCurrentWindow(doNotModify)\n    }\n  } else if (this._windowClosed(testWindow)) {\n    //UnnamedWinIFrameExt, Jie-Lin You, SELAB, CSIE, NCKU, 2016/11/25\n    /*var closedError = new SeleniumError(\"Current window or frame is closed!\");\n        closedError.windowClosed = true;\n        throw closedError;*/\n    testWindow = this.topWindow //select live object\n  }\n  return testWindow\n}\n\nBrowserBot.prototype.setShouldHighlightElement = function(shouldHighlight) {\n  this.shouldHighlightLocatedElement = shouldHighlight\n}\n\n/*****************************************************************/\n/* BROWSER-SPECIFIC FUNCTIONS ONLY AFTER THIS LINE */\n\nBrowserBot.prototype._registerAllLocatorFunctions = function() {\n  // TODO - don't do this in the constructor - only needed once ever\n  this.locationStrategies = {}\n  for (let functionName in this) {\n    let result = /^locateElementBy([A-Z].+)$/.exec(functionName)\n    if (result != null) {\n      let locatorFunction = this[functionName]\n      if (typeof locatorFunction != 'function') {\n        continue\n      }\n      // Use a specified prefix in preference to one generated from\n      // the function name\n      let locatorPrefix = locatorFunction.prefix || result[1].toLowerCase()\n      this.locationStrategies[locatorPrefix] = locatorFunction\n    }\n  }\n\n  /**\n   * Find a locator based on a prefix.\n   */\n  this.findElementBy = function(locatorType, locator, inDocument, inWindow) {\n    let locatorFunction = this.locationStrategies[locatorType]\n    if (!locatorFunction) {\n      throw new SeleniumError(\n        \"Unrecognised locator type: '\" + locatorType + \"'\"\n      )\n    }\n    return locatorFunction.call(this, locator, inDocument, inWindow)\n  }\n\n  /**\n   * The implicit locator, that is used when no prefix is supplied.\n   */\n  this.locationStrategies['implicit'] = function(\n    locator,\n    inDocument,\n    inWindow\n  ) {\n    if (locator.startsWith('//')) {\n      return this.locateElementByXPath(locator, inDocument, inWindow)\n    }\n    if (locator.startsWith('document.')) {\n      return this.locateElementByDomTraversal(locator, inDocument, inWindow)\n    }\n    return this.locateElementByIdentifier(locator, inDocument, inWindow)\n  }\n}\n\nBrowserBot.prototype.getDocument = function() {\n  return core.firefox.unwrap(this.getCurrentWindow().document)\n}\n\nBrowserBot.prototype.getTitle = function() {\n  let t = this.getDocument().title\n  if (typeof t == 'string') {\n    t = t.trim()\n  }\n  return t\n}\n\nBrowserBot.prototype.getCookieByName = function(cookieName, doc) {\n  if (!doc) doc = this.getDocument()\n  let ck = doc.cookie\n  if (!ck) return null\n  let ckPairs = ck.split(/;/)\n  for (let i = 0; i < ckPairs.length; i++) {\n    let ckPair = ckPairs[i].trim()\n    let ckNameValue = ckPair.split(/=/)\n    let ckName = decodeURIComponent(ckNameValue[0])\n    if (ckName === cookieName) {\n      return decodeURIComponent(ckNameValue.slice(1).join('='))\n    }\n  }\n  return null\n}\n\nBrowserBot.prototype.getAllCookieNames = function(doc) {\n  if (!doc) doc = this.getDocument()\n  let ck = doc.cookie\n  if (!ck) return []\n  let cookieNames = []\n  let ckPairs = ck.split(/;/)\n  for (let i = 0; i < ckPairs.length; i++) {\n    let ckPair = ckPairs[i].trim()\n    let ckNameValue = ckPair.split(/=/)\n    let ckName = decodeURIComponent(ckNameValue[0])\n    cookieNames.push(ckName)\n  }\n  return cookieNames\n}\n\nBrowserBot.prototype.getAllRawCookieNames = function(doc) {\n  if (!doc) doc = this.getDocument()\n  let ck = doc.cookie\n  if (!ck) return []\n  let cookieNames = []\n  let ckPairs = ck.split(/;/)\n  for (let i = 0; i < ckPairs.length; i++) {\n    let ckPair = ckPairs[i].trim()\n    let ckNameValue = ckPair.split(/=/)\n    let ckName = ckNameValue[0]\n    cookieNames.push(ckName)\n  }\n  return cookieNames\n}\n\nfunction encodeURIComponentWithASPHack(uri) {\n  let regularEncoding = encodeURIComponent(uri)\n  let aggressiveEncoding = regularEncoding.replace('.', '%2E')\n  aggressiveEncoding = aggressiveEncoding.replace('_', '%5F')\n  return aggressiveEncoding\n}\n\nBrowserBot.prototype.deleteCookie = function(cookieName, domain, path, doc) {\n  if (!doc) doc = this.getDocument()\n  let expireDateInMilliseconds = new Date().getTime() + -1 * 1000\n\n  // we can't really be sure if we're dealing with encoded or unencoded cookie names\n  let _cookieName\n  let rawCookieNames = this.getAllRawCookieNames(doc)\n  for (let rawCookieNumber in rawCookieNames) {\n    if (rawCookieNames[rawCookieNumber] == cookieName) {\n      _cookieName = cookieName\n      break\n    } else if (\n      rawCookieNames[rawCookieNumber] == encodeURIComponent(cookieName)\n    ) {\n      _cookieName = encodeURIComponent(cookieName)\n      break\n    } else if (\n      rawCookieNames[rawCookieNumber] ==\n      encodeURIComponentWithASPHack(cookieName)\n    ) {\n      _cookieName = encodeURIComponentWithASPHack(cookieName)\n      break\n    }\n  }\n\n  let cookie = _cookieName + '=deleted; '\n  if (path) {\n    cookie += 'path=' + path + '; '\n  }\n  if (domain) {\n    cookie += 'domain=' + domain + '; '\n  }\n  cookie += 'expires=' + new Date(expireDateInMilliseconds).toGMTString()\n  //LOG.debug(\"Setting cookie to: \" + cookie);\n  doc.cookie = cookie\n}\n\n/** Try to delete cookie, return false if it didn't work */\nBrowserBot.prototype._maybeDeleteCookie = function(\n  cookieName,\n  domain,\n  path,\n  doc\n) {\n  this.deleteCookie(cookieName, domain, path, doc)\n  return !this.getCookieByName(cookieName, doc)\n}\n\nBrowserBot.prototype._recursivelyDeleteCookieDomains = function(\n  cookieName,\n  domain,\n  path,\n  doc\n) {\n  let deleted = this._maybeDeleteCookie(cookieName, domain, path, doc)\n  if (deleted) return true\n  let dotIndex = domain.indexOf('.')\n  if (dotIndex == 0) {\n    return this._recursivelyDeleteCookieDomains(\n      cookieName,\n      domain.substring(1),\n      path,\n      doc\n    )\n  } else if (dotIndex != -1) {\n    return this._recursivelyDeleteCookieDomains(\n      cookieName,\n      domain.substring(dotIndex),\n      path,\n      doc\n    )\n  } else {\n    // No more dots; try just not passing in a domain at all\n    return this._maybeDeleteCookie(cookieName, null, path, doc)\n  }\n}\n\nBrowserBot.prototype._recursivelyDeleteCookie = function(\n  cookieName,\n  domain,\n  path,\n  doc\n) {\n  let slashIndex = path.lastIndexOf('/')\n  let finalIndex = path.length - 1\n  if (slashIndex == finalIndex) {\n    slashIndex--\n  }\n  if (slashIndex != -1) {\n    const deleted = this._recursivelyDeleteCookie(\n      cookieName,\n      domain,\n      path.substring(0, slashIndex + 1),\n      doc\n    )\n    if (deleted) return true\n  }\n  return this._recursivelyDeleteCookieDomains(cookieName, domain, path, doc)\n}\n\nBrowserBot.prototype.recursivelyDeleteCookie = function(\n  cookieName,\n  domain,\n  path,\n  win\n) {\n  if (!win) win = this.getCurrentWindow()\n  let doc = win.document\n  if (!domain) {\n    domain = doc.domain\n  }\n  if (!path) {\n    path = win.location.pathname\n  }\n  let deleted = this._recursivelyDeleteCookie(\n    cookieName,\n    '.' + domain,\n    path,\n    doc\n  )\n  if (deleted) return\n  // Finally try a null path (Try it last because it's uncommon)\n  deleted = this._recursivelyDeleteCookieDomains(\n    cookieName,\n    '.' + domain,\n    null,\n    doc\n  )\n  if (deleted) return\n  throw new SeleniumError(\"Couldn't delete cookie \" + cookieName)\n}\n\n/*\n * Finds an element on the current page, using various lookup protocols\n */\nBrowserBot.prototype.findElementOrNull = function(locator, win) {\n  locator = parse_locator(locator)\n\n  if (win == null) {\n    win = this.getCurrentWindow()\n  }\n  let element = bot.locators.findElement(\n    { [locator.type]: locator.string },\n    win.document\n  )\n  element = core.firefox.unwrap(element)\n\n  // Element was not found by any locator function.\n  return element\n}\n\nBrowserBot.prototype.findElement = function(locator, win) {\n  let element = this.findElementOrNull(locator, win)\n  if (element == null)\n    throw new SeleniumError('Element ' + locator + ' not found')\n  return core.firefox.unwrap(element)\n}\n\n/**\n * Finds a list of elements using the same mechanism as webdriver.\n *\n * @param {string} how The finding mechanism to use.\n * @param {string} using The selector to use.\n * @param {Document|Element} root The root of the search path.\n */\nBrowserBot.prototype.findElementsLikeWebDriver = function(how, using, root) {\n  let by = {}\n  by[how] = using\n\n  let all = bot.locators.findElements(by, root)\n  let toReturn = ''\n\n  for (let i = 0; i < all.length - 1; i++) {\n    toReturn += bot.inject.cache.addElement(core.firefox.unwrap(all[i])) + ','\n  }\n  if (all[all.length - 1]) {\n    toReturn += bot.inject.cache.addElement(\n      core.firefox.unwrap(all[all.length - 1])\n    )\n  }\n\n  return toReturn\n}\n\n/**\n * In non-IE browsers, getElementById() does not search by name.  Instead, we\n * we search separately by id and name.\n */\nBrowserBot.prototype.locateElementByIdentifier = function(\n  identifier,\n  inDocument,\n  inWindow\n) {\n  // HBC - use \"this\" instead of \"BrowserBot.prototype\"; otherwise we lose\n  // the non-prototype fields of the object!\n  return (\n    this.locateElementById(identifier, inDocument, inWindow) ||\n    BrowserBot.prototype.locateElementByName(\n      identifier,\n      inDocument,\n      inWindow\n    ) ||\n    null\n  )\n}\n\n/**\n * Find the element with id - can't rely on getElementById, coz it returns by name as well in IE..\n */\nBrowserBot.prototype.locateElementById = function(identifier, inDocument) {\n  let element = inDocument.getElementById(identifier)\n  if (element && element.getAttribute('id') === identifier) {\n    return element\n  } else if (browserVersion.isIE || browserVersion.isOpera) {\n    // SEL-484\n    let elements = inDocument.getElementsByTagName('*')\n\n    for (let i = 0, n = elements.length; i < n; ++i) {\n      element = elements[i]\n\n      if (element.tagName.toLowerCase() == 'form') {\n        if (element.attributes['id'].nodeValue == identifier) {\n          return element\n        }\n      } else if (element.getAttribute('id') == identifier) {\n        return element\n      }\n    }\n\n    return null\n  } else {\n    return null\n  }\n}\n\n/**\n * Find an element by name, refined by (optional) element-filter\n * expressions.\n */\nBrowserBot.prototype.locateElementByName = function(locator, document) {\n  let elements = document.getElementsByTagName('*')\n  //UnnamedWinIFrameExt, Jie-Lin You, SELAB, CSIE, NCKU, 2016/11/23\n  /*\n        var filters = locator.split(' ');\n        filters[0] = 'name=' + filters[0];\n\n        while (filters.length) {\n            var filter = filters.shift();\n            elements = this.selectElements(filter, elements, 'value');\n        }\n        */\n  let filter = 'name=' + locator\n  elements = this.selectElements(filter, elements, 'value')\n\n  if (elements.length > 0) {\n    return elements[0]\n  }\n  return null\n}\n\n/**\n * Finds an element using by evaluating the specfied string.\n */\nBrowserBot.prototype.locateElementByDomTraversal = function(domTraversal) {\n  let element = null\n\n  //Evalinsandbox\n  // eslint-disable-next-line no-undef\n  let mySandbox = new Components.utils.Sandbox(this.currentWindow.location.href)\n  mySandbox.domTraversal = domTraversal\n  try {\n    // eslint-disable-next-line no-undef\n    element = Components.utils.evalInSandbox(domTraversal, mySandbox)\n    //element = eval(domTraversal);\n  } catch (e) {\n    return null\n  }\n\n  if (!element) {\n    return null\n  }\n\n  return element\n}\n\nBrowserBot.prototype.locateElementByDomTraversal.prefix = 'dom'\n\nBrowserBot.prototype.locateElementByStoredReference = function(locator) {\n  try {\n    return core.locators.findElement('stored=' + locator)\n  } catch (e) {\n    return null\n  }\n}\nBrowserBot.prototype.locateElementByStoredReference.prefix = 'stored'\n\nBrowserBot.prototype.locateElementByWebDriver = function(locator) {\n  try {\n    return core.locators.findElement('webdriver=' + locator)\n  } catch (e) {\n    return null\n  }\n}\nBrowserBot.prototype.locateElementByWebDriver.prefix = 'webdriver'\n\n/**\n * Finds an element identified by the xpath expression. Expressions _must_\n * begin with \"//\".\n */\nBrowserBot.prototype.locateElementByXPath = function(xpath, inDocument) {\n  return this.xpathEvaluator.selectSingleNode(\n    inDocument,\n    xpath,\n    null,\n    inDocument.createNSResolver\n      ? inDocument.createNSResolver(inDocument.documentElement)\n      : this._namespaceResolver\n  )\n}\n\n/**\n * Find many elements using xpath.\n *\n * @param {string} xpath XPath expression to search for.\n * @param {=Document} inDocument The document to search in.\n * @param {=Window} inWindow The window the document is in.\n */\nBrowserBot.prototype.locateElementsByXPath = function(xpath, inDocument) {\n  return this.xpathEvaluator.selectNodes(\n    inDocument,\n    xpath,\n    null,\n    inDocument.createNSResolver\n      ? inDocument.createNSResolver(inDocument.documentElement)\n      : this._namespaceResolver\n  )\n}\n\nBrowserBot.prototype._namespaceResolver = function(prefix) {\n  if (prefix == 'html' || prefix == 'xhtml' || prefix == 'x') {\n    return 'http://www.w3.org/1999/xhtml'\n  } else if (prefix == 'mathml') {\n    return 'http://www.w3.org/1998/Math/MathML'\n  } else if (prefix == 'svg') {\n    return 'http://www.w3.org/2000/svg'\n  } else {\n    throw new Error('Unknown namespace: ' + prefix + '.')\n  }\n}\n\n/**\n * Returns the number of xpath results.\n */\nBrowserBot.prototype.evaluateXPathCount = function(selector, inDocument) {\n  let locator = parse_locator(selector)\n  if (locator.type == 'xpath' || locator.type == 'implicit') {\n    return bot.locators.findElements({ xpath: locator.string }, inDocument)\n      .length\n  } else {\n    //LOG.error(\"Locator does not use XPath strategy: \" + selector);\n    return 0\n  }\n}\n\n/**\n * Returns the number of css results.\n */\nBrowserBot.prototype.evaluateCssCount = function(selector, inDocument) {\n  let locator = parse_locator(selector)\n  if (locator.type == 'css' || locator.type == 'implicit') {\n    return bot.locators.findElements({ css: locator.string }, inDocument).length\n  } else {\n    //LOG.error(\"Locator does not use CSS strategy: \" + selector);\n    return 0\n  }\n}\n\n/**\n * Finds a link element with text matching the expression supplied. Expressions must\n * begin with \"link:\".\n */\nBrowserBot.prototype.locateElementByLinkText = function(linkText, inDocument) {\n  let links = inDocument.getElementsByTagName('a')\n  for (let i = 0; i < links.length; i++) {\n    let element = links[i]\n    if (PatternMatcher.matches(linkText, bot.dom.getVisibleText(element))) {\n      return element\n    }\n  }\n  return null\n}\n\nBrowserBot.prototype.locateElementByLinkText.prefix = 'link'\n\n/**\n * Returns an attribute based on an attribute locator. This is made up of an element locator\n * suffixed with @attribute-name.\n */\nBrowserBot.prototype.findAttribute = function(locator) {\n  // Split into locator + attributeName\n  let attributePos = locator.lastIndexOf('@')\n  let elementLocator = locator.slice(0, attributePos)\n  let attributeName = locator.slice(attributePos + 1)\n\n  // Find the element.\n  let element = this.findElement(elementLocator)\n  let attributeValue = bot.dom.getAttribute(element, attributeName)\n  return goog.isDefAndNotNull(attributeValue) ? attributeValue.toString() : null\n}\n\n/*\n * Select the specified option and trigger the relevant events of the element.\n */\nBrowserBot.prototype.selectOption = function(element, optionToSelect) {\n  bot.events.fire(element, bot.events.EventType.FOCUS)\n  let changed = false\n  for (let i = 0; i < element.options.length; i++) {\n    let option = element.options[i]\n    if (option.selected && option != optionToSelect) {\n      option.selected = false\n      changed = true\n    } else if (!option.selected && option == optionToSelect) {\n      option.selected = true\n      changed = true\n    }\n  }\n\n  if (changed) {\n    bot.events.fire(element, bot.events.EventType.CHANGE)\n  }\n}\n\n/*\n * Select the specified option and trigger the relevant events of the element.\n */\nBrowserBot.prototype.addSelection = function(element, option) {\n  this.checkMultiselect(element)\n  bot.events.fire(element, bot.events.EventType.FOCUS)\n  if (!option.selected) {\n    option.selected = true\n    bot.events.fire(element, bot.events.EventType.CHANGE)\n  }\n}\n\n/*\n * Select the specified option and trigger the relevant events of the element.\n */\nBrowserBot.prototype.removeSelection = function(element, option) {\n  this.checkMultiselect(element)\n  bot.events.fire(element, bot.events.EventType.FOCUS)\n  if (option.selected) {\n    option.selected = false\n    bot.events.fire(element, bot.events.EventType.CHANGE)\n  }\n}\n\nBrowserBot.prototype.checkMultiselect = function(element) {\n  if (!element.multiple) {\n    throw new SeleniumError('Not a multi-select')\n  }\n}\n\nBrowserBot.prototype.replaceText = function(element, stringValue) {\n  bot.events.fire(element, bot.events.EventType.FOCUS)\n  bot.events.fire(element, bot.events.EventType.SELECT)\n  let maxLengthAttr = element.getAttribute('maxLength')\n  let actualValue = stringValue\n  if (maxLengthAttr != null) {\n    let maxLength = parseInt(maxLengthAttr)\n    if (stringValue.length > maxLength) {\n      actualValue = stringValue.substr(0, maxLength)\n    }\n  }\n\n  if (getTagName(element) == 'body') {\n    if (element.ownerDocument && element.ownerDocument.designMode) {\n      let designMode = new String(\n        element.ownerDocument.designMode\n      ).toLowerCase()\n      if (designMode == 'on') {\n        // this must be a rich text control!\n        element.innerHTML = actualValue\n      }\n    }\n  } else {\n    element.value = actualValue\n  }\n  // DGF this used to be skipped in chrome URLs, but no longer.  Is xpcnativewrappers to blame?\n  try {\n    bot.events.fire(element, bot.events.EventType.CHANGE)\n  } catch (e) {} // eslint-disable-line no-empty\n}\n\nBrowserBot.prototype.clickElement = function(element, clientX, clientY) {\n  this._fireEventOnElement('click', element, clientX, clientY)\n}\n\nBrowserBot.prototype.doubleClickElement = function(element, clientX, clientY) {\n  this._fireEventOnElement('dblclick', element, clientX, clientY)\n}\n\n// The contextmenu event is fired when the user right-clicks to open the context menu\nBrowserBot.prototype.contextMenuOnElement = function(\n  element,\n  clientX,\n  clientY\n) {\n  this._fireEventOnElement('contextmenu', element, clientX, clientY)\n}\n\n//UnnamedWinIFrameExt, Jie-Lin You, SELAB, CSIE, NCKU, 2016/05/26\n//UnnamedWinIFrameExt, Jie-Lin You, SELAB, CSIE, NCKU, 2016/11/17\nBrowserBot.prototype._modifyElementTarget = function(e) {\n  let element = this.findClickableElement(e) || e\n  if (element.target) {\n    if (element.target == '_blank' || /^selenium_blank/.test(element.target)) {\n      let tagName = getTagName(element)\n      if (tagName == 'a' || tagName == 'form') {\n        const newTarget = 'win_ser_' + this.count\n        this.count += 1\n        this.browserbot.openWindow('', newTarget)\n        element.target = newTarget\n      }\n    } else {\n      const newTarget = element.target\n      this.browserbot.openWindow('', newTarget)\n      element.target = newTarget\n    }\n  }\n}\n\n//UnnamedWinIFrameExt, Jie-Lin You, SELAB, CSIE, NCKU, 2016/11/17\nBrowserBot.prototype.findClickableElement = function(e) {\n  if (!e.tagName) return null\n  let tagName = e.tagName.toLowerCase()\n  let type = e.type\n  if (\n    e.hasAttribute('onclick') ||\n    e.hasAttribute('href') ||\n    e.hasAttribute('url') ||\n    tagName == 'button' ||\n    (tagName == 'input' &&\n      (type == 'submit' ||\n        type == 'button' ||\n        type == 'image' ||\n        type == 'radio' ||\n        type == 'checkbox' ||\n        type == 'reset'))\n  ) {\n    return e\n  } else {\n    if (e.parentNode != null) {\n      return this.findClickableElement(e.parentNode)\n    } else {\n      return null\n    }\n  }\n}\n\nBrowserBot.prototype._handleClickingImagesInsideLinks = function(\n  targetWindow,\n  element\n) {\n  let itrElement = element\n  while (itrElement != null) {\n    if (itrElement.href) {\n      targetWindow.location.href = itrElement.href\n      break\n    }\n    itrElement = itrElement.parentNode\n  }\n}\n\nBrowserBot.prototype._getTargetWindow = function(element) {\n  let targetWindow = element.ownerDocument.defaultView\n  if (element.target) {\n    targetWindow = this._getFrameFromGlobal(element.target)\n  }\n  return targetWindow\n}\n\nBrowserBot.prototype._getFrameFromGlobal = function(target) {\n  if (target == '_self') {\n    return this.getCurrentWindow()\n  }\n  if (target == '_top') {\n    return this.topFrame\n  } else if (target == '_parent') {\n    return this.getCurrentWindow().parent\n  } else if (target == '_blank') {\n    // TODO should this set cleverer window defaults?\n    return this.getCurrentWindow().open('', '_blank')\n  }\n  let frameElement = this.findElementBy(\n    'implicit',\n    target,\n    this.topFrame.document,\n    this.topFrame\n  )\n  if (frameElement) {\n    return frameElement.contentWindow\n  }\n  let win = this.getWindowByName(target)\n  if (win) return win\n  return this.getCurrentWindow().open('', target)\n}\n\nBrowserBot.prototype.bodyText = function() {\n  if (!this.getDocument().body) {\n    throw new SeleniumError(\n      \"Couldn't access document.body.  Is this HTML page fully loaded?\"\n    )\n  }\n  return bot.dom.getVisibleText(this.getDocument().body)\n}\n\nBrowserBot.prototype.getAllButtons = function() {\n  let elements = this.getDocument().getElementsByTagName('input')\n  let result = []\n\n  for (let i = 0; i < elements.length; i++) {\n    if (\n      elements[i].type == 'button' ||\n      elements[i].type == 'submit' ||\n      elements[i].type == 'reset'\n    ) {\n      result.push(elements[i].id)\n    }\n  }\n\n  return result\n}\n\nBrowserBot.prototype.getAllFields = function() {\n  let elements = this.getDocument().getElementsByTagName('input')\n  let result = []\n\n  for (let i = 0; i < elements.length; i++) {\n    if (elements[i].type == 'text') {\n      result.push(elements[i].id)\n    }\n  }\n\n  return result\n}\n\nBrowserBot.prototype.getAllLinks = function() {\n  let elements = this.getDocument().getElementsByTagName('a')\n  let result = []\n\n  for (let i = 0; i < elements.length; i++) {\n    result.push(elements[i].id)\n  }\n\n  return result\n}\n\nfunction isDefined(value) {\n  return typeof value != undefined\n}\n\nBrowserBot.prototype.goBack = function() {\n  this.getCurrentWindow().history.back()\n}\n\nBrowserBot.prototype.goForward = function() {\n  this.getCurrentWindow().history.forward()\n}\n\nBrowserBot.prototype.close = function() {\n  if (browserVersion.isIE) {\n    // fix \"do you want to close this window\" warning in IE\n    // You can only close windows that you have opened.\n    // So, let's \"open\" it.\n    try {\n      this.topFrame.name = new Date().getTime()\n      window.open('', this.topFrame.name, '')\n      this.topFrame.close()\n      return\n    } catch (e) {} // eslint-disable-line no-empty\n  }\n  if (\n    browserVersion.isChrome ||\n    browserVersion.isSafari ||\n    browserVersion.isOpera\n  ) {\n    this.topFrame.close()\n  } else {\n    this.getCurrentWindow().eval('window.top.close();')\n  }\n}\n\nBrowserBot.prototype.refresh = function() {\n  this.getCurrentWindow().location.reload(true)\n}\n\n/**\n * Refine a list of elements using a filter.\n */\nBrowserBot.prototype.selectElementsBy = function(filterType, filter, elements) {\n  let filterFunction = BrowserBot.filterFunctions[filterType]\n  if (!filterFunction) {\n    throw new SeleniumError(\n      \"Unrecognised element-filter type: '\" + filterType + \"'\"\n    )\n  }\n\n  return filterFunction(filter, elements)\n}\n\nBrowserBot.filterFunctions = {}\n\nBrowserBot.filterFunctions.name = function(name, elements) {\n  let selectedElements = []\n  for (let i = 0; i < elements.length; i++) {\n    if (elements[i].name === name) {\n      selectedElements.push(elements[i])\n    }\n  }\n  return selectedElements\n}\n\nBrowserBot.filterFunctions.value = function(value, elements) {\n  let selectedElements = []\n  for (let i = 0; i < elements.length; i++) {\n    if (elements[i].value === value) {\n      selectedElements.push(elements[i])\n    }\n  }\n  return selectedElements\n}\n\nBrowserBot.filterFunctions.index = function(index, elements) {\n  index = Number(index)\n  if (isNaN(index) || index < 0) {\n    throw new SeleniumError('Illegal Index: ' + index)\n  }\n  if (elements.length <= index) {\n    throw new SeleniumError('Index out of range: ' + index)\n  }\n  return [elements[index]]\n}\n\nBrowserBot.prototype.selectElements = function(\n  filterExpr,\n  elements,\n  defaultFilterType\n) {\n  let filterType = defaultFilterType || 'value'\n\n  // If there is a filter prefix, use the specified strategy\n  let result = filterExpr.match(/^([A-Za-z]+)=(.+)/)\n  if (result) {\n    filterType = result[1].toLowerCase()\n    filterExpr = result[2]\n  }\n\n  return this.selectElementsBy(filterType, filterExpr, elements)\n}\n\n/**\n * Find an element by css selector\n */\nBrowserBot.prototype.locateElementByCss = function(locator, document) {\n  let elements = bot.locators.findElements({ css: locator }, document)\n  if (elements.length != 0) return elements[0]\n  return null\n}\n\nBrowserBot.prototype.locateRandomElementByCss = function(locator, document) {\n  let elements = bot.locators.findElements({ css: locator }, document)\n  if (elements.length != 0)\n    return elements[(Math.random() * (elements.length - 0 + 1)) << 0]\n  return null\n}\n\n/* prompt */\nBrowserBot.prototype.cancelNextPrompt = function() {\n  return this.setNextPromptResult(null)\n}\n\nBrowserBot.prototype.setNextPromptResult = function(result) {\n  this.promptResponse = false\n  let self = this\n\n  window.postMessage(\n    {\n      direction: 'from-content-script',\n      command: 'setNextPromptResult',\n      target: result,\n    },\n    '*'\n  )\n\n  let response = new Promise(function(resolve, reject) {\n    let count = 0\n    let interval = setInterval(function() {\n      if (!self.promptResponse) {\n        count++\n        if (count > 60) {\n          reject('No response')\n          clearInterval(interval)\n        }\n      } else {\n        resolve()\n        self.promptResponse = false\n        clearInterval(interval)\n      }\n    }, 500)\n  })\n  return response\n}\n\nBrowserBot.prototype.getPromptMessage = function() {\n  this.promptResponse = false\n  this.promptMessage = null\n  let self = this\n  window.postMessage(\n    {\n      direction: 'from-content-script',\n      command: 'getPromptMessage',\n    },\n    '*'\n  )\n  let response = new Promise(function(resolve, reject) {\n    let count = 0\n    let interval = setInterval(function() {\n      if (!self.promptResponse) {\n        count++\n        if (count > 60) {\n          reject('No response')\n          clearInterval(interval)\n        }\n      } else {\n        resolve(self.promptMessage)\n        self.promptResponse = false\n        self.promptMessage = null\n        clearInterval(interval)\n      }\n    }, 500)\n  })\n  return response\n}\n\n// confirm\nBrowserBot.prototype.setNextConfirmationResult = function(result) {\n  this.confirmationResponse = false\n  let self = this\n  window.postMessage(\n    {\n      direction: 'from-content-script',\n      command: 'setNextConfirmationResult',\n      target: result,\n    },\n    '*'\n  )\n  let response = new Promise(function(resolve, reject) {\n    let count = 0\n    let interval = setInterval(function() {\n      if (!self.confirmationResponse) {\n        count++\n        if (count > 60) {\n          reject('No response')\n          clearInterval(interval)\n        }\n      } else {\n        resolve()\n        self.confirmationResponse = false\n        clearInterval(interval)\n      }\n    }, 500)\n  })\n  return response\n}\n\nBrowserBot.prototype.getConfirmationMessage = function() {\n  this.confirmationResponse = false\n  this.confirmationMessage = null\n  let self = this\n  window.postMessage(\n    {\n      direction: 'from-content-script',\n      command: 'getConfirmationMessage',\n    },\n    '*'\n  )\n  let response = new Promise(function(resolve, reject) {\n    let count = 0\n    let interval = setInterval(function() {\n      if (!self.confirmationResponse) {\n        count++\n        if (count > 60) {\n          reject('No response')\n          clearInterval(interval)\n        }\n      } else {\n        resolve(self.confirmationMessage)\n        self.confirmationResponse = false\n        self.confirmationMessage = null\n        clearInterval(interval)\n      }\n    }, 500)\n  })\n  return response\n}\n\nBrowserBot.prototype.getAlertMessage = function() {\n  let self = this\n  let response = new Promise(function(resolve, reject) {\n    let count = 0\n    let interval = setInterval(function() {\n      if (!self.alertResponse) {\n        count++\n        if (count > 60) {\n          reject('No response!!!!')\n          clearInterval(interval)\n        }\n      } else {\n        resolve(self.alertMessage)\n        self.alertResponse = false\n        self.alertMessage = null\n        clearInterval(interval)\n      }\n    }, 500)\n  })\n  return response\n}\n\n/*****************************************************************/\n/* BROWSER-SPECIFIC FUNCTIONS ONLY AFTER THIS LINE */\n\nexport class MozillaBrowserBot extends BrowserBot {\n  constructor(frame) {\n    super(frame)\n  }\n}\n\nexport class KonquerorBrowserBot extends BrowserBot {\n  constructor(frame) {\n    super(frame)\n  }\n}\n\nKonquerorBrowserBot.prototype.setIFrameLocation = function(iframe, location) {\n  // Window doesn't fire onload event when setting src to the current value,\n  // so we set it to blank first.\n  iframe.src = 'about:blank'\n  iframe.src = location\n}\n\nKonquerorBrowserBot.prototype._isSameDocument = function(\n  originalDocument,\n  currentDocument\n) {\n  // under Konqueror, there may be this case:\n  // originalDocument and currentDocument are different objects\n  // while their location are same.\n  if (originalDocument) {\n    return originalDocument.location == currentDocument.location\n  } else {\n    return originalDocument === currentDocument\n  }\n}\n\nexport class SafariBrowserBot extends BrowserBot {\n  constructor(frame) {\n    super(frame)\n  }\n}\n\nSafariBrowserBot.prototype.setIFrameLocation =\n  KonquerorBrowserBot.prototype.setIFrameLocation\n\nexport class OperaBrowserBot extends BrowserBot {\n  constructor(frame) {\n    super(frame)\n  }\n}\n\nOperaBrowserBot.prototype.setIFrameLocation = function(iframe, location) {\n  if (iframe.src == location) {\n    iframe.src = location + '?reload'\n  } else {\n    iframe.src = location\n  }\n}\n\nexport class IEBrowserBot extends BrowserBot {\n  constructor(frame) {\n    super(frame)\n  }\n}\n\nIEBrowserBot.prototype._handleClosedSubFrame = function(\n  testWindow,\n  doNotModify\n) {\n  if (this.proxyInjectionMode) {\n    return testWindow\n  }\n\n  try {\n    testWindow.location.href\n    this.permDenied = 0\n  } catch (e) {\n    this.permDenied++\n  }\n  if (this._windowClosed(testWindow) || this.permDenied > 4) {\n    if (this.isSubFrameSelected) {\n      //LOG.warn(\"Current subframe appears to have closed; selecting top frame\");\n      this.selectFrame('relative=top')\n      return this.getCurrentWindow(doNotModify)\n    } else {\n      let closedError = new SeleniumError('Current window or frame is closed!')\n      closedError.windowClosed = true\n      throw closedError\n    }\n  }\n  return testWindow\n}\n\nIEBrowserBot.prototype.modifyWindowToRecordPopUpDialogs = function(\n  windowToModify,\n  browserBot\n) {\n  BrowserBot.prototype.modifyWindowToRecordPopUpDialogs(\n    windowToModify,\n    browserBot\n  )\n\n  // we will call the previous version of this method from within our own interception\n  let oldShowModalDialog = windowToModify.showModalDialog\n\n  windowToModify.showModalDialog = function(url, args, features) {\n    // Get relative directory to where TestRunner.html lives\n    // A risky assumption is that the user's TestRunner is named TestRunner.html\n    let doc_location = document.location.toString()\n    let end_of_base_ref = doc_location.indexOf('TestRunner.html')\n    let base_ref = doc_location.substring(0, end_of_base_ref)\n    let runInterval = ''\n\n    // Only set run interval if options is defined\n    if (typeof window.runOptions != 'undefined') {\n      runInterval = '&runInterval=' + runOptions.runInterval // eslint-disable-line no-undef\n    }\n\n    let testRunnerURL =\n      'TestRunner.html?auto=true&singletest=' +\n      escape(browserBot.modalDialogTest) +\n      '&autoURL=' +\n      escape(url) +\n      runInterval\n    let fullURL = base_ref + testRunnerURL\n    browserBot.modalDialogTest = null\n\n    // If using proxy injection mode\n    if (this.proxyInjectionMode) {\n      fullURL = url\n    }\n    let returnValue = oldShowModalDialog(fullURL, args, features)\n    return returnValue\n  }\n}\n\nIEBrowserBot.prototype.modifySeparateTestWindowToDetectPageLoads = function(\n  windowObject\n) {\n  this.pageUnloading = false\n  let self = this\n  let pageUnloadDetector = function() {\n    self.pageUnloading = true\n  }\n  if (windowObject.addEventListener) {\n    windowObject.addEventListener('beforeunload', pageUnloadDetector, true)\n  } else {\n    windowObject.attachEvent('onbeforeunload', pageUnloadDetector)\n  }\n  BrowserBot.prototype.modifySeparateTestWindowToDetectPageLoads.call(\n    this,\n    windowObject\n  )\n}\n\nIEBrowserBot.prototype.pollForLoad = function(\n  loadFunction,\n  windowObject,\n  originalDocument,\n  originalLocation,\n  originalHref,\n  marker\n) {\n  //LOG.debug(\"IEBrowserBot.pollForLoad: \" + marker);\n  if (!this.permDeniedCount[marker]) this.permDeniedCount[marker] = 0\n  BrowserBot.prototype.pollForLoad.call(\n    this,\n    loadFunction,\n    windowObject,\n    originalDocument,\n    originalLocation,\n    originalHref,\n    marker\n  )\n  if (this.pageLoadError) {\n    if (this.pageUnloading) {\n      //LOG.debug(\"pollForLoad UNLOADING (\" + marker + \"): caught exception while firing events on unloading page: \" + this.pageLoadError.message);\n      this.reschedulePoller(\n        loadFunction,\n        windowObject,\n        originalDocument,\n        originalLocation,\n        originalHref,\n        marker\n      )\n      this.pageLoadError = null\n      return\n    } else if (\n      (this.pageLoadError.message == 'Permission denied' ||\n        /^Access is denied/.test(this.pageLoadError.message)) &&\n      this.permDeniedCount[marker]++ < 8\n    ) {\n      if (this.permDeniedCount[marker] > 4) {\n        let canAccessThisWindow\n        let canAccessCurrentlySelectedWindow\n        try {\n          windowObject.location.href\n          canAccessThisWindow = true\n        } catch (e) {} // eslint-disable-line no-empty\n        try {\n          this.getCurrentWindow(true).location.href\n          canAccessCurrentlySelectedWindow = true\n        } catch (e) {} // eslint-disable-line no-empty\n        if (canAccessCurrentlySelectedWindow & !canAccessThisWindow) {\n          //LOG.debug(\"pollForLoad (\" + marker + \") ABORTING: \" + this.pageLoadError.message + \" (\" + this.permDeniedCount[marker] + \"), but the currently selected window is fine\");\n          // returning without rescheduling\n          this.pageLoadError = null\n          return\n        }\n      }\n\n      //LOG.debug(\"pollForLoad (\" + marker + \"): \" + this.pageLoadError.message + \" (\" + this.permDeniedCount[marker] + \"), waiting to see if it goes away\");\n      this.reschedulePoller(\n        loadFunction,\n        windowObject,\n        originalDocument,\n        originalLocation,\n        originalHref,\n        marker\n      )\n      this.pageLoadError = null\n      return\n    }\n    //handy for debugging!\n    //throw this.pageLoadError;\n  }\n}\n\nIEBrowserBot.prototype._windowClosed = function(win) {\n  try {\n    let c = win.closed\n    // frame windows claim to be non-closed when their parents are closed\n    // but you can't access their document objects in that case\n    if (!c) {\n      try {\n        win.document\n      } catch (de) {\n        if (de.message == 'Permission denied') {\n          // the window is probably unloading, which means it's probably not closed yet\n          return false\n        } else if (/^Access is denied/.test(de.message)) {\n          // rare variation on \"Permission denied\"?\n          //LOG.debug(\"IEBrowserBot.windowClosed: got \" + de.message + \" (this.pageUnloading=\" + this.pageUnloading + \"); assuming window is unloading, probably not closed yet\");\n          return false\n        } else {\n          // this is probably one of those frame window situations\n          //LOG.debug(\"IEBrowserBot.windowClosed: couldn't read win.document, assume closed: \" + de.message + \" (this.pageUnloading=\" + this.pageUnloading + \")\");\n          return true\n        }\n      }\n    }\n    if (c == null) {\n      //LOG.debug(\"IEBrowserBot.windowClosed: win.closed was null, assuming closed\");\n      return true\n    }\n    return c\n  } catch (e) {\n    //LOG.debug(\"IEBrowserBot._windowClosed: Got an exception trying to read win.closed; we'll have to take a guess!\");\n\n    if (browserVersion.isHTA) {\n      if (e.message == 'Permission denied') {\n        // the window is probably unloading, which means it's not closed yet\n        return false\n      } else {\n        // there's a good chance that we've lost contact with the window object if it is closed\n        return true\n      }\n    } else {\n      // the window is probably unloading, which means it's not closed yet\n      return false\n    }\n  }\n}\n\n/**\n * In IE, getElementById() also searches by name - this is an optimisation for IE.\n */\nIEBrowserBot.prototype.locateElementByIdentifer = function(\n  identifier,\n  inDocument\n) {\n  return inDocument.getElementById(identifier)\n}\n\nSafariBrowserBot.prototype.modifyWindowToRecordPopUpDialogs = function(\n  windowToModify,\n  browserBot\n) {\n  BrowserBot.prototype.modifyWindowToRecordPopUpDialogs(\n    windowToModify,\n    browserBot\n  )\n\n  let originalOpen = windowToModify.open\n  /*\n   * Safari seems to be broken, so that when we manually trigger the onclick method\n   * of a button/href, any window.open calls aren't resolved relative to the app location.\n   * So here we replace the open() method with one that does resolve the url correctly.\n   */\n  windowToModify.open = function(url, windowName, windowFeatures, replaceFlag) {\n    if (\n      url.startsWith('http://') ||\n      url.startsWith('https://') ||\n      url.startsWith('/')\n    ) {\n      return originalOpen(url, windowName, windowFeatures, replaceFlag)\n    }\n\n    // Reduce the current path to the directory\n    let currentPath = windowToModify.location.pathname || '/'\n    currentPath = currentPath.replace(/\\/[^\\/]*$/, '/') // eslint-disable-line no-useless-escape\n\n    // Remove any leading \"./\" from the new url.\n    url = url.replace(/^\\.\\//, '')\n\n    const newUrl = currentPath + url\n\n    let openedWindow = originalOpen(\n      newUrl,\n      windowName,\n      windowFeatures,\n      replaceFlag\n    )\n    //LOG.debug(\"window.open call intercepted; window ID (which you can use with selectWindow()) is \\\"\" +  windowName + \"\\\"\");\n    if (windowName != null) {\n      openedWindow['seleniumWindowName'] = windowName\n    }\n    return openedWindow\n  }\n}\n\nMozillaBrowserBot.prototype._fireEventOnElement = function(\n  eventType,\n  element,\n  clientX,\n  clientY\n) {\n  let win = this.getCurrentWindow()\n  bot.events.fire(element, bot.events.EventType.FOCUS)\n\n  // Add an event listener that detects if the default action has been prevented.\n  // (This is caused by a javascript onclick handler returning false)\n  // we capture the whole event, rather than the getPreventDefault() state at the time,\n  // because we need to let the entire event bubbling and capturing to go through\n  // before making a decision on whether we should force the href\n  element.addEventListener(eventType, function() {}, false)\n\n  //this._modifyElementTarget(element);\n\n  // Trigger the event.\n  this.browserbot.triggerMouseEvent(element, eventType, true, clientX, clientY)\n\n  if (this._windowClosed(win)) {\n    return\n  }\n\n  // Perform the link action if preventDefault was set.\n  // In chrome URL, the link action is already executed by triggerMouseEvent.\n  //if (!browserVersion.isChrome && savedEvent != null && savedEvent.getPreventDefault && !savedEvent.getPreventDefault()) {\n  /*\n    if (!browserVersion.isChrome && savedEvent != null && savedEvent.defaultPrevented && !savedEvent.defaultPrevented()) {\n        var targetWindow = this.browserbot._getTargetWindow(element);\n        if (element.href) {\n            targetWindow.location.href = element.href;\n        } else {\n            this.browserbot._handleClickingImagesInsideLinks(targetWindow, element);\n        }\n    }\n    */\n}\n\nOperaBrowserBot.prototype._fireEventOnElement = function(\n  eventType,\n  element,\n  clientX,\n  clientY\n) {\n  let win = this.getCurrentWindow()\n  bot.events.fire(element, bot.events.EventType.FOCUS)\n\n  this._modifyElementTarget(element)\n\n  // Trigger the click event.\n  this.browserbot.triggerMouseEvent(element, eventType, true, clientX, clientY)\n\n  if (this._windowClosed(win)) {\n    return\n  }\n}\n\nKonquerorBrowserBot.prototype._fireEventOnElement = function(\n  eventType,\n  element,\n  clientX,\n  clientY\n) {\n  let win = this.getCurrentWindow()\n  bot.events.fire(element, bot.events.EventType.FOCUS)\n\n  this._modifyElementTarget(element)\n\n  if (element[eventType]) {\n    element[eventType]()\n  } else {\n    this.browserbot.triggerMouseEvent(\n      element,\n      eventType,\n      true,\n      clientX,\n      clientY\n    )\n  }\n\n  if (this._windowClosed(win)) {\n    return\n  }\n}\n\nSafariBrowserBot.prototype._fireEventOnElement = function(\n  eventType,\n  element,\n  clientX,\n  clientY\n) {\n  bot.events.fire(element, bot.events.EventType.FOCUS)\n  this._modifyElementTarget(element)\n\n  // For form element it is simple.\n  if (element[eventType]) {\n    element[eventType]()\n  }\n  // For links and other elements, event emulation is required.\n  else {\n    // todo: deal with anchors?\n    this.browserbot.triggerMouseEvent(\n      element,\n      eventType,\n      true,\n      clientX,\n      clientY\n    )\n  }\n}\n\nSafariBrowserBot.prototype.refresh = function() {\n  let win = this.getCurrentWindow()\n  if (win.location.hash) {\n    // DGF Safari refuses to refresh when there's a hash symbol in the URL\n    win.location.hash = ''\n    let actuallyReload = function() {\n      win.location.reload(true)\n    }\n    window.setTimeout(actuallyReload, 1)\n  } else {\n    win.location.reload(true)\n  }\n}\n\nIEBrowserBot.prototype._fireEventOnElement = function(\n  eventType,\n  element,\n  clientX,\n  clientY\n) {\n  let win = this.getCurrentWindow()\n  bot.events.fire(element, bot.events.EventType.FOCUS)\n\n  let wasChecked = element.checked\n\n  // Set a flag that records if the page will unload - this isn't always accurate, because\n  // <a href=\"javascript:alert('foo'):\"> triggers the onbeforeunload event, even thought the page won't unload\n  let pageUnloading = false\n  let pageUnloadDetector = function() {\n    pageUnloading = true\n  }\n  if (win.addEventListener) {\n    win.addEventListener('beforeunload', pageUnloadDetector, true)\n  } else {\n    win.attachEvent('onbeforeunload', pageUnloadDetector)\n  }\n  this._modifyElementTarget(element)\n  if (element[eventType]) {\n    element[eventType]()\n  } else {\n    this.browserbot.triggerMouseEvent(\n      element,\n      eventType,\n      true,\n      clientX,\n      clientY\n    )\n  }\n\n  // If the page is going to unload - still attempt to fire any subsequent events.\n  // However, we can't guarantee that the page won't unload half way through, so we need to handle exceptions.\n  try {\n    if (win.removeEventListener) {\n      win.removeEventListener('onbeforeunload', pageUnloadDetector, true)\n    } else {\n      win.detachEvent('onbeforeunload', pageUnloadDetector)\n    }\n\n    if (this._windowClosed(win)) {\n      return\n    }\n\n    // Onchange event is not triggered automatically in IE.\n    if (isDefined(element.checked) && wasChecked != element.checked) {\n      bot.events.fire(element, bot.events.EventType.CHANGE)\n    }\n  } catch (e) {\n    // If the page is unloading, we may get a \"Permission denied\" or \"Unspecified error\".\n    // Just ignore it, because the document may have unloaded.\n    if (pageUnloading) {\n      //LOG.logHook = function() {\n      //};\n      //LOG.warn(\"Caught exception when firing events on unloading page: \" + e.message);\n      return\n    }\n    throw e\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content/selenium-browserbot.js","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport SeleniumError from './SeleniumError'\n\nexport default function PatternMatcher(pattern) {\n  this.selectStrategy(pattern)\n}\n\nPatternMatcher.prototype = {\n  selectStrategy: function(pattern) {\n    this.pattern = pattern\n    let strategyName = 'glob'\n    // by default\n    if (/^([a-z-]+):(.*)/.test(pattern)) {\n      const possibleNewStrategyName = RegExp.$1\n      const possibleNewPattern = RegExp.$2\n      if (PatternMatcher.strategies[possibleNewStrategyName]) {\n        strategyName = possibleNewStrategyName\n        pattern = possibleNewPattern\n      }\n    }\n    const matchStrategy = PatternMatcher.strategies[strategyName]\n    if (!matchStrategy) {\n      throw new SeleniumError(\n        'cannot find PatternMatcher.strategies.' + strategyName\n      )\n    }\n    this.strategy = matchStrategy\n    this.matcher = new matchStrategy(pattern)\n  },\n\n  matches: function(actual) {\n    return this.matcher.matches(actual + '')\n    // Note: appending an empty string avoids a Konqueror bug\n  },\n}\n\n/**\n * A \"static\" convenience method for easy matching\n */\nPatternMatcher.matches = function(pattern, actual) {\n  return new PatternMatcher(pattern).matches(actual)\n}\n\nPatternMatcher.strategies = {\n  /**\n   * Exact matching, e.g. \"exact:***\"\n   */\n  exact: function(expected) {\n    this.expected = expected\n    this.matches = function(actual) {\n      return actual == this.expected\n    }\n  },\n\n  /**\n   * Match by regular expression, e.g. \"regexp:^[0-9]+$\"\n   */\n  regexp: function(regexpString) {\n    this.regexp = new RegExp(regexpString)\n    this.matches = function(actual) {\n      return this.regexp.test(actual)\n    }\n  },\n\n  regex: function(regexpString) {\n    this.regexp = new RegExp(regexpString)\n    this.matches = function(actual) {\n      return this.regexp.test(actual)\n    }\n  },\n\n  regexpi: function(regexpString) {\n    this.regexp = new RegExp(regexpString, 'i')\n    this.matches = function(actual) {\n      return this.regexp.test(actual)\n    }\n  },\n\n  regexi: function(regexpString) {\n    this.regexp = new RegExp(regexpString, 'i')\n    this.matches = function(actual) {\n      return this.regexp.test(actual)\n    }\n  },\n\n  /**\n   * \"globContains\" (aka \"wildmat\") patterns, e.g. \"glob:one,two,*\",\n   * but don't require a perfect match; instead succeed if actual\n   * contains something that matches globString.\n   * Making this distinction is motivated by a bug in IE6 which\n   * leads to the browser hanging if we implement *TextPresent tests\n   * by just matching against a regular expression beginning and\n   * ending with \".*\".  The globcontains strategy allows us to satisfy\n   * the functional needs of the *TextPresent ops more efficiently\n   * and so avoid running into this IE6 freeze.\n   */\n  globContains: function(globString) {\n    this.regexp = new RegExp(PatternMatcher.regexpFromGlobContains(globString))\n    this.matches = function(actual) {\n      return this.regexp.test(actual)\n    }\n  },\n\n  /**\n   * \"glob\" (aka \"wildmat\") patterns, e.g. \"glob:one,two,*\"\n   */\n  glob: function(globString) {\n    this.regexp = new RegExp(PatternMatcher.regexpFromGlob(globString))\n    this.matches = function(actual) {\n      return this.regexp.test(actual)\n    }\n  },\n}\n\nPatternMatcher.convertGlobMetaCharsToRegexpMetaChars = function(glob) {\n  let re = glob\n  re = re.replace(/([.^$+(){}\\[\\]\\\\|])/g, '\\\\$1') // eslint-disable-line no-useless-escape\n  re = re.replace(/\\?/g, '(.|[\\r\\n])')\n  re = re.replace(/\\*/g, '(.|[\\r\\n])*')\n  return re\n}\n\nPatternMatcher.regexpFromGlobContains = function(globContains) {\n  return PatternMatcher.convertGlobMetaCharsToRegexpMetaChars(globContains)\n}\n\nPatternMatcher.regexpFromGlob = function(glob) {\n  return '^' + PatternMatcher.convertGlobMetaCharsToRegexpMetaChars(glob) + '$'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content/PatternMatcher.js","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n// Modified in tools.js from selenium-IDE\n\nexport function exactMatchPattern(string) {\n  if (\n    string != null &&\n    (string.match(/^\\w*:/) ||\n      string.indexOf('?') >= 0 ||\n      string.indexOf('*') >= 0)\n  ) {\n    return 'exact:' + string\n  } else {\n    return string\n  }\n}\n\nclass TargetSelector {\n  constructor(callback, cleanupCallback) {\n    this.callback = callback\n    this.cleanupCallback = cleanupCallback\n    // This is for XPCOM/XUL addon and can't be used\n    //var wm = Components.classes[\"@mozilla.org/appshell/window-mediator;1\"].getService(Components.interfaces.nsIWindowMediator);\n    //this.win = wm.getMostRecentWindow('navigator:browser').getBrowser().contentWindow;\n\n    // Instead, we simply assign global content window to this.win\n    this.win = window\n    const doc = this.win.document\n    const div = doc.createElement('div')\n    div.setAttribute('style', 'display: none;')\n    doc.body.insertBefore(div, doc.body.firstChild)\n    this.div = div\n    this.e = null\n    this.r = null\n    doc.addEventListener('mousemove', this, true)\n    doc.addEventListener('click', this, true)\n  }\n\n  cleanup() {\n    try {\n      if (this.div) {\n        if (this.div.parentNode) {\n          this.div.parentNode.removeChild(this.div)\n        }\n        this.div = null\n      }\n      if (this.win) {\n        const doc = this.win.document\n        doc.removeEventListener('mousemove', this, true)\n        doc.removeEventListener('click', this, true)\n      }\n    } catch (e) {\n      if (e != \"TypeError: can't access dead object\") {\n        throw e\n      }\n    }\n    this.win = null\n    if (this.cleanupCallback) {\n      this.cleanupCallback()\n    }\n  }\n\n  handleEvent(evt) {\n    switch (evt.type) {\n      case 'mousemove':\n        this.highlight(evt.target.ownerDocument, evt.clientX, evt.clientY)\n        break\n      case 'click':\n        if (evt.button == 0 && this.e && this.callback) {\n          this.callback(this.e, this.win)\n        } //Right click would cancel the select\n        evt.preventDefault()\n        evt.stopPropagation()\n        this.cleanup()\n        break\n    }\n  }\n\n  highlight(doc, x, y) {\n    if (doc) {\n      const e = doc.elementFromPoint(x, y)\n      if (e && e != this.e) {\n        this.highlightElement(e)\n      }\n    }\n  }\n\n  highlightElement(element) {\n    if (element && element != this.e) {\n      this.e = element\n    } else {\n      return\n    }\n    const r = element.getBoundingClientRect()\n    const or = this.r\n    if (r.left >= 0 && r.top >= 0 && r.width > 0 && r.height > 0) {\n      if (\n        or &&\n        r.top == or.top &&\n        r.left == or.left &&\n        r.width == or.width &&\n        r.height == or.height\n      ) {\n        return\n      }\n      this.r = r\n      const style =\n        'pointer-events: none; position: absolute; background-color: rgb(78, 171, 230); opacity: 0.4; border: 1px solid #0e0e0e; z-index: 100;'\n      const pos = `top:${r.top + this.win.scrollY}px; left:${r.left +\n        this.win.scrollX}px; width:${r.width}px; height:${r.height}px;`\n      this.div.setAttribute('style', style + pos)\n    } else if (or) {\n      this.div.setAttribute('style', 'display: none;')\n    }\n  }\n}\n\nexport default TargetSelector\n\n\n\n// WEBPACK FOOTER //\n// ./content/targetSelector.js","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst coords = {\n  startX: 0,\n  startY: 0,\n  endX: 0,\n  endY: 0,\n}\n\nconst mouseOffset = {\n  x: 0,\n  y: 0,\n}\n\nconst STATES = {\n  create: 1,\n  update: 2,\n  resize: 3,\n}\n\nlet state = STATES.create\nlet canvasExists = false\n\nexport function editRegion(rect, cb) {\n  if (canvasExists) {\n    return cb(false)\n  }\n  const container = document.createElement('div')\n  container.id = 'selenium-container'\n  const canvas = document.createElement('div')\n  canvas.id = 'selenium-canvas'\n  const region = createRegion()\n  setStyle(canvas, region)\n  setEvents(container)\n  const buttonContainer = createButtons(cb)\n  buttonContainer.style.zIndex = '10002'\n  if (rect) {\n    region.style.left = `${rect.x}px`\n    region.style.top = `${rect.y}px`\n    region.style.width = `${rect.width}px`\n    region.style.height = `${rect.height}px`\n  }\n  container.appendChild(buttonContainer)\n  container.appendChild(canvas)\n  container.appendChild(region)\n  document.body.appendChild(container)\n  canvasExists = true\n}\n\nexport function removeRegion() {\n  if (canvasExists) {\n    document.body.removeChild(document.getElementById('selenium-container'))\n  }\n  canvasExists = false\n}\n\nfunction setStyle(canvas, region) {\n  canvas.style.position = 'fixed'\n  canvas.style.top = 0\n  canvas.style.bottom = 0\n  canvas.style.right = 0\n  canvas.style.left = 0\n  canvas.style.zIndex = '10000'\n  canvas.style.cursor = 'crosshair'\n\n  region.style.position = 'absolute'\n  region.style.zIndex = '10001'\n  region.style.backgroundColor = 'rgb(78, 171, 230)'\n  region.style.opacity = '0.4'\n  region.style.border = '1px solid #0e0e0e'\n}\n\nfunction setEvents(container) {\n  container.addEventListener('mousedown', mousedown)\n  container.addEventListener('mouseup', mouseup)\n}\n\nfunction mousedown(e) {\n  const container = document.getElementById('selenium-container')\n  const canvas = document.getElementById('selenium-canvas')\n  const region = document.getElementById('selenium-region')\n  e.stopPropagation()\n  if (e.target.tagName === 'BUTTON') return\n  if (e.target === canvas) {\n    updateRegion(e.pageX, e.pageY, e.pageX, e.pageY)\n    state = STATES.create\n    region.style.cursor = 'crosshair'\n  } else if (e.target === region) {\n    state = STATES.update\n    mouseOffset.x = e.pageX\n    mouseOffset.y = e.pageY\n    region.style.cursor = 'move'\n  } else if (e.target.parentElement === region) {\n    state = STATES.resize\n  }\n  container.addEventListener('mousemove', mousemove)\n}\n\nfunction mousemove(e) {\n  e.stopPropagation()\n  if (e.target.tagName === 'BUTTON') return\n  if (state === STATES.create || state === STATES.resize) {\n    updateRegion(undefined, undefined, e.pageX, e.pageY)\n  } else if (state === STATES.update) {\n    moveRegion(e.pageX, e.pageY)\n  }\n}\n\nfunction mouseup(e) {\n  const container = document.getElementById('selenium-container')\n  const canvas = document.getElementById('selenium-canvas')\n  const region = document.getElementById('selenium-region')\n  e.stopPropagation()\n  region.style.cursor = 'move'\n  canvas.style.cursor = 'crosshair'\n  container.removeEventListener('mousemove', mousemove)\n  showButtons()\n}\n\nfunction calculateRectFromCoords(coords) {\n  return calculateRect(\n    { x: coords.startX, y: coords.startY },\n    { x: coords.endX, y: coords.endY }\n  )\n}\n\nfunction calculateRect(p1, p2) {\n  return {\n    left: Math.min(p1.x, p2.x),\n    top: Math.min(p1.y, p2.y),\n    width: Math.abs(p1.x - p2.x),\n    height: Math.abs(p1.y - p2.y),\n  }\n}\n\nfunction updateRegion(startX, startY, endX, endY) {\n  hideButtons()\n  const region = document.getElementById('selenium-region')\n  if (startX) {\n    coords.startX = startX\n  }\n  if (startY) {\n    coords.startY = startY\n  }\n  if (endX) {\n    coords.endX = endX\n  }\n  if (endY) {\n    coords.endY = endY\n  }\n  const rect = calculateRectFromCoords(coords)\n  region.style.left = `${rect.left}px`\n  region.style.top = `${rect.top}px`\n  region.style.width = `${rect.width}px`\n  region.style.height = `${rect.height}px`\n}\n\nfunction moveRegion(mouseX, mouseY) {\n  let dx = mouseOffset.x - mouseX\n  let dy = mouseOffset.y - mouseY\n  mouseOffset.x = mouseX\n  mouseOffset.y = mouseY\n  if (coords.startX - dx < 5 || coords.endX - dx < 5) dx = 0\n  if (coords.startY - dy < 5 || coords.endY - dy < 5) dy = 0\n  updateRegion(\n    coords.startX - dx,\n    coords.startY - dy,\n    coords.endX - dx,\n    coords.endY - dy\n  )\n}\n\nfunction createRegion() {\n  const region = document.createElement('div')\n  region.id = 'selenium-region'\n\n  const cornerSize = 20\n\n  const tlc = createHotCorner(cornerSize)\n  tlc.style.top = '-5px'\n  tlc.style.left = '-5px'\n  tlc.style.cursor = 'nw-resize'\n\n  tlc.addEventListener('mousedown', () => {\n    const canvas = document.getElementById('selenium-canvas')\n    const region = document.getElementById('selenium-region')\n    canvas.style.cursor = 'nw-resize'\n    region.style.cursor = 'nw-resize'\n    updateRegion(\n      Math.max(coords.startX, coords.endX),\n      Math.max(coords.startY, coords.endY),\n      Math.min(coords.startX, coords.endX),\n      Math.min(coords.startY, coords.endY)\n    )\n  })\n\n  region.appendChild(tlc)\n\n  const trc = createHotCorner(cornerSize)\n  trc.style.top = '-5px'\n  trc.style.right = '-5px'\n  trc.style.cursor = 'ne-resize'\n\n  trc.addEventListener('mousedown', () => {\n    const canvas = document.getElementById('selenium-canvas')\n    const region = document.getElementById('selenium-region')\n    canvas.style.cursor = 'ne-resize'\n    region.style.cursor = 'ne-resize'\n    updateRegion(\n      Math.min(coords.startX, coords.endX),\n      Math.max(coords.startY, coords.endY),\n      Math.max(coords.startX, coords.endX),\n      Math.min(coords.startY, coords.endY)\n    )\n  })\n\n  region.appendChild(trc)\n\n  const blc = createHotCorner(cornerSize)\n  blc.style.bottom = '-5px'\n  blc.style.left = '-5px'\n  blc.style.cursor = 'sw-resize'\n\n  blc.addEventListener('mousedown', () => {\n    const canvas = document.getElementById('selenium-canvas')\n    const region = document.getElementById('selenium-region')\n    canvas.style.cursor = 'sw-resize'\n    region.style.cursor = 'sw-resize'\n    updateRegion(\n      Math.max(coords.startX, coords.endX),\n      Math.min(coords.startY, coords.endY),\n      Math.min(coords.startX, coords.endX),\n      Math.max(coords.startY, coords.endY)\n    )\n  })\n\n  region.appendChild(blc)\n\n  const brc = createHotCorner(cornerSize)\n  brc.style.bottom = '-5px'\n  brc.style.right = '-5px'\n  brc.style.cursor = 'se-resize'\n\n  brc.addEventListener('mousedown', () => {\n    const canvas = document.getElementById('selenium-canvas')\n    const region = document.getElementById('selenium-region')\n    canvas.style.cursor = 'se-resize'\n    region.style.cursor = 'se-resize'\n    updateRegion(\n      Math.min(coords.startX, coords.endX),\n      Math.min(coords.startY, coords.endY),\n      Math.max(coords.startX, coords.endX),\n      Math.max(coords.startY, coords.endY)\n    )\n  })\n\n  region.appendChild(brc)\n\n  return region\n}\n\nfunction createHotCorner(size) {\n  const c = document.createElement('div')\n  c.style.position = 'absolute'\n  c.style.height = `${size}px`\n  c.style.width = `${size}px`\n\n  return c\n}\n\nfunction showButtons() {\n  const canvasRect = document\n    .getElementById('selenium-canvas')\n    .getBoundingClientRect()\n  const buttonContainer = document.getElementById('region-control-panel')\n  let top = coords.startY\n  let bottom = coords.endY\n  let left = coords.startX\n  let right = coords.endX\n  let width = right - left\n  if (canvasRect.bottom - bottom <= 100) bottom = top\n  if (width < 0) left = coords.endX\n  right = coords.startX\n  width = Math.abs(width)\n  if (width < 225) width = 225\n  buttonContainer.style.position = 'absolute'\n  buttonContainer.style.top = bottom + 'px'\n  buttonContainer.style.left = left + 'px'\n  buttonContainer.style.right = right + 'px'\n  buttonContainer.style.width = width + 'px'\n  buttonContainer.style.backgroundColor = 'rgba(0, 0, 0, 0.55)'\n  buttonContainer.style.visibility = 'visible'\n}\n\nfunction hideButtons() {\n  const buttonContainer = document.getElementById('region-control-panel')\n  buttonContainer.style.visibility = 'hidden'\n}\n\nfunction createButtons(cb) {\n  const container = document.createElement('div')\n  container.id = 'region-control-panel'\n  const buttons = document.createElement('div')\n  const confirm = document.createElement('button')\n  confirm.innerText = 'Confirm'\n  confirm.addEventListener('click', () => {\n    hideButtons()\n    removeRegion()\n    const rect = calculateRectFromCoords(coords)\n    cb(\n      `x: ${rect.left}, y: ${rect.top}, width: ${rect.width}, height: ${\n        rect.height\n      }`\n    )\n  })\n  const cancel = document.createElement('button')\n  cancel.innerText = 'Cancel'\n  cancel.addEventListener('click', () => {\n    hideButtons()\n    removeRegion()\n    cb(false)\n  })\n\n  container.style.visibility = 'hidden'\n  buttons.style.display = 'flex'\n  buttons.style.alignItems = 'center'\n  buttons.style.justifyContent = 'center'\n\n  styleButton(confirm)\n  styleButton(cancel)\n\n  buttons.appendChild(cancel)\n  buttons.appendChild(confirm)\n  container.appendChild(buttons)\n  return container\n}\n\nfunction styleButton(button) {\n  button.style.color = '#656565'\n  button.style.backgroundColor = '#F5F5F5'\n  button.style.padding = '10px 20px'\n  button.style.margin = '5px 8px'\n  button.style.borderRadius = '4px'\n  button.style.outline = '0'\n  button.style.textTransform = 'capitalize'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content/region.js","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport browser from 'webextension-polyfill'\n\nlet handler, elementForInjectingScript\nexport function attach(selenium) {\n  elementForInjectingScript = document.createElement('script')\n  elementForInjectingScript.src = browser.runtime.getURL('/assets/prompt.js')\n  ;(document.head || document.documentElement).appendChild(\n    elementForInjectingScript\n  )\n\n  if (window === window.top) {\n    handler = e => {\n      return handleMessage(e, selenium)\n    }\n    window.addEventListener('message', handler)\n  }\n}\n\nexport function detach() {\n  window.postMessage(\n    {\n      direction: 'from-content-script',\n      detach: true,\n    },\n    '*'\n  )\n  elementForInjectingScript.parentNode.removeChild(elementForInjectingScript)\n  window.removeEventListener('message', handler)\n}\n\nfunction handleMessage(event, selenium) {\n  if (\n    event.source.top == window &&\n    event.data &&\n    event.data.direction == 'from-page-script'\n  ) {\n    if (event.data.response) {\n      switch (event.data.response) {\n        case 'prompt':\n          selenium.browserbot.promptResponse = true\n          if (event.data.value)\n            selenium.browserbot.promptMessage = event.data.value\n          break\n        case 'confirm':\n          selenium.browserbot.confirmationResponse = true\n          if (event.data.value)\n            selenium.browserbot.confirmationMessage = event.data.value\n          break\n        case 'alert':\n          selenium.browserbot.alertResponse = true\n          if (event.data.value)\n            selenium.browserbot.alertMessage = event.data.value\n          break\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content/prompt-injector.js"],"sourceRoot":""}